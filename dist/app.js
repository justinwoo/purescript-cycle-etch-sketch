(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
"use strict";
function logToConsoleError(err) {
    var target = err.stack || err;
    if (console && console.error) {
        console.error(target);
    }
    else if (console && console.log) {
        console.log(target);
    }
}
function makeSinkProxies(drivers, streamAdapter) {
    var sinkProxies = {};
    for (var name_1 in drivers) {
        if (drivers.hasOwnProperty(name_1)) {
            var holdSubject = streamAdapter.makeSubject();
            var driverStreamAdapter = drivers[name_1].streamAdapter || streamAdapter;
            var stream = driverStreamAdapter.adapt(holdSubject.stream, streamAdapter.streamSubscribe);
            sinkProxies[name_1] = {
                stream: stream,
                observer: holdSubject.observer,
            };
        }
    }
    return sinkProxies;
}
function callDrivers(drivers, sinkProxies, streamAdapter) {
    var sources = {};
    for (var name_2 in drivers) {
        if (drivers.hasOwnProperty(name_2)) {
            var driverOutput = drivers[name_2](sinkProxies[name_2].stream, streamAdapter, name_2);
            var driverStreamAdapter = drivers[name_2].streamAdapter;
            if (driverStreamAdapter && driverStreamAdapter.isValidStream(driverOutput)) {
                sources[name_2] = streamAdapter.adapt(driverOutput, driverStreamAdapter.streamSubscribe);
            }
            else {
                sources[name_2] = driverOutput;
            }
            if (sources[name_2] && typeof sources[name_2] === 'object') {
                sources[name_2]._isCycleSource = name_2;
            }
        }
    }
    return sources;
}
function replicateMany(sinks, sinkProxies, streamAdapter) {
    var results = Object.keys(sinks)
        .filter(function (name) { return !!sinkProxies[name]; })
        .map(function (name) {
        return streamAdapter.streamSubscribe(sinks[name], {
            next: function (x) { sinkProxies[name].observer.next(x); },
            error: function (err) {
                logToConsoleError(err);
                sinkProxies[name].observer.error(err);
            },
            complete: function (x) {
                sinkProxies[name].observer.complete(x);
            }
        });
    });
    var disposeFunctions = results
        .filter(function (dispose) { return typeof dispose === 'function'; });
    return function () {
        disposeFunctions.forEach(function (dispose) { return dispose(); });
    };
}
function disposeSources(sources) {
    for (var k in sources) {
        if (sources.hasOwnProperty(k) && sources[k]
            && typeof sources[k].dispose === 'function') {
            sources[k].dispose();
        }
    }
}
var isObjectEmpty = function (obj) { return Object.keys(obj).length === 0; };
function Cycle(main, drivers, options) {
    if (typeof main !== "function") {
        throw new Error("First argument given to Cycle must be the 'main' " +
            "function.");
    }
    if (typeof drivers !== "object" || drivers === null) {
        throw new Error("Second argument given to Cycle must be an object " +
            "with driver functions as properties.");
    }
    if (isObjectEmpty(drivers)) {
        throw new Error("Second argument given to Cycle must be an object " +
            "with at least one driver function declared as a property.");
    }
    var streamAdapter = options.streamAdapter;
    if (!streamAdapter || isObjectEmpty(streamAdapter)) {
        throw new Error("Third argument given to Cycle must be an options object " +
            "with the streamAdapter key supplied with a valid stream adapter.");
    }
    var sinkProxies = makeSinkProxies(drivers, streamAdapter);
    var sources = callDrivers(drivers, sinkProxies, streamAdapter);
    var sinks = main(sources);
    if (typeof window !== 'undefined') {
        window.Cyclejs = { sinks: sinks };
    }
    var run = function () {
        var disposeReplication = replicateMany(sinks, sinkProxies, streamAdapter);
        return function () {
            disposeSources(sources);
            disposeReplication();
        };
    };
    return { sinks: sinks, sources: sources, run: run };
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Cycle;

},{}],3:[function(require,module,exports){
"use strict";
var xstream_1 = require('xstream');
var XStreamAdapter = {
    adapt: function (originStream, originStreamSubscribe) {
        if (XStreamAdapter.isValidStream(originStream)) {
            return originStream;
        }
        ;
        var dispose = null;
        return xstream_1.default.create({
            start: function (out) {
                var observer = out;
                dispose = originStreamSubscribe(originStream, observer);
            },
            stop: function () {
                if (typeof dispose === 'function') {
                    dispose();
                }
            },
        });
    },
    makeSubject: function () {
        var stream = xstream_1.default.create();
        var observer = {
            next: function (x) { stream.shamefullySendNext(x); },
            error: function (err) { stream.shamefullySendError(err); },
            complete: function () { stream.shamefullySendComplete(); },
        };
        return { observer: observer, stream: stream };
    },
    remember: function (stream) {
        return stream.remember();
    },
    isValidStream: function (stream) {
        return (typeof stream.addListener === 'function' &&
            typeof stream.shamefullySendNext === 'function');
    },
    streamSubscribe: function (stream, observer) {
        stream.addListener(observer);
        return function () { return stream.removeListener(observer); };
    },
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = XStreamAdapter;

},{"xstream":37}],4:[function(require,module,exports){
"use strict";
var base_1 = require('@cycle/base');
var xstream_adapter_1 = require('@cycle/xstream-adapter');
/**
 * Takes a `main` function and circularly connects it to the given collection
 * of driver functions.
 *
 * **Example:**
 * ```js
 * import {run} from '@cycle/xstream-run';
 * const dispose = run(main, drivers);
 * // ...
 * dispose();
 * ```
 *
 * The `main` function expects a collection of "source" streams (returned from
 * drivers) as input, and should return a collection of "sink" streams (to be
 * given to drivers). A "collection of streams" is a JavaScript object where
 * keys match the driver names registered by the `drivers` object, and values
 * are the streams. Refer to the documentation of each driver to see more
 * details on what types of sources it outputs and sinks it receives.
 *
 * @param {Function} main a function that takes `sources` as input and outputs
 * `sinks`.
 * @param {Object} drivers an object where keys are driver names and values
 * are driver functions.
 * @return {Function} a dispose function, used to terminate the execution of the
 * Cycle.js program, cleaning up resources used.
 * @function run
 */
function run(main, drivers) {
    var _a = base_1.default(main, drivers, { streamAdapter: xstream_adapter_1.default }), run = _a.run, sinks = _a.sinks;
    if (typeof window !== 'undefined' && window['CyclejsDevTool_startGraphSerializer']) {
        window['CyclejsDevTool_startGraphSerializer'](sinks);
    }
    return run();
}
exports.run = run;
/**
 * A function that prepares the Cycle application to be executed. Takes a `main`
 * function and prepares to circularly connects it to the given collection of
 * driver functions. As an output, `Cycle()` returns an object with three
 * properties: `sources`, `sinks` and `run`. Only when `run()` is called will
 * the application actually execute. Refer to the documentation of `run()` for
 * more details.
 *
 * **Example:**
 * ```js
 * import Cycle from '@cycle/xstream-run';
 * const {sources, sinks, run} = Cycle(main, drivers);
 * // ...
 * const dispose = run(); // Executes the application
 * // ...
 * dispose();
 * ```
 *
 * @param {Function} main a function that takes `sources` as input and outputs
 * `sinks`.
 * @param {Object} drivers an object where keys are driver names and values
 * are driver functions.
 * @return {Object} an object with three properties: `sources`, `sinks` and
 * `run`. `sources` is the collection of driver sources, `sinks` is the
 * collection of driver sinks, these can be used for debugging or testing. `run`
 * is the function that once called will execute the application.
 * @function Cycle
 */
var Cycle = function (main, drivers) {
    var out = base_1.default(main, drivers, { streamAdapter: xstream_adapter_1.default });
    if (typeof window !== 'undefined' && window['CyclejsDevTool_startGraphSerializer']) {
        window['CyclejsDevTool_startGraphSerializer'](out.sinks);
    }
    return out;
};
Cycle.run = run;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Cycle;

},{"@cycle/base":2,"@cycle/xstream-adapter":3}],5:[function(require,module,exports){
(function (global){
var topLevel = typeof global !== 'undefined' ? global :
    typeof window !== 'undefined' ? window : {}
var minDoc = require('min-document');

if (typeof document !== 'undefined') {
    module.exports = document;
} else {
    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

    if (!doccy) {
        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
    }

    module.exports = doccy;
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"min-document":1}],6:[function(require,module,exports){
"use strict";

module.exports = function isObject(x) {
	return typeof x === "object" && x !== null;
};

},{}],7:[function(require,module,exports){
module.exports = require('./lib/index');

},{"./lib/index":8}],8:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ponyfill = require('./ponyfill');

var _ponyfill2 = _interopRequireDefault(_ponyfill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var root; /* global window */


if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (typeof module !== 'undefined') {
  root = module;
} else {
  root = Function('return this')();
}

var result = (0, _ponyfill2['default'])(root);
exports['default'] = result;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./ponyfill":9}],9:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports['default'] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var _Symbol = root.Symbol;

	if (typeof _Symbol === 'function') {
		if (_Symbol.observable) {
			result = _Symbol.observable;
		} else {
			result = _Symbol('observable');
			_Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};
},{}],10:[function(require,module,exports){
var createElement = require("./vdom/create-element.js")

module.exports = createElement

},{"./vdom/create-element.js":14}],11:[function(require,module,exports){
var diff = require("./vtree/diff.js")

module.exports = diff

},{"./vtree/diff.js":31}],12:[function(require,module,exports){
var patch = require("./vdom/patch.js")

module.exports = patch

},{"./vdom/patch.js":17}],13:[function(require,module,exports){
var isObject = require("is-object")
var isHook = require("../vnode/is-vhook.js")

module.exports = applyProperties

function applyProperties(node, props, previous) {
    for (var propName in props) {
        var propValue = props[propName]

        if (propValue === undefined) {
            removeProperty(node, propName, propValue, previous);
        } else if (isHook(propValue)) {
            removeProperty(node, propName, propValue, previous)
            if (propValue.hook) {
                propValue.hook(node,
                    propName,
                    previous ? previous[propName] : undefined)
            }
        } else {
            if (isObject(propValue)) {
                patchObject(node, props, previous, propName, propValue);
            } else {
                node[propName] = propValue
            }
        }
    }
}

function removeProperty(node, propName, propValue, previous) {
    if (previous) {
        var previousValue = previous[propName]

        if (!isHook(previousValue)) {
            if (propName === "attributes") {
                for (var attrName in previousValue) {
                    node.removeAttribute(attrName)
                }
            } else if (propName === "style") {
                for (var i in previousValue) {
                    node.style[i] = ""
                }
            } else if (typeof previousValue === "string") {
                node[propName] = ""
            } else {
                node[propName] = null
            }
        } else if (previousValue.unhook) {
            previousValue.unhook(node, propName, propValue)
        }
    }
}

function patchObject(node, props, previous, propName, propValue) {
    var previousValue = previous ? previous[propName] : undefined

    // Set attributes
    if (propName === "attributes") {
        for (var attrName in propValue) {
            var attrValue = propValue[attrName]

            if (attrValue === undefined) {
                node.removeAttribute(attrName)
            } else {
                node.setAttribute(attrName, attrValue)
            }
        }

        return
    }

    if(previousValue && isObject(previousValue) &&
        getPrototype(previousValue) !== getPrototype(propValue)) {
        node[propName] = propValue
        return
    }

    if (!isObject(node[propName])) {
        node[propName] = {}
    }

    var replacer = propName === "style" ? "" : undefined

    for (var k in propValue) {
        var value = propValue[k]
        node[propName][k] = (value === undefined) ? replacer : value
    }
}

function getPrototype(value) {
    if (Object.getPrototypeOf) {
        return Object.getPrototypeOf(value)
    } else if (value.__proto__) {
        return value.__proto__
    } else if (value.constructor) {
        return value.constructor.prototype
    }
}

},{"../vnode/is-vhook.js":22,"is-object":6}],14:[function(require,module,exports){
var document = require("global/document")

var applyProperties = require("./apply-properties")

var isVNode = require("../vnode/is-vnode.js")
var isVText = require("../vnode/is-vtext.js")
var isWidget = require("../vnode/is-widget.js")
var handleThunk = require("../vnode/handle-thunk.js")

module.exports = createElement

function createElement(vnode, opts) {
    var doc = opts ? opts.document || document : document
    var warn = opts ? opts.warn : null

    vnode = handleThunk(vnode).a

    if (isWidget(vnode)) {
        return vnode.init()
    } else if (isVText(vnode)) {
        return doc.createTextNode(vnode.text)
    } else if (!isVNode(vnode)) {
        if (warn) {
            warn("Item is not a valid virtual dom node", vnode)
        }
        return null
    }

    var node = (vnode.namespace === null) ?
        doc.createElement(vnode.tagName) :
        doc.createElementNS(vnode.namespace, vnode.tagName)

    var props = vnode.properties
    applyProperties(node, props)

    var children = vnode.children

    for (var i = 0; i < children.length; i++) {
        var childNode = createElement(children[i], opts)
        if (childNode) {
            node.appendChild(childNode)
        }
    }

    return node
}

},{"../vnode/handle-thunk.js":20,"../vnode/is-vnode.js":23,"../vnode/is-vtext.js":24,"../vnode/is-widget.js":25,"./apply-properties":13,"global/document":5}],15:[function(require,module,exports){
// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.
// We don't want to read all of the DOM nodes in the tree so we use
// the in-order tree indexing to eliminate recursion down certain branches.
// We only recurse into a DOM node if we know that it contains a child of
// interest.

var noChild = {}

module.exports = domIndex

function domIndex(rootNode, tree, indices, nodes) {
    if (!indices || indices.length === 0) {
        return {}
    } else {
        indices.sort(ascending)
        return recurse(rootNode, tree, indices, nodes, 0)
    }
}

function recurse(rootNode, tree, indices, nodes, rootIndex) {
    nodes = nodes || {}


    if (rootNode) {
        if (indexInRange(indices, rootIndex, rootIndex)) {
            nodes[rootIndex] = rootNode
        }

        var vChildren = tree.children

        if (vChildren) {

            var childNodes = rootNode.childNodes

            for (var i = 0; i < tree.children.length; i++) {
                rootIndex += 1

                var vChild = vChildren[i] || noChild
                var nextIndex = rootIndex + (vChild.count || 0)

                // skip recursion down the tree if there are no nodes down here
                if (indexInRange(indices, rootIndex, nextIndex)) {
                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)
                }

                rootIndex = nextIndex
            }
        }
    }

    return nodes
}

// Binary search for an index in the interval [left, right]
function indexInRange(indices, left, right) {
    if (indices.length === 0) {
        return false
    }

    var minIndex = 0
    var maxIndex = indices.length - 1
    var currentIndex
    var currentItem

    while (minIndex <= maxIndex) {
        currentIndex = ((maxIndex + minIndex) / 2) >> 0
        currentItem = indices[currentIndex]

        if (minIndex === maxIndex) {
            return currentItem >= left && currentItem <= right
        } else if (currentItem < left) {
            minIndex = currentIndex + 1
        } else  if (currentItem > right) {
            maxIndex = currentIndex - 1
        } else {
            return true
        }
    }

    return false;
}

function ascending(a, b) {
    return a > b ? 1 : -1
}

},{}],16:[function(require,module,exports){
var applyProperties = require("./apply-properties")

var isWidget = require("../vnode/is-widget.js")
var VPatch = require("../vnode/vpatch.js")

var updateWidget = require("./update-widget")

module.exports = applyPatch

function applyPatch(vpatch, domNode, renderOptions) {
    var type = vpatch.type
    var vNode = vpatch.vNode
    var patch = vpatch.patch

    switch (type) {
        case VPatch.REMOVE:
            return removeNode(domNode, vNode)
        case VPatch.INSERT:
            return insertNode(domNode, patch, renderOptions)
        case VPatch.VTEXT:
            return stringPatch(domNode, vNode, patch, renderOptions)
        case VPatch.WIDGET:
            return widgetPatch(domNode, vNode, patch, renderOptions)
        case VPatch.VNODE:
            return vNodePatch(domNode, vNode, patch, renderOptions)
        case VPatch.ORDER:
            reorderChildren(domNode, patch)
            return domNode
        case VPatch.PROPS:
            applyProperties(domNode, patch, vNode.properties)
            return domNode
        case VPatch.THUNK:
            return replaceRoot(domNode,
                renderOptions.patch(domNode, patch, renderOptions))
        default:
            return domNode
    }
}

function removeNode(domNode, vNode) {
    var parentNode = domNode.parentNode

    if (parentNode) {
        parentNode.removeChild(domNode)
    }

    destroyWidget(domNode, vNode);

    return null
}

function insertNode(parentNode, vNode, renderOptions) {
    var newNode = renderOptions.render(vNode, renderOptions)

    if (parentNode) {
        parentNode.appendChild(newNode)
    }

    return parentNode
}

function stringPatch(domNode, leftVNode, vText, renderOptions) {
    var newNode

    if (domNode.nodeType === 3) {
        domNode.replaceData(0, domNode.length, vText.text)
        newNode = domNode
    } else {
        var parentNode = domNode.parentNode
        newNode = renderOptions.render(vText, renderOptions)

        if (parentNode && newNode !== domNode) {
            parentNode.replaceChild(newNode, domNode)
        }
    }

    return newNode
}

function widgetPatch(domNode, leftVNode, widget, renderOptions) {
    var updating = updateWidget(leftVNode, widget)
    var newNode

    if (updating) {
        newNode = widget.update(leftVNode, domNode) || domNode
    } else {
        newNode = renderOptions.render(widget, renderOptions)
    }

    var parentNode = domNode.parentNode

    if (parentNode && newNode !== domNode) {
        parentNode.replaceChild(newNode, domNode)
    }

    if (!updating) {
        destroyWidget(domNode, leftVNode)
    }

    return newNode
}

function vNodePatch(domNode, leftVNode, vNode, renderOptions) {
    var parentNode = domNode.parentNode
    var newNode = renderOptions.render(vNode, renderOptions)

    if (parentNode && newNode !== domNode) {
        parentNode.replaceChild(newNode, domNode)
    }

    return newNode
}

function destroyWidget(domNode, w) {
    if (typeof w.destroy === "function" && isWidget(w)) {
        w.destroy(domNode)
    }
}

function reorderChildren(domNode, moves) {
    var childNodes = domNode.childNodes
    var keyMap = {}
    var node
    var remove
    var insert

    for (var i = 0; i < moves.removes.length; i++) {
        remove = moves.removes[i]
        node = childNodes[remove.from]
        if (remove.key) {
            keyMap[remove.key] = node
        }
        domNode.removeChild(node)
    }

    var length = childNodes.length
    for (var j = 0; j < moves.inserts.length; j++) {
        insert = moves.inserts[j]
        node = keyMap[insert.key]
        // this is the weirdest bug i've ever seen in webkit
        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])
    }
}

function replaceRoot(oldRoot, newRoot) {
    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {
        oldRoot.parentNode.replaceChild(newRoot, oldRoot)
    }

    return newRoot;
}

},{"../vnode/is-widget.js":25,"../vnode/vpatch.js":28,"./apply-properties":13,"./update-widget":18}],17:[function(require,module,exports){
var document = require("global/document")
var isArray = require("x-is-array")

var render = require("./create-element")
var domIndex = require("./dom-index")
var patchOp = require("./patch-op")
module.exports = patch

function patch(rootNode, patches, renderOptions) {
    renderOptions = renderOptions || {}
    renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch
        ? renderOptions.patch
        : patchRecursive
    renderOptions.render = renderOptions.render || render

    return renderOptions.patch(rootNode, patches, renderOptions)
}

function patchRecursive(rootNode, patches, renderOptions) {
    var indices = patchIndices(patches)

    if (indices.length === 0) {
        return rootNode
    }

    var index = domIndex(rootNode, patches.a, indices)
    var ownerDocument = rootNode.ownerDocument

    if (!renderOptions.document && ownerDocument !== document) {
        renderOptions.document = ownerDocument
    }

    for (var i = 0; i < indices.length; i++) {
        var nodeIndex = indices[i]
        rootNode = applyPatch(rootNode,
            index[nodeIndex],
            patches[nodeIndex],
            renderOptions)
    }

    return rootNode
}

function applyPatch(rootNode, domNode, patchList, renderOptions) {
    if (!domNode) {
        return rootNode
    }

    var newNode

    if (isArray(patchList)) {
        for (var i = 0; i < patchList.length; i++) {
            newNode = patchOp(patchList[i], domNode, renderOptions)

            if (domNode === rootNode) {
                rootNode = newNode
            }
        }
    } else {
        newNode = patchOp(patchList, domNode, renderOptions)

        if (domNode === rootNode) {
            rootNode = newNode
        }
    }

    return rootNode
}

function patchIndices(patches) {
    var indices = []

    for (var key in patches) {
        if (key !== "a") {
            indices.push(Number(key))
        }
    }

    return indices
}

},{"./create-element":14,"./dom-index":15,"./patch-op":16,"global/document":5,"x-is-array":32}],18:[function(require,module,exports){
var isWidget = require("../vnode/is-widget.js")

module.exports = updateWidget

function updateWidget(a, b) {
    if (isWidget(a) && isWidget(b)) {
        if ("name" in a && "name" in b) {
            return a.id === b.id
        } else {
            return a.init === b.init
        }
    }

    return false
}

},{"../vnode/is-widget.js":25}],19:[function(require,module,exports){
'use strict';

module.exports = SoftSetHook;

function SoftSetHook(value) {
    if (!(this instanceof SoftSetHook)) {
        return new SoftSetHook(value);
    }

    this.value = value;
}

SoftSetHook.prototype.hook = function (node, propertyName) {
    if (node[propertyName] !== this.value) {
        node[propertyName] = this.value;
    }
};

},{}],20:[function(require,module,exports){
var isVNode = require("./is-vnode")
var isVText = require("./is-vtext")
var isWidget = require("./is-widget")
var isThunk = require("./is-thunk")

module.exports = handleThunk

function handleThunk(a, b) {
    var renderedA = a
    var renderedB = b

    if (isThunk(b)) {
        renderedB = renderThunk(b, a)
    }

    if (isThunk(a)) {
        renderedA = renderThunk(a, null)
    }

    return {
        a: renderedA,
        b: renderedB
    }
}

function renderThunk(thunk, previous) {
    var renderedThunk = thunk.vnode

    if (!renderedThunk) {
        renderedThunk = thunk.vnode = thunk.render(previous)
    }

    if (!(isVNode(renderedThunk) ||
            isVText(renderedThunk) ||
            isWidget(renderedThunk))) {
        throw new Error("thunk did not return a valid node");
    }

    return renderedThunk
}

},{"./is-thunk":21,"./is-vnode":23,"./is-vtext":24,"./is-widget":25}],21:[function(require,module,exports){
module.exports = isThunk

function isThunk(t) {
    return t && t.type === "Thunk"
}

},{}],22:[function(require,module,exports){
module.exports = isHook

function isHook(hook) {
    return hook &&
      (typeof hook.hook === "function" && !hook.hasOwnProperty("hook") ||
       typeof hook.unhook === "function" && !hook.hasOwnProperty("unhook"))
}

},{}],23:[function(require,module,exports){
var version = require("./version")

module.exports = isVirtualNode

function isVirtualNode(x) {
    return x && x.type === "VirtualNode" && x.version === version
}

},{"./version":26}],24:[function(require,module,exports){
var version = require("./version")

module.exports = isVirtualText

function isVirtualText(x) {
    return x && x.type === "VirtualText" && x.version === version
}

},{"./version":26}],25:[function(require,module,exports){
module.exports = isWidget

function isWidget(w) {
    return w && w.type === "Widget"
}

},{}],26:[function(require,module,exports){
module.exports = "2"

},{}],27:[function(require,module,exports){
var version = require("./version")
var isVNode = require("./is-vnode")
var isWidget = require("./is-widget")
var isThunk = require("./is-thunk")
var isVHook = require("./is-vhook")

module.exports = VirtualNode

var noProperties = {}
var noChildren = []

function VirtualNode(tagName, properties, children, key, namespace) {
    this.tagName = tagName
    this.properties = properties || noProperties
    this.children = children || noChildren
    this.key = key != null ? String(key) : undefined
    this.namespace = (typeof namespace === "string") ? namespace : null

    var count = (children && children.length) || 0
    var descendants = 0
    var hasWidgets = false
    var hasThunks = false
    var descendantHooks = false
    var hooks

    for (var propName in properties) {
        if (properties.hasOwnProperty(propName)) {
            var property = properties[propName]
            if (isVHook(property) && property.unhook) {
                if (!hooks) {
                    hooks = {}
                }

                hooks[propName] = property
            }
        }
    }

    for (var i = 0; i < count; i++) {
        var child = children[i]
        if (isVNode(child)) {
            descendants += child.count || 0

            if (!hasWidgets && child.hasWidgets) {
                hasWidgets = true
            }

            if (!hasThunks && child.hasThunks) {
                hasThunks = true
            }

            if (!descendantHooks && (child.hooks || child.descendantHooks)) {
                descendantHooks = true
            }
        } else if (!hasWidgets && isWidget(child)) {
            if (typeof child.destroy === "function") {
                hasWidgets = true
            }
        } else if (!hasThunks && isThunk(child)) {
            hasThunks = true;
        }
    }

    this.count = count + descendants
    this.hasWidgets = hasWidgets
    this.hasThunks = hasThunks
    this.hooks = hooks
    this.descendantHooks = descendantHooks
}

VirtualNode.prototype.version = version
VirtualNode.prototype.type = "VirtualNode"

},{"./is-thunk":21,"./is-vhook":22,"./is-vnode":23,"./is-widget":25,"./version":26}],28:[function(require,module,exports){
var version = require("./version")

VirtualPatch.NONE = 0
VirtualPatch.VTEXT = 1
VirtualPatch.VNODE = 2
VirtualPatch.WIDGET = 3
VirtualPatch.PROPS = 4
VirtualPatch.ORDER = 5
VirtualPatch.INSERT = 6
VirtualPatch.REMOVE = 7
VirtualPatch.THUNK = 8

module.exports = VirtualPatch

function VirtualPatch(type, vNode, patch) {
    this.type = Number(type)
    this.vNode = vNode
    this.patch = patch
}

VirtualPatch.prototype.version = version
VirtualPatch.prototype.type = "VirtualPatch"

},{"./version":26}],29:[function(require,module,exports){
var version = require("./version")

module.exports = VirtualText

function VirtualText(text) {
    this.text = String(text)
}

VirtualText.prototype.version = version
VirtualText.prototype.type = "VirtualText"

},{"./version":26}],30:[function(require,module,exports){
var isObject = require("is-object")
var isHook = require("../vnode/is-vhook")

module.exports = diffProps

function diffProps(a, b) {
    var diff

    for (var aKey in a) {
        if (!(aKey in b)) {
            diff = diff || {}
            diff[aKey] = undefined
        }

        var aValue = a[aKey]
        var bValue = b[aKey]

        if (aValue === bValue) {
            continue
        } else if (isObject(aValue) && isObject(bValue)) {
            if (getPrototype(bValue) !== getPrototype(aValue)) {
                diff = diff || {}
                diff[aKey] = bValue
            } else if (isHook(bValue)) {
                 diff = diff || {}
                 diff[aKey] = bValue
            } else {
                var objectDiff = diffProps(aValue, bValue)
                if (objectDiff) {
                    diff = diff || {}
                    diff[aKey] = objectDiff
                }
            }
        } else {
            diff = diff || {}
            diff[aKey] = bValue
        }
    }

    for (var bKey in b) {
        if (!(bKey in a)) {
            diff = diff || {}
            diff[bKey] = b[bKey]
        }
    }

    return diff
}

function getPrototype(value) {
  if (Object.getPrototypeOf) {
    return Object.getPrototypeOf(value)
  } else if (value.__proto__) {
    return value.__proto__
  } else if (value.constructor) {
    return value.constructor.prototype
  }
}

},{"../vnode/is-vhook":22,"is-object":6}],31:[function(require,module,exports){
var isArray = require("x-is-array")

var VPatch = require("../vnode/vpatch")
var isVNode = require("../vnode/is-vnode")
var isVText = require("../vnode/is-vtext")
var isWidget = require("../vnode/is-widget")
var isThunk = require("../vnode/is-thunk")
var handleThunk = require("../vnode/handle-thunk")

var diffProps = require("./diff-props")

module.exports = diff

function diff(a, b) {
    var patch = { a: a }
    walk(a, b, patch, 0)
    return patch
}

function walk(a, b, patch, index) {
    if (a === b) {
        return
    }

    var apply = patch[index]
    var applyClear = false

    if (isThunk(a) || isThunk(b)) {
        thunks(a, b, patch, index)
    } else if (b == null) {

        // If a is a widget we will add a remove patch for it
        // Otherwise any child widgets/hooks must be destroyed.
        // This prevents adding two remove patches for a widget.
        if (!isWidget(a)) {
            clearState(a, patch, index)
            apply = patch[index]
        }

        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))
    } else if (isVNode(b)) {
        if (isVNode(a)) {
            if (a.tagName === b.tagName &&
                a.namespace === b.namespace &&
                a.key === b.key) {
                var propsPatch = diffProps(a.properties, b.properties)
                if (propsPatch) {
                    apply = appendPatch(apply,
                        new VPatch(VPatch.PROPS, a, propsPatch))
                }
                apply = diffChildren(a, b, patch, apply, index)
            } else {
                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
                applyClear = true
            }
        } else {
            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
            applyClear = true
        }
    } else if (isVText(b)) {
        if (!isVText(a)) {
            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
            applyClear = true
        } else if (a.text !== b.text) {
            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
        }
    } else if (isWidget(b)) {
        if (!isWidget(a)) {
            applyClear = true
        }

        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))
    }

    if (apply) {
        patch[index] = apply
    }

    if (applyClear) {
        clearState(a, patch, index)
    }
}

function diffChildren(a, b, patch, apply, index) {
    var aChildren = a.children
    var orderedSet = reorder(aChildren, b.children)
    var bChildren = orderedSet.children

    var aLen = aChildren.length
    var bLen = bChildren.length
    var len = aLen > bLen ? aLen : bLen

    for (var i = 0; i < len; i++) {
        var leftNode = aChildren[i]
        var rightNode = bChildren[i]
        index += 1

        if (!leftNode) {
            if (rightNode) {
                // Excess nodes in b need to be added
                apply = appendPatch(apply,
                    new VPatch(VPatch.INSERT, null, rightNode))
            }
        } else {
            walk(leftNode, rightNode, patch, index)
        }

        if (isVNode(leftNode) && leftNode.count) {
            index += leftNode.count
        }
    }

    if (orderedSet.moves) {
        // Reorder nodes last
        apply = appendPatch(apply, new VPatch(
            VPatch.ORDER,
            a,
            orderedSet.moves
        ))
    }

    return apply
}

function clearState(vNode, patch, index) {
    // TODO: Make this a single walk, not two
    unhook(vNode, patch, index)
    destroyWidgets(vNode, patch, index)
}

// Patch records for all destroyed widgets must be added because we need
// a DOM node reference for the destroy function
function destroyWidgets(vNode, patch, index) {
    if (isWidget(vNode)) {
        if (typeof vNode.destroy === "function") {
            patch[index] = appendPatch(
                patch[index],
                new VPatch(VPatch.REMOVE, vNode, null)
            )
        }
    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {
        var children = vNode.children
        var len = children.length
        for (var i = 0; i < len; i++) {
            var child = children[i]
            index += 1

            destroyWidgets(child, patch, index)

            if (isVNode(child) && child.count) {
                index += child.count
            }
        }
    } else if (isThunk(vNode)) {
        thunks(vNode, null, patch, index)
    }
}

// Create a sub-patch for thunks
function thunks(a, b, patch, index) {
    var nodes = handleThunk(a, b)
    var thunkPatch = diff(nodes.a, nodes.b)
    if (hasPatches(thunkPatch)) {
        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)
    }
}

function hasPatches(patch) {
    for (var index in patch) {
        if (index !== "a") {
            return true
        }
    }

    return false
}

// Execute hooks when two nodes are identical
function unhook(vNode, patch, index) {
    if (isVNode(vNode)) {
        if (vNode.hooks) {
            patch[index] = appendPatch(
                patch[index],
                new VPatch(
                    VPatch.PROPS,
                    vNode,
                    undefinedKeys(vNode.hooks)
                )
            )
        }

        if (vNode.descendantHooks || vNode.hasThunks) {
            var children = vNode.children
            var len = children.length
            for (var i = 0; i < len; i++) {
                var child = children[i]
                index += 1

                unhook(child, patch, index)

                if (isVNode(child) && child.count) {
                    index += child.count
                }
            }
        }
    } else if (isThunk(vNode)) {
        thunks(vNode, null, patch, index)
    }
}

function undefinedKeys(obj) {
    var result = {}

    for (var key in obj) {
        result[key] = undefined
    }

    return result
}

// List diff, naive left to right reordering
function reorder(aChildren, bChildren) {
    // O(M) time, O(M) memory
    var bChildIndex = keyIndex(bChildren)
    var bKeys = bChildIndex.keys
    var bFree = bChildIndex.free

    if (bFree.length === bChildren.length) {
        return {
            children: bChildren,
            moves: null
        }
    }

    // O(N) time, O(N) memory
    var aChildIndex = keyIndex(aChildren)
    var aKeys = aChildIndex.keys
    var aFree = aChildIndex.free

    if (aFree.length === aChildren.length) {
        return {
            children: bChildren,
            moves: null
        }
    }

    // O(MAX(N, M)) memory
    var newChildren = []

    var freeIndex = 0
    var freeCount = bFree.length
    var deletedItems = 0

    // Iterate through a and match a node in b
    // O(N) time,
    for (var i = 0 ; i < aChildren.length; i++) {
        var aItem = aChildren[i]
        var itemIndex

        if (aItem.key) {
            if (bKeys.hasOwnProperty(aItem.key)) {
                // Match up the old keys
                itemIndex = bKeys[aItem.key]
                newChildren.push(bChildren[itemIndex])

            } else {
                // Remove old keyed items
                itemIndex = i - deletedItems++
                newChildren.push(null)
            }
        } else {
            // Match the item in a with the next free item in b
            if (freeIndex < freeCount) {
                itemIndex = bFree[freeIndex++]
                newChildren.push(bChildren[itemIndex])
            } else {
                // There are no free items in b to match with
                // the free items in a, so the extra free nodes
                // are deleted.
                itemIndex = i - deletedItems++
                newChildren.push(null)
            }
        }
    }

    var lastFreeIndex = freeIndex >= bFree.length ?
        bChildren.length :
        bFree[freeIndex]

    // Iterate through b and append any new keys
    // O(M) time
    for (var j = 0; j < bChildren.length; j++) {
        var newItem = bChildren[j]

        if (newItem.key) {
            if (!aKeys.hasOwnProperty(newItem.key)) {
                // Add any new keyed items
                // We are adding new items to the end and then sorting them
                // in place. In future we should insert new items in place.
                newChildren.push(newItem)
            }
        } else if (j >= lastFreeIndex) {
            // Add any leftover non-keyed items
            newChildren.push(newItem)
        }
    }

    var simulate = newChildren.slice()
    var simulateIndex = 0
    var removes = []
    var inserts = []
    var simulateItem

    for (var k = 0; k < bChildren.length;) {
        var wantedItem = bChildren[k]
        simulateItem = simulate[simulateIndex]

        // remove items
        while (simulateItem === null && simulate.length) {
            removes.push(remove(simulate, simulateIndex, null))
            simulateItem = simulate[simulateIndex]
        }

        if (!simulateItem || simulateItem.key !== wantedItem.key) {
            // if we need a key in this position...
            if (wantedItem.key) {
                if (simulateItem && simulateItem.key) {
                    // if an insert doesn't put this key in place, it needs to move
                    if (bKeys[simulateItem.key] !== k + 1) {
                        removes.push(remove(simulate, simulateIndex, simulateItem.key))
                        simulateItem = simulate[simulateIndex]
                        // if the remove didn't put the wanted item in place, we need to insert it
                        if (!simulateItem || simulateItem.key !== wantedItem.key) {
                            inserts.push({key: wantedItem.key, to: k})
                        }
                        // items are matching, so skip ahead
                        else {
                            simulateIndex++
                        }
                    }
                    else {
                        inserts.push({key: wantedItem.key, to: k})
                    }
                }
                else {
                    inserts.push({key: wantedItem.key, to: k})
                }
                k++
            }
            // a key in simulate has no matching wanted key, remove it
            else if (simulateItem && simulateItem.key) {
                removes.push(remove(simulate, simulateIndex, simulateItem.key))
            }
        }
        else {
            simulateIndex++
            k++
        }
    }

    // remove all the remaining nodes from simulate
    while(simulateIndex < simulate.length) {
        simulateItem = simulate[simulateIndex]
        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))
    }

    // If the only moves we have are deletes then we can just
    // let the delete patch remove these items.
    if (removes.length === deletedItems && !inserts.length) {
        return {
            children: newChildren,
            moves: null
        }
    }

    return {
        children: newChildren,
        moves: {
            removes: removes,
            inserts: inserts
        }
    }
}

function remove(arr, index, key) {
    arr.splice(index, 1)

    return {
        from: index,
        key: key
    }
}

function keyIndex(children) {
    var keys = {}
    var free = []
    var length = children.length

    for (var i = 0; i < length; i++) {
        var child = children[i]

        if (child.key) {
            keys[child.key] = i
        } else {
            free.push(i)
        }
    }

    return {
        keys: keys,     // A hash of key name to index
        free: free      // An array of unkeyed item indices
    }
}

function appendPatch(apply, patch) {
    if (apply) {
        if (isArray(apply)) {
            apply.push(patch)
        } else {
            apply = [apply, patch]
        }

        return apply
    } else {
        return patch
    }
}

},{"../vnode/handle-thunk":20,"../vnode/is-thunk":21,"../vnode/is-vnode":23,"../vnode/is-vtext":24,"../vnode/is-widget":25,"../vnode/vpatch":28,"./diff-props":30,"x-is-array":32}],32:[function(require,module,exports){
var nativeIsArray = Array.isArray
var toString = Object.prototype.toString

module.exports = nativeIsArray || isArray

function isArray(obj) {
    return toString.call(obj) === "[object Array]"
}

},{}],33:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var symbol_observable_1 = require('symbol-observable');
var NO = {};
function noop() { }
function copy(a) {
    var l = a.length;
    var b = Array(l);
    for (var i = 0; i < l; ++i) {
        b[i] = a[i];
    }
    return b;
}
exports.NO_IL = {
    _n: noop,
    _e: noop,
    _c: noop,
};
// mutates the input
function internalizeProducer(producer) {
    producer._start =
        function _start(il) {
            il.next = il._n;
            il.error = il._e;
            il.complete = il._c;
            this.start(il);
        };
    producer._stop = producer.stop;
}
function and(f1, f2) {
    return function andFn(t) {
        return f1(t) && f2(t);
    };
}
var Subscription = (function () {
    function Subscription(_stream, _listener) {
        this._stream = _stream;
        this._listener = _listener;
    }
    Subscription.prototype.unsubscribe = function () {
        this._stream.removeListener(this._listener);
    };
    return Subscription;
}());
exports.Subscription = Subscription;
var ObservableProducer = (function () {
    function ObservableProducer(observable) {
        this.type = 'fromObservable';
        this.ins = observable;
    }
    ObservableProducer.prototype._start = function (out) {
        this.out = out;
        this._subscription = this.ins.subscribe(new ObservableListener(out));
    };
    ObservableProducer.prototype._stop = function () {
        this._subscription.unsubscribe();
    };
    return ObservableProducer;
}());
var ObservableListener = (function () {
    function ObservableListener(_listener) {
        this._listener = _listener;
    }
    ObservableListener.prototype.next = function (value) {
        this._listener._n(value);
    };
    ObservableListener.prototype.error = function (err) {
        this._listener._e(err);
    };
    ObservableListener.prototype.complete = function () {
        this._listener._c();
    };
    return ObservableListener;
}());
var MergeProducer = (function () {
    function MergeProducer(insArr) {
        this.type = 'merge';
        this.insArr = insArr;
        this.out = NO;
        this.ac = 0;
    }
    MergeProducer.prototype._start = function (out) {
        this.out = out;
        var s = this.insArr;
        var L = s.length;
        this.ac = L;
        for (var i = 0; i < L; i++) {
            s[i]._add(this);
        }
    };
    MergeProducer.prototype._stop = function () {
        var s = this.insArr;
        var L = s.length;
        for (var i = 0; i < L; i++) {
            s[i]._remove(this);
        }
        this.out = NO;
    };
    MergeProducer.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        u._n(t);
    };
    MergeProducer.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    MergeProducer.prototype._c = function () {
        if (--this.ac <= 0) {
            var u = this.out;
            if (u === NO)
                return;
            u._c();
        }
    };
    return MergeProducer;
}());
exports.MergeProducer = MergeProducer;
var CombineListener = (function () {
    function CombineListener(i, out, p) {
        this.i = i;
        this.out = out;
        this.p = p;
        p.ils.push(this);
    }
    CombineListener.prototype._n = function (t) {
        var p = this.p, out = this.out;
        if (out === NO)
            return;
        if (p.up(t, this.i)) {
            out._n(p.vals);
        }
    };
    CombineListener.prototype._e = function (err) {
        var out = this.out;
        if (out === NO)
            return;
        out._e(err);
    };
    CombineListener.prototype._c = function () {
        var p = this.p;
        if (p.out === NO)
            return;
        if (--p.Nc === 0) {
            p.out._c();
        }
    };
    return CombineListener;
}());
exports.CombineListener = CombineListener;
var CombineProducer = (function () {
    function CombineProducer(insArr) {
        this.type = 'combine';
        this.insArr = insArr;
        this.out = NO;
        this.ils = [];
        this.Nc = this.Nn = 0;
        this.vals = [];
    }
    CombineProducer.prototype.up = function (t, i) {
        var v = this.vals[i];
        var Nn = !this.Nn ? 0 : v === NO ? --this.Nn : this.Nn;
        this.vals[i] = t;
        return Nn === 0;
    };
    CombineProducer.prototype._start = function (out) {
        this.out = out;
        var s = this.insArr;
        var n = this.Nc = this.Nn = s.length;
        var vals = this.vals = new Array(n);
        if (n === 0) {
            out._n([]);
            out._c();
        }
        else {
            for (var i = 0; i < n; i++) {
                vals[i] = NO;
                s[i]._add(new CombineListener(i, out, this));
            }
        }
    };
    CombineProducer.prototype._stop = function () {
        var s = this.insArr;
        var n = s.length;
        var ils = this.ils;
        for (var i = 0; i < n; i++) {
            s[i]._remove(ils[i]);
        }
        this.out = NO;
        this.ils = [];
        this.vals = [];
    };
    return CombineProducer;
}());
exports.CombineProducer = CombineProducer;
var FromArrayProducer = (function () {
    function FromArrayProducer(a) {
        this.type = 'fromArray';
        this.a = a;
    }
    FromArrayProducer.prototype._start = function (out) {
        var a = this.a;
        for (var i = 0, l = a.length; i < l; i++) {
            out._n(a[i]);
        }
        out._c();
    };
    FromArrayProducer.prototype._stop = function () {
    };
    return FromArrayProducer;
}());
exports.FromArrayProducer = FromArrayProducer;
var FromPromiseProducer = (function () {
    function FromPromiseProducer(p) {
        this.type = 'fromPromise';
        this.on = false;
        this.p = p;
    }
    FromPromiseProducer.prototype._start = function (out) {
        var prod = this;
        this.on = true;
        this.p.then(function (v) {
            if (prod.on) {
                out._n(v);
                out._c();
            }
        }, function (e) {
            out._e(e);
        }).then(noop, function (err) {
            setTimeout(function () { throw err; });
        });
    };
    FromPromiseProducer.prototype._stop = function () {
        this.on = false;
    };
    return FromPromiseProducer;
}());
exports.FromPromiseProducer = FromPromiseProducer;
var PeriodicProducer = (function () {
    function PeriodicProducer(period) {
        this.type = 'periodic';
        this.period = period;
        this.intervalID = -1;
        this.i = 0;
    }
    PeriodicProducer.prototype._start = function (stream) {
        var self = this;
        function intervalHandler() { stream._n(self.i++); }
        this.intervalID = setInterval(intervalHandler, this.period);
    };
    PeriodicProducer.prototype._stop = function () {
        if (this.intervalID !== -1)
            clearInterval(this.intervalID);
        this.intervalID = -1;
        this.i = 0;
    };
    return PeriodicProducer;
}());
exports.PeriodicProducer = PeriodicProducer;
var DebugOperator = (function () {
    function DebugOperator(ins, arg) {
        this.type = 'debug';
        this.ins = ins;
        this.out = NO;
        this.s = noop;
        this.l = '';
        if (typeof arg === 'string') {
            this.l = arg;
        }
        else if (typeof arg === 'function') {
            this.s = arg;
        }
    }
    DebugOperator.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    DebugOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    DebugOperator.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        var s = this.s, l = this.l;
        if (s !== noop) {
            try {
                s(t);
            }
            catch (e) {
                u._e(e);
            }
        }
        else if (l) {
            console.log(l + ':', t);
        }
        else {
            console.log(t);
        }
        u._n(t);
    };
    DebugOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    DebugOperator.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return DebugOperator;
}());
exports.DebugOperator = DebugOperator;
var DropOperator = (function () {
    function DropOperator(max, ins) {
        this.type = 'drop';
        this.ins = ins;
        this.out = NO;
        this.max = max;
        this.dropped = 0;
    }
    DropOperator.prototype._start = function (out) {
        this.out = out;
        this.dropped = 0;
        this.ins._add(this);
    };
    DropOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    DropOperator.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        if (this.dropped++ >= this.max)
            u._n(t);
    };
    DropOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    DropOperator.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return DropOperator;
}());
exports.DropOperator = DropOperator;
var OtherIL = (function () {
    function OtherIL(out, op) {
        this.out = out;
        this.op = op;
    }
    OtherIL.prototype._n = function (t) {
        this.op.end();
    };
    OtherIL.prototype._e = function (err) {
        this.out._e(err);
    };
    OtherIL.prototype._c = function () {
        this.op.end();
    };
    return OtherIL;
}());
var EndWhenOperator = (function () {
    function EndWhenOperator(o, ins) {
        this.type = 'endWhen';
        this.ins = ins;
        this.out = NO;
        this.o = o;
        this.oil = exports.NO_IL;
    }
    EndWhenOperator.prototype._start = function (out) {
        this.out = out;
        this.o._add(this.oil = new OtherIL(out, this));
        this.ins._add(this);
    };
    EndWhenOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.o._remove(this.oil);
        this.out = NO;
        this.oil = exports.NO_IL;
    };
    EndWhenOperator.prototype.end = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    EndWhenOperator.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        u._n(t);
    };
    EndWhenOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    EndWhenOperator.prototype._c = function () {
        this.end();
    };
    return EndWhenOperator;
}());
exports.EndWhenOperator = EndWhenOperator;
var FilterOperator = (function () {
    function FilterOperator(passes, ins) {
        this.type = 'filter';
        this.ins = ins;
        this.out = NO;
        this.passes = passes;
    }
    FilterOperator.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    FilterOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    FilterOperator.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        try {
            if (this.passes(t))
                u._n(t);
        }
        catch (e) {
            u._e(e);
        }
    };
    FilterOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    FilterOperator.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return FilterOperator;
}());
exports.FilterOperator = FilterOperator;
var FlattenListener = (function () {
    function FlattenListener(out, op) {
        this.out = out;
        this.op = op;
    }
    FlattenListener.prototype._n = function (t) {
        this.out._n(t);
    };
    FlattenListener.prototype._e = function (err) {
        this.out._e(err);
    };
    FlattenListener.prototype._c = function () {
        this.op.inner = NO;
        this.op.less();
    };
    return FlattenListener;
}());
var FlattenOperator = (function () {
    function FlattenOperator(ins) {
        this.type = 'flatten';
        this.ins = ins;
        this.out = NO;
        this.open = true;
        this.inner = NO;
        this.il = exports.NO_IL;
    }
    FlattenOperator.prototype._start = function (out) {
        this.out = out;
        this.open = true;
        this.inner = NO;
        this.il = exports.NO_IL;
        this.ins._add(this);
    };
    FlattenOperator.prototype._stop = function () {
        this.ins._remove(this);
        if (this.inner !== NO)
            this.inner._remove(this.il);
        this.out = NO;
        this.open = true;
        this.inner = NO;
        this.il = exports.NO_IL;
    };
    FlattenOperator.prototype.less = function () {
        var u = this.out;
        if (u === NO)
            return;
        if (!this.open && this.inner === NO)
            u._c();
    };
    FlattenOperator.prototype._n = function (s) {
        var u = this.out;
        if (u === NO)
            return;
        var _a = this, inner = _a.inner, il = _a.il;
        if (inner !== NO && il !== exports.NO_IL)
            inner._remove(il);
        (this.inner = s)._add(this.il = new FlattenListener(u, this));
    };
    FlattenOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    FlattenOperator.prototype._c = function () {
        this.open = false;
        this.less();
    };
    return FlattenOperator;
}());
exports.FlattenOperator = FlattenOperator;
var FoldOperator = (function () {
    function FoldOperator(f, seed, ins) {
        this.type = 'fold';
        this.ins = ins;
        this.out = NO;
        this.f = f;
        this.acc = this.seed = seed;
    }
    FoldOperator.prototype._start = function (out) {
        this.out = out;
        this.acc = this.seed;
        out._n(this.acc);
        this.ins._add(this);
    };
    FoldOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
        this.acc = this.seed;
    };
    FoldOperator.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        try {
            u._n(this.acc = this.f(this.acc, t));
        }
        catch (e) {
            u._e(e);
        }
    };
    FoldOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    FoldOperator.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return FoldOperator;
}());
exports.FoldOperator = FoldOperator;
var LastOperator = (function () {
    function LastOperator(ins) {
        this.type = 'last';
        this.ins = ins;
        this.out = NO;
        this.has = false;
        this.val = NO;
    }
    LastOperator.prototype._start = function (out) {
        this.out = out;
        this.has = false;
        this.ins._add(this);
    };
    LastOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
        this.val = NO;
    };
    LastOperator.prototype._n = function (t) {
        this.has = true;
        this.val = t;
    };
    LastOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    LastOperator.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        if (this.has) {
            u._n(this.val);
            u._c();
        }
        else {
            u._e('TODO show proper error');
        }
    };
    return LastOperator;
}());
exports.LastOperator = LastOperator;
var MapFlattenInner = (function () {
    function MapFlattenInner(out, op) {
        this.out = out;
        this.op = op;
    }
    MapFlattenInner.prototype._n = function (r) {
        this.out._n(r);
    };
    MapFlattenInner.prototype._e = function (err) {
        this.out._e(err);
    };
    MapFlattenInner.prototype._c = function () {
        this.op.inner = NO;
        this.op.less();
    };
    return MapFlattenInner;
}());
var MapFlattenOperator = (function () {
    function MapFlattenOperator(mapOp) {
        this.type = mapOp.type + "+flatten";
        this.ins = mapOp.ins;
        this.out = NO;
        this.mapOp = mapOp;
        this.inner = NO;
        this.il = exports.NO_IL;
        this.open = true;
    }
    MapFlattenOperator.prototype._start = function (out) {
        this.out = out;
        this.inner = NO;
        this.il = exports.NO_IL;
        this.open = true;
        this.mapOp.ins._add(this);
    };
    MapFlattenOperator.prototype._stop = function () {
        this.mapOp.ins._remove(this);
        if (this.inner !== NO)
            this.inner._remove(this.il);
        this.out = NO;
        this.inner = NO;
        this.il = exports.NO_IL;
    };
    MapFlattenOperator.prototype.less = function () {
        if (!this.open && this.inner === NO) {
            var u = this.out;
            if (u === NO)
                return;
            u._c();
        }
    };
    MapFlattenOperator.prototype._n = function (v) {
        var u = this.out;
        if (u === NO)
            return;
        var _a = this, inner = _a.inner, il = _a.il;
        var s;
        try {
            s = this.mapOp.project(v);
        }
        catch (e) {
            u._e(e);
            return;
        }
        if (inner !== NO && il !== exports.NO_IL)
            inner._remove(il);
        (this.inner = s)._add(this.il = new MapFlattenInner(u, this));
    };
    MapFlattenOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    MapFlattenOperator.prototype._c = function () {
        this.open = false;
        this.less();
    };
    return MapFlattenOperator;
}());
exports.MapFlattenOperator = MapFlattenOperator;
var MapOperator = (function () {
    function MapOperator(project, ins) {
        this.type = 'map';
        this.ins = ins;
        this.out = NO;
        this.project = project;
    }
    MapOperator.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    MapOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    MapOperator.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        try {
            u._n(this.project(t));
        }
        catch (e) {
            u._e(e);
        }
    };
    MapOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    MapOperator.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return MapOperator;
}());
exports.MapOperator = MapOperator;
var FilterMapOperator = (function (_super) {
    __extends(FilterMapOperator, _super);
    function FilterMapOperator(passes, project, ins) {
        _super.call(this, project, ins);
        this.type = 'filter+map';
        this.passes = passes;
    }
    FilterMapOperator.prototype._n = function (t) {
        if (!this.passes(t))
            return;
        var u = this.out;
        if (u === NO)
            return;
        try {
            u._n(this.project(t));
        }
        catch (e) {
            u._e(e);
        }
    };
    return FilterMapOperator;
}(MapOperator));
exports.FilterMapOperator = FilterMapOperator;
var RememberOperator = (function () {
    function RememberOperator(ins) {
        this.type = 'remember';
        this.ins = ins;
        this.out = NO;
    }
    RememberOperator.prototype._start = function (out) {
        this.out = out;
        this.ins._add(out);
    };
    RememberOperator.prototype._stop = function () {
        this.ins._remove(this.out);
        this.out = NO;
    };
    return RememberOperator;
}());
exports.RememberOperator = RememberOperator;
var ReplaceErrorOperator = (function () {
    function ReplaceErrorOperator(fn, ins) {
        this.type = 'replaceError';
        this.ins = ins;
        this.out = NO;
        this.fn = fn;
    }
    ReplaceErrorOperator.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    ReplaceErrorOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    ReplaceErrorOperator.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        u._n(t);
    };
    ReplaceErrorOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        try {
            this.ins._remove(this);
            (this.ins = this.fn(err))._add(this);
        }
        catch (e) {
            u._e(e);
        }
    };
    ReplaceErrorOperator.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return ReplaceErrorOperator;
}());
exports.ReplaceErrorOperator = ReplaceErrorOperator;
var StartWithOperator = (function () {
    function StartWithOperator(ins, val) {
        this.type = 'startWith';
        this.ins = ins;
        this.out = NO;
        this.val = val;
    }
    StartWithOperator.prototype._start = function (out) {
        this.out = out;
        this.out._n(this.val);
        this.ins._add(out);
    };
    StartWithOperator.prototype._stop = function () {
        this.ins._remove(this.out);
        this.out = NO;
    };
    return StartWithOperator;
}());
exports.StartWithOperator = StartWithOperator;
var TakeOperator = (function () {
    function TakeOperator(max, ins) {
        this.type = 'take';
        this.ins = ins;
        this.out = NO;
        this.max = max;
        this.taken = 0;
    }
    TakeOperator.prototype._start = function (out) {
        this.out = out;
        this.taken = 0;
        if (this.max <= 0) {
            out._c();
        }
        else {
            this.ins._add(this);
        }
    };
    TakeOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.out = NO;
    };
    TakeOperator.prototype._n = function (t) {
        var u = this.out;
        if (u === NO)
            return;
        if (this.taken++ < this.max - 1) {
            u._n(t);
        }
        else {
            u._n(t);
            u._c();
        }
    };
    TakeOperator.prototype._e = function (err) {
        var u = this.out;
        if (u === NO)
            return;
        u._e(err);
    };
    TakeOperator.prototype._c = function () {
        var u = this.out;
        if (u === NO)
            return;
        u._c();
    };
    return TakeOperator;
}());
exports.TakeOperator = TakeOperator;
var Stream = (function () {
    function Stream(producer) {
        this._prod = producer || NO;
        this._ils = [];
        this._stopID = NO;
        this._dl = NO;
        this._d = false;
        this._target = NO;
        this._err = NO;
    }
    Stream.prototype._n = function (t) {
        var a = this._ils;
        var L = a.length;
        if (this._d)
            this._dl._n(t);
        if (L == 1)
            a[0]._n(t);
        else {
            var b = copy(a);
            for (var i = 0; i < L; i++)
                b[i]._n(t);
        }
    };
    Stream.prototype._e = function (err) {
        if (this._err !== NO)
            return;
        this._err = err;
        var a = this._ils;
        var L = a.length;
        this._x();
        if (this._d)
            this._dl._e(err);
        if (L == 1)
            a[0]._e(err);
        else {
            var b = copy(a);
            for (var i = 0; i < L; i++)
                b[i]._e(err);
        }
    };
    Stream.prototype._c = function () {
        var a = this._ils;
        var L = a.length;
        this._x();
        if (this._d)
            this._dl._c();
        if (L == 1)
            a[0]._c();
        else {
            var b = copy(a);
            for (var i = 0; i < L; i++)
                b[i]._c();
        }
    };
    Stream.prototype._x = function () {
        if (this._ils.length === 0)
            return;
        if (this._prod !== NO)
            this._prod._stop();
        this._err = NO;
        this._ils = [];
    };
    Stream.prototype._stopNow = function () {
        // WARNING: code that calls this method should
        // first check if this._prod is valid (not `NO`)
        this._prod._stop();
        this._err = NO;
        this._stopID = NO;
    };
    Stream.prototype._add = function (il) {
        var ta = this._target;
        if (ta !== NO)
            return ta._add(il);
        var a = this._ils;
        a.push(il);
        if (a.length > 1)
            return;
        if (this._stopID !== NO) {
            clearTimeout(this._stopID);
            this._stopID = NO;
        }
        else {
            var p = this._prod;
            if (p !== NO)
                p._start(this);
        }
    };
    Stream.prototype._remove = function (il) {
        var _this = this;
        var ta = this._target;
        if (ta !== NO)
            return ta._remove(il);
        var a = this._ils;
        var i = a.indexOf(il);
        if (i > -1) {
            a.splice(i, 1);
            if (this._prod !== NO && a.length <= 0) {
                this._err = NO;
                this._stopID = setTimeout(function () { return _this._stopNow(); });
            }
            else if (a.length === 1) {
                this._pruneCycles();
            }
        }
    };
    // If all paths stemming from `this` stream eventually end at `this`
    // stream, then we remove the single listener of `this` stream, to
    // force it to end its execution and dispose resources. This method
    // assumes as a precondition that this._ils has just one listener.
    Stream.prototype._pruneCycles = function () {
        if (this._hasNoSinks(this, [])) {
            this._remove(this._ils[0]);
        }
    };
    // Checks whether *there is no* path starting from `x` that leads to an end
    // listener (sink) in the stream graph, following edges A->B where B is a
    // listener of A. This means these paths constitute a cycle somehow. Is given
    // a trace of all visited nodes so far.
    Stream.prototype._hasNoSinks = function (x, trace) {
        if (trace.indexOf(x) !== -1) {
            return true;
        }
        else if (x.out === this) {
            return true;
        }
        else if (x.out && x.out !== NO) {
            return this._hasNoSinks(x.out, trace.concat(x));
        }
        else if (x._ils) {
            for (var i = 0, N = x._ils.length; i < N; i++) {
                if (!this._hasNoSinks(x._ils[i], trace.concat(x))) {
                    return false;
                }
            }
            return true;
        }
        else {
            return false;
        }
    };
    Stream.prototype.ctor = function () {
        return this instanceof MemoryStream ? MemoryStream : Stream;
    };
    /**
     * Adds a Listener to the Stream.
     *
     * @param {Listener<T>} listener
     */
    Stream.prototype.addListener = function (listener) {
        listener._n = listener.next || noop;
        listener._e = listener.error || noop;
        listener._c = listener.complete || noop;
        this._add(listener);
    };
    /**
     * Removes a Listener from the Stream, assuming the Listener was added to it.
     *
     * @param {Listener<T>} listener
     */
    Stream.prototype.removeListener = function (listener) {
        this._remove(listener);
    };
    /**
     * Adds a Listener to the Stream returning a Subscription to remove that
     * listener.
     *
     * @param {Listener} listener
     * @returns {Subscription}
     */
    Stream.prototype.subscribe = function (listener) {
        this.addListener(listener);
        return new Subscription(this, listener);
    };
    /**
     * Add interop between most.js and RxJS 5
     *
     * @returns {Stream}
     */
    Stream.prototype[symbol_observable_1.default] = function () {
        return this;
    };
    /**
     * Creates a new Stream given a Producer.
     *
     * @factory true
     * @param {Producer} producer An optional Producer that dictates how to
     * start, generate events, and stop the Stream.
     * @return {Stream}
     */
    Stream.create = function (producer) {
        if (producer) {
            if (typeof producer.start !== 'function'
                || typeof producer.stop !== 'function') {
                throw new Error('producer requires both start and stop functions');
            }
            internalizeProducer(producer); // mutates the input
        }
        return new Stream(producer);
    };
    /**
     * Creates a new MemoryStream given a Producer.
     *
     * @factory true
     * @param {Producer} producer An optional Producer that dictates how to
     * start, generate events, and stop the Stream.
     * @return {MemoryStream}
     */
    Stream.createWithMemory = function (producer) {
        if (producer) {
            internalizeProducer(producer); // mutates the input
        }
        return new MemoryStream(producer);
    };
    /**
     * Creates a Stream that does nothing when started. It never emits any event.
     *
     * Marble diagram:
     *
     * ```text
     *          never
     * -----------------------
     * ```
     *
     * @factory true
     * @return {Stream}
     */
    Stream.never = function () {
        return new Stream({ _start: noop, _stop: noop });
    };
    /**
     * Creates a Stream that immediately emits the "complete" notification when
     * started, and that's it.
     *
     * Marble diagram:
     *
     * ```text
     * empty
     * -|
     * ```
     *
     * @factory true
     * @return {Stream}
     */
    Stream.empty = function () {
        return new Stream({
            _start: function (il) { il._c(); },
            _stop: noop,
        });
    };
    /**
     * Creates a Stream that immediately emits an "error" notification with the
     * value you passed as the `error` argument when the stream starts, and that's
     * it.
     *
     * Marble diagram:
     *
     * ```text
     * throw(X)
     * -X
     * ```
     *
     * @factory true
     * @param error The error event to emit on the created stream.
     * @return {Stream}
     */
    Stream.throw = function (error) {
        return new Stream({
            _start: function (il) { il._e(error); },
            _stop: noop,
        });
    };
    /**
     * Creates a stream from an Array, Promise, or an Observable.
     *
     * @factory true
     * @param {Array|Promise|Observable} input The input to make a stream from.
     * @return {Stream}
     */
    Stream.from = function (input) {
        if (typeof input[symbol_observable_1.default] === 'function') {
            return Stream.fromObservable(input);
        }
        else if (typeof input.then === 'function') {
            return Stream.fromPromise(input);
        }
        else if (Array.isArray(input)) {
            return Stream.fromArray(input);
        }
        throw new TypeError("Type of input to from() must be an Array, Promise, or Observable");
    };
    /**
     * Creates a Stream that immediately emits the arguments that you give to
     * *of*, then completes.
     *
     * Marble diagram:
     *
     * ```text
     * of(1,2,3)
     * 123|
     * ```
     *
     * @factory true
     * @param a The first value you want to emit as an event on the stream.
     * @param b The second value you want to emit as an event on the stream. One
     * or more of these values may be given as arguments.
     * @return {Stream}
     */
    Stream.of = function () {
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            items[_i - 0] = arguments[_i];
        }
        return Stream.fromArray(items);
    };
    /**
     * Converts an array to a stream. The returned stream will emit synchronously
     * all the items in the array, and then complete.
     *
     * Marble diagram:
     *
     * ```text
     * fromArray([1,2,3])
     * 123|
     * ```
     *
     * @factory true
     * @param {Array} array The array to be converted as a stream.
     * @return {Stream}
     */
    Stream.fromArray = function (array) {
        return new Stream(new FromArrayProducer(array));
    };
    /**
     * Converts a promise to a stream. The returned stream will emit the resolved
     * value of the promise, and then complete. However, if the promise is
     * rejected, the stream will emit the corresponding error.
     *
     * Marble diagram:
     *
     * ```text
     * fromPromise( ----42 )
     * -----------------42|
     * ```
     *
     * @factory true
     * @param {Promise} promise The promise to be converted as a stream.
     * @return {Stream}
     */
    Stream.fromPromise = function (promise) {
        return new Stream(new FromPromiseProducer(promise));
    };
    /**
     * Converts an Observable into a Stream.
     *
     * @factory true
     * @param {any} observable The observable to be converted as a stream.
     * @return {Stream}
     */
    Stream.fromObservable = function (observable) {
        return new Stream(new ObservableProducer(observable));
    };
    /**
     * Creates a stream that periodically emits incremental numbers, every
     * `period` milliseconds.
     *
     * Marble diagram:
     *
     * ```text
     *     periodic(1000)
     * ---0---1---2---3---4---...
     * ```
     *
     * @factory true
     * @param {number} period The interval in milliseconds to use as a rate of
     * emission.
     * @return {Stream}
     */
    Stream.periodic = function (period) {
        return new Stream(new PeriodicProducer(period));
    };
    Stream.prototype._map = function (project) {
        var p = this._prod;
        var ctor = this.ctor();
        if (p instanceof FilterOperator) {
            return new ctor(new FilterMapOperator(p.passes, project, p.ins));
        }
        return new ctor(new MapOperator(project, this));
    };
    /**
     * Transforms each event from the input Stream through a `project` function,
     * to get a Stream that emits those transformed events.
     *
     * Marble diagram:
     *
     * ```text
     * --1---3--5-----7------
     *    map(i => i * 10)
     * --10--30-50----70-----
     * ```
     *
     * @param {Function} project A function of type `(t: T) => U` that takes event
     * `t` of type `T` from the input Stream and produces an event of type `U`, to
     * be emitted on the output Stream.
     * @return {Stream}
     */
    Stream.prototype.map = function (project) {
        return this._map(project);
    };
    /**
     * It's like `map`, but transforms each input event to always the same
     * constant value on the output Stream.
     *
     * Marble diagram:
     *
     * ```text
     * --1---3--5-----7-----
     *       mapTo(10)
     * --10--10-10----10----
     * ```
     *
     * @param projectedValue A value to emit on the output Stream whenever the
     * input Stream emits any value.
     * @return {Stream}
     */
    Stream.prototype.mapTo = function (projectedValue) {
        var s = this.map(function () { return projectedValue; });
        var op = s._prod;
        op.type = op.type.replace('map', 'mapTo');
        return s;
    };
    /**
     * Only allows events that pass the test given by the `passes` argument.
     *
     * Each event from the input stream is given to the `passes` function. If the
     * function returns `true`, the event is forwarded to the output stream,
     * otherwise it is ignored and not forwarded.
     *
     * Marble diagram:
     *
     * ```text
     * --1---2--3-----4-----5---6--7-8--
     *     filter(i => i % 2 === 0)
     * ------2--------4---------6----8--
     * ```
     *
     * @param {Function} passes A function of type `(t: T) +> boolean` that takes
     * an event from the input stream and checks if it passes, by returning a
     * boolean.
     * @return {Stream}
     */
    Stream.prototype.filter = function (passes) {
        var p = this._prod;
        if (p instanceof FilterOperator) {
            return new Stream(new FilterOperator(and(p.passes, passes), p.ins));
        }
        return new Stream(new FilterOperator(passes, this));
    };
    /**
     * Lets the first `amount` many events from the input stream pass to the
     * output stream, then makes the output stream complete.
     *
     * Marble diagram:
     *
     * ```text
     * --a---b--c----d---e--
     *    take(3)
     * --a---b--c|
     * ```
     *
     * @param {number} amount How many events to allow from the input stream
     * before completing the output stream.
     * @return {Stream}
     */
    Stream.prototype.take = function (amount) {
        return new (this.ctor())(new TakeOperator(amount, this));
    };
    /**
     * Ignores the first `amount` many events from the input stream, and then
     * after that starts forwarding events from the input stream to the output
     * stream.
     *
     * Marble diagram:
     *
     * ```text
     * --a---b--c----d---e--
     *       drop(3)
     * --------------d---e--
     * ```
     *
     * @param {number} amount How many events to ignore from the input stream
     * before forwarding all events from the input stream to the output stream.
     * @return {Stream}
     */
    Stream.prototype.drop = function (amount) {
        return new Stream(new DropOperator(amount, this));
    };
    /**
     * When the input stream completes, the output stream will emit the last event
     * emitted by the input stream, and then will also complete.
     *
     * Marble diagram:
     *
     * ```text
     * --a---b--c--d----|
     *       last()
     * -----------------d|
     * ```
     *
     * @return {Stream}
     */
    Stream.prototype.last = function () {
        return new Stream(new LastOperator(this));
    };
    /**
     * Prepends the given `initial` value to the sequence of events emitted by the
     * input stream. The returned stream is a MemoryStream, which means it is
     * already `remember()`'d.
     *
     * Marble diagram:
     *
     * ```text
     * ---1---2-----3---
     *   startWith(0)
     * 0--1---2-----3---
     * ```
     *
     * @param initial The value or event to prepend.
     * @return {MemoryStream}
     */
    Stream.prototype.startWith = function (initial) {
        return new MemoryStream(new StartWithOperator(this, initial));
    };
    /**
     * Uses another stream to determine when to complete the current stream.
     *
     * When the given `other` stream emits an event or completes, the output
     * stream will complete. Before that happens, the output stream will behaves
     * like the input stream.
     *
     * Marble diagram:
     *
     * ```text
     * ---1---2-----3--4----5----6---
     *   endWhen( --------a--b--| )
     * ---1---2-----3--4--|
     * ```
     *
     * @param other Some other stream that is used to know when should the output
     * stream of this operator complete.
     * @return {Stream}
     */
    Stream.prototype.endWhen = function (other) {
        return new (this.ctor())(new EndWhenOperator(other, this));
    };
    /**
     * "Folds" the stream onto itself.
     *
     * Combines events from the past throughout
     * the entire execution of the input stream, allowing you to accumulate them
     * together. It's essentially like `Array.prototype.reduce`. The returned
     * stream is a MemoryStream, which means it is already `remember()`'d.
     *
     * The output stream starts by emitting the `seed` which you give as argument.
     * Then, when an event happens on the input stream, it is combined with that
     * seed value through the `accumulate` function, and the output value is
     * emitted on the output stream. `fold` remembers that output value as `acc`
     * ("accumulator"), and then when a new input event `t` happens, `acc` will be
     * combined with that to produce the new `acc` and so forth.
     *
     * Marble diagram:
     *
     * ```text
     * ------1-----1--2----1----1------
     *   fold((acc, x) => acc + x, 3)
     * 3-----4-----5--7----8----9------
     * ```
     *
     * @param {Function} accumulate A function of type `(acc: R, t: T) => R` that
     * takes the previous accumulated value `acc` and the incoming event from the
     * input stream and produces the new accumulated value.
     * @param seed The initial accumulated value, of type `R`.
     * @return {MemoryStream}
     */
    Stream.prototype.fold = function (accumulate, seed) {
        return new MemoryStream(new FoldOperator(accumulate, seed, this));
    };
    /**
     * Replaces an error with another stream.
     *
     * When (and if) an error happens on the input stream, instead of forwarding
     * that error to the output stream, *replaceError* will call the `replace`
     * function which returns the stream that the output stream will replicate.
     * And, in case that new stream also emits an error, `replace` will be called
     * again to get another stream to start replicating.
     *
     * Marble diagram:
     *
     * ```text
     * --1---2-----3--4-----X
     *   replaceError( () => --10--| )
     * --1---2-----3--4--------10--|
     * ```
     *
     * @param {Function} replace A function of type `(err) => Stream` that takes
     * the error that occurred on the input stream or on the previous replacement
     * stream and returns a new stream. The output stream will behave like the
     * stream that this function returns.
     * @return {Stream}
     */
    Stream.prototype.replaceError = function (replace) {
        return new (this.ctor())(new ReplaceErrorOperator(replace, this));
    };
    /**
     * Flattens a "stream of streams", handling only one nested stream at a time
     * (no concurrency).
     *
     * If the input stream is a stream that emits streams, then this operator will
     * return an output stream which is a flat stream: emits regular events. The
     * flattening happens without concurrency. It works like this: when the input
     * stream emits a nested stream, *flatten* will start imitating that nested
     * one. However, as soon as the next nested stream is emitted on the input
     * stream, *flatten* will forget the previous nested one it was imitating, and
     * will start imitating the new nested one.
     *
     * Marble diagram:
     *
     * ```text
     * --+--------+---------------
     *   \        \
     *    \       ----1----2---3--
     *    --a--b----c----d--------
     *           flatten
     * -----a--b------1----2---3--
     * ```
     *
     * @return {Stream}
     */
    Stream.prototype.flatten = function () {
        var p = this._prod;
        return new Stream(p instanceof MapOperator && !(p instanceof FilterMapOperator) ?
            new MapFlattenOperator(p) :
            new FlattenOperator(this));
    };
    /**
     * Passes the input stream to a custom operator, to produce an output stream.
     *
     * *compose* is a handy way of using an existing function in a chained style.
     * Instead of writing `outStream = f(inStream)` you can write
     * `outStream = inStream.compose(f)`.
     *
     * @param {function} operator A function that takes a stream as input and
     * returns a stream as well.
     * @return {Stream}
     */
    Stream.prototype.compose = function (operator) {
        return operator(this);
    };
    /**
     * Returns an output stream that behaves like the input stream, but also
     * remembers the most recent event that happens on the input stream, so that a
     * newly added listener will immediately receive that memorised event.
     *
     * @return {MemoryStream}
     */
    Stream.prototype.remember = function () {
        return new MemoryStream(new RememberOperator(this));
    };
    /**
     * Returns an output stream that identically behaves like the input stream,
     * but also runs a `spy` function fo each event, to help you debug your app.
     *
     * *debug* takes a `spy` function as argument, and runs that for each event
     * happening on the input stream. If you don't provide the `spy` argument,
     * then *debug* will just `console.log` each event. This helps you to
     * understand the flow of events through some operator chain.
     *
     * Please note that if the output stream has no listeners, then it will not
     * start, which means `spy` will never run because no actual event happens in
     * that case.
     *
     * Marble diagram:
     *
     * ```text
     * --1----2-----3-----4--
     *         debug
     * --1----2-----3-----4--
     * ```
     *
     * @param {function} labelOrSpy A string to use as the label when printing
     * debug information on the console, or a 'spy' function that takes an event
     * as argument, and does not need to return anything.
     * @return {Stream}
     */
    Stream.prototype.debug = function (labelOrSpy) {
        return new (this.ctor())(new DebugOperator(this, labelOrSpy));
    };
    /**
     * *imitate* changes this current Stream to emit the same events that the
     * `other` given Stream does. This method returns nothing.
     *
     * This method exists to allow one thing: **circular dependency of streams**.
     * For instance, let's imagine that for some reason you need to create a
     * circular dependency where stream `first$` depends on stream `second$`
     * which in turn depends on `first$`:
     *
     * <!-- skip-example -->
     * ```js
     * import delay from 'xstream/extra/delay'
     *
     * var first$ = second$.map(x => x * 10).take(3);
     * var second$ = first$.map(x => x + 1).startWith(1).compose(delay(100));
     * ```
     *
     * However, that is invalid JavaScript, because `second$` is undefined
     * on the first line. This is how *imitate* can help solve it:
     *
     * ```js
     * import delay from 'xstream/extra/delay'
     *
     * var secondProxy$ = xs.create();
     * var first$ = secondProxy$.map(x => x * 10).take(3);
     * var second$ = first$.map(x => x + 1).startWith(1).compose(delay(100));
     * secondProxy$.imitate(second$);
     * ```
     *
     * We create `secondProxy$` before the others, so it can be used in the
     * declaration of `first$`. Then, after both `first$` and `second$` are
     * defined, we hook `secondProxy$` with `second$` with `imitate()` to tell
     * that they are "the same". `imitate` will not trigger the start of any
     * stream, it just binds `secondProxy$` and `second$` together.
     *
     * The following is an example where `imitate()` is important in Cycle.js
     * applications. A parent component contains some child components. A child
     * has an action stream which is given to the parent to define its state:
     *
     * <!-- skip-example -->
     * ```js
     * const childActionProxy$ = xs.create();
     * const parent = Parent({...sources, childAction$: childActionProxy$});
     * const childAction$ = parent.state$.map(s => s.child.action$).flatten();
     * childActionProxy$.imitate(childAction$);
     * ```
     *
     * Note, though, that **`imitate()` does not support MemoryStreams**. If we
     * would attempt to imitate a MemoryStream in a circular dependency, we would
     * either get a race condition (where the symptom would be "nothing happens")
     * or an infinite cyclic emission of values. It's useful to think about
     * MemoryStreams as cells in a spreadsheet. It doesn't make any sense to
     * define a spreadsheet cell `A1` with a formula that depends on `B1` and
     * cell `B1` defined with a formula that depends on `A1`.
     *
     * If you find yourself wanting to use `imitate()` with a
     * MemoryStream, you should rework your code around `imitate()` to use a
     * Stream instead. Look for the stream in the circular dependency that
     * represents an event stream, and that would be a candidate for creating a
     * proxy Stream which then imitates the target Stream.
     *
     * @param {Stream} target The other stream to imitate on the current one. Must
     * not be a MemoryStream.
     */
    Stream.prototype.imitate = function (target) {
        if (target instanceof MemoryStream) {
            throw new Error('A MemoryStream was given to imitate(), but it only ' +
                'supports a Stream. Read more about this restriction here: ' +
                'https://github.com/staltz/xstream#faq');
        }
        this._target = target;
        for (var ils = this._ils, N = ils.length, i = 0; i < N; i++) {
            target._add(ils[i]);
        }
        this._ils = [];
    };
    /**
     * Forces the Stream to emit the given value to its listeners.
     *
     * As the name indicates, if you use this, you are most likely doing something
     * The Wrong Way. Please try to understand the reactive way before using this
     * method. Use it only when you know what you are doing.
     *
     * @param value The "next" value you want to broadcast to all listeners of
     * this Stream.
     */
    Stream.prototype.shamefullySendNext = function (value) {
        this._n(value);
    };
    /**
     * Forces the Stream to emit the given error to its listeners.
     *
     * As the name indicates, if you use this, you are most likely doing something
     * The Wrong Way. Please try to understand the reactive way before using this
     * method. Use it only when you know what you are doing.
     *
     * @param {any} error The error you want to broadcast to all the listeners of
     * this Stream.
     */
    Stream.prototype.shamefullySendError = function (error) {
        this._e(error);
    };
    /**
     * Forces the Stream to emit the "completed" event to its listeners.
     *
     * As the name indicates, if you use this, you are most likely doing something
     * The Wrong Way. Please try to understand the reactive way before using this
     * method. Use it only when you know what you are doing.
     */
    Stream.prototype.shamefullySendComplete = function () {
        this._c();
    };
    /**
     * Adds a "debug" listener to the stream. There can only be one debug
     * listener, that's why this is 'setDebugListener'. To remove the debug
     * listener, just call setDebugListener(null).
     *
     * A debug listener is like any other listener. The only difference is that a
     * debug listener is "stealthy": its presence/absence does not trigger the
     * start/stop of the stream (or the producer inside the stream). This is
     * useful so you can inspect what is going on without changing the behavior
     * of the program. If you have an idle stream and you add a normal listener to
     * it, the stream will start executing. But if you set a debug listener on an
     * idle stream, it won't start executing (not until the first normal listener
     * is added).
     *
     * As the name indicates, we don't recommend using this method to build app
     * logic. In fact, in most cases the debug operator works just fine. Only use
     * this one if you know what you're doing.
     *
     * @param {Listener<T>} listener
     */
    Stream.prototype.setDebugListener = function (listener) {
        if (!listener) {
            this._d = false;
            this._dl = NO;
        }
        else {
            this._d = true;
            listener._n = listener.next;
            listener._e = listener.error;
            listener._c = listener.complete;
            this._dl = listener;
        }
    };
    /**
     * Blends multiple streams together, emitting events from all of them
     * concurrently.
     *
     * *merge* takes multiple streams as arguments, and creates a stream that
     * behaves like each of the argument streams, in parallel.
     *
     * Marble diagram:
     *
     * ```text
     * --1----2-----3--------4---
     * ----a-----b----c---d------
     *            merge
     * --1-a--2--b--3-c---d--4---
     * ```
     *
     * @factory true
     * @param {Stream} stream1 A stream to merge together with other streams.
     * @param {Stream} stream2 A stream to merge together with other streams. Two
     * or more streams may be given as arguments.
     * @return {Stream}
     */
    Stream.merge = function merge() {
        var streams = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            streams[_i - 0] = arguments[_i];
        }
        return new Stream(new MergeProducer(streams));
    };
    /**
     * Combines multiple input streams together to return a stream whose events
     * are arrays that collect the latest events from each input stream.
     *
     * *combine* internally remembers the most recent event from each of the input
     * streams. When any of the input streams emits an event, that event together
     * with all the other saved events are combined into an array. That array will
     * be emitted on the output stream. It's essentially a way of joining together
     * the events from multiple streams.
     *
     * Marble diagram:
     *
     * ```text
     * --1----2-----3--------4---
     * ----a-----b-----c--d------
     *          combine
     * ----1a-2a-2b-3b-3c-3d-4d--
     * ```
     *
     * @factory true
     * @param {Stream} stream1 A stream to combine together with other streams.
     * @param {Stream} stream2 A stream to combine together with other streams.
     * Multiple streams, not just two, may be given as arguments.
     * @return {Stream}
     */
    Stream.combine = function combine() {
        var streams = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            streams[_i - 0] = arguments[_i];
        }
        return new Stream(new CombineProducer(streams));
    };
    return Stream;
}());
exports.Stream = Stream;
var MemoryStream = (function (_super) {
    __extends(MemoryStream, _super);
    function MemoryStream(producer) {
        _super.call(this, producer);
        this._has = false;
    }
    MemoryStream.prototype._n = function (x) {
        this._v = x;
        this._has = true;
        _super.prototype._n.call(this, x);
    };
    MemoryStream.prototype._add = function (il) {
        var ta = this._target;
        if (ta !== NO)
            return ta._add(il);
        var a = this._ils;
        a.push(il);
        if (a.length > 1) {
            if (this._has)
                il._n(this._v);
            return;
        }
        if (this._stopID !== NO) {
            if (this._has)
                il._n(this._v);
            clearTimeout(this._stopID);
            this._stopID = NO;
        }
        else if (this._has)
            il._n(this._v);
        else {
            var p = this._prod;
            if (p !== NO)
                p._start(this);
        }
    };
    MemoryStream.prototype._stopNow = function () {
        this._has = false;
        _super.prototype._stopNow.call(this);
    };
    MemoryStream.prototype._x = function () {
        this._has = false;
        _super.prototype._x.call(this);
    };
    MemoryStream.prototype.map = function (project) {
        return this._map(project);
    };
    MemoryStream.prototype.mapTo = function (projectedValue) {
        return _super.prototype.mapTo.call(this, projectedValue);
    };
    MemoryStream.prototype.take = function (amount) {
        return _super.prototype.take.call(this, amount);
    };
    MemoryStream.prototype.endWhen = function (other) {
        return _super.prototype.endWhen.call(this, other);
    };
    MemoryStream.prototype.replaceError = function (replace) {
        return _super.prototype.replaceError.call(this, replace);
    };
    MemoryStream.prototype.remember = function () {
        return this;
    };
    MemoryStream.prototype.debug = function (labelOrSpy) {
        return _super.prototype.debug.call(this, labelOrSpy);
    };
    return MemoryStream;
}(Stream));
exports.MemoryStream = MemoryStream;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Stream;

},{"symbol-observable":7}],34:[function(require,module,exports){
"use strict";
var core_1 = require('../core');
var ConcatProducer = (function () {
    function ConcatProducer(streams) {
        this.streams = streams;
        this.type = 'concat';
        this.out = null;
        this.i = 0;
    }
    ConcatProducer.prototype._start = function (out) {
        this.out = out;
        this.streams[this.i]._add(this);
    };
    ConcatProducer.prototype._stop = function () {
        var streams = this.streams;
        if (this.i < streams.length) {
            streams[this.i]._remove(this);
        }
        this.i = 0;
        this.out = null;
    };
    ConcatProducer.prototype._n = function (t) {
        var u = this.out;
        if (!u)
            return;
        u._n(t);
    };
    ConcatProducer.prototype._e = function (err) {
        var u = this.out;
        if (!u)
            return;
        u._e(err);
    };
    ConcatProducer.prototype._c = function () {
        var u = this.out;
        if (!u)
            return;
        var streams = this.streams;
        streams[this.i]._remove(this);
        if (++this.i < streams.length) {
            streams[this.i]._add(this);
        }
        else {
            u._c();
        }
    };
    return ConcatProducer;
}());
/**
 * Puts one stream after the other. *concat* is a factory that takes multiple
 * streams as arguments, and starts the `n+1`-th stream only when the `n`-th
 * stream has completed. It concatenates those streams together.
 *
 * Marble diagram:
 *
 * ```text
 * --1--2---3---4-|
 * ...............--a-b-c--d-|
 *           concat
 * --1--2---3---4---a-b-c--d-|
 * ```
 *
 * Example:
 *
 * ```js
 * import concat from 'xstream/extra/concat'
 *
 * const streamA = xs.of('a', 'b', 'c')
 * const streamB = xs.of(10, 20, 30)
 * const streamC = xs.of('X', 'Y', 'Z')
 *
 * const outputStream = concat(streamA, streamB, streamC)
 *
 * outputStream.addListener({
 *   next: (x) => console.log(x),
 *   error: (err) => console.error(err),
 *   complete: () => console.log('concat completed'),
 * })
 * ```
 *
 * @factory true
 * @param {Stream} stream1 A stream to concatenate together with other streams.
 * @param {Stream} stream2 A stream to concatenate together with other streams. Two
 * or more streams may be given as arguments.
 * @return {Stream}
 */
function concat() {
    var streams = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        streams[_i - 0] = arguments[_i];
    }
    return new core_1.Stream(new ConcatProducer(streams));
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = concat;

},{"../core":33}],35:[function(require,module,exports){
"use strict";
var core_1 = require('../core');
var DelayOperator = (function () {
    function DelayOperator(dt, ins) {
        this.dt = dt;
        this.ins = ins;
        this.type = 'delay';
        this.out = null;
    }
    DelayOperator.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    DelayOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.out = null;
    };
    DelayOperator.prototype._n = function (t) {
        var u = this.out;
        if (!u)
            return;
        var id = setInterval(function () {
            u._n(t);
            clearInterval(id);
        }, this.dt);
    };
    DelayOperator.prototype._e = function (err) {
        var u = this.out;
        if (!u)
            return;
        var id = setInterval(function () {
            u._e(err);
            clearInterval(id);
        }, this.dt);
    };
    DelayOperator.prototype._c = function () {
        var u = this.out;
        if (!u)
            return;
        var id = setInterval(function () {
            u._c();
            clearInterval(id);
        }, this.dt);
    };
    return DelayOperator;
}());
/**
 * Delays periodic events by a given time period.
 *
 * Marble diagram:
 *
 * ```text
 * 1----2--3--4----5|
 *     delay(60)
 * ---1----2--3--4----5|
 * ```
 *
 * Example:
 *
 * ```js
 * import fromDiagram from 'xstream/extra/fromDiagram'
 * import delay from 'xstream/extra/delay'
 *
 * const stream = fromDiagram('1----2--3--4----5|')
 *  .compose(delay(60))
 *
 * stream.addListener({
 *   next: i => console.log(i),
 *   error: err => console.error(err),
 *   complete: () => console.log('completed')
 * })
 * ```
 *
 * ```text
 * > 1  (after 60 ms)
 * > 2  (after 160 ms)
 * > 3  (after 220 ms)
 * > 4  (after 280 ms)
 * > 5  (after 380 ms)
 * > completed
 * ```
 *
 * @param {number} period The amount of silence required in milliseconds.
 * @return {Stream}
 */
function delay(period) {
    return function delayOperator(ins) {
        return new core_1.Stream(new DelayOperator(period, ins));
    };
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = delay;

},{"../core":33}],36:[function(require,module,exports){
"use strict";
var core_1 = require('../core');
var FCIL = (function () {
    function FCIL(out, op) {
        this.out = out;
        this.op = op;
    }
    FCIL.prototype._n = function (t) {
        this.out._n(t);
    };
    FCIL.prototype._e = function (err) {
        this.out._e(err);
    };
    FCIL.prototype._c = function () {
        this.op.less();
    };
    return FCIL;
}());
var FlattenConcOperator = (function () {
    function FlattenConcOperator(ins) {
        this.ins = ins;
        this.type = 'flattenConcurrently';
        this.active = 1; // number of outers and inners that have not yet ended
        this.out = null;
    }
    FlattenConcOperator.prototype._start = function (out) {
        this.out = out;
        this.ins._add(this);
    };
    FlattenConcOperator.prototype._stop = function () {
        this.ins._remove(this);
        this.active = 1;
        this.out = null;
    };
    FlattenConcOperator.prototype.less = function () {
        if (--this.active === 0) {
            var u = this.out;
            if (!u)
                return;
            u._c();
        }
    };
    FlattenConcOperator.prototype._n = function (s) {
        var u = this.out;
        if (!u)
            return;
        this.active++;
        s._add(new FCIL(u, this));
    };
    FlattenConcOperator.prototype._e = function (err) {
        var u = this.out;
        if (!u)
            return;
        u._e(err);
    };
    FlattenConcOperator.prototype._c = function () {
        this.less();
    };
    return FlattenConcOperator;
}());
exports.FlattenConcOperator = FlattenConcOperator;
/**
 * Flattens a "stream of streams", handling multiple concurrent nested streams
 * simultaneously.
 *
 * If the input stream is a stream that emits streams, then this operator will
 * return an output stream which is a flat stream: emits regular events. The
 * flattening happens concurrently. It works like this: when the input stream
 * emits a nested stream, *flattenConcurrently* will start imitating that
 * nested one. When the next nested stream is emitted on the input stream,
 * *flattenConcurrently* will also imitate that new one, but will continue to
 * imitate the previous nested streams as well.
 *
 * Marble diagram:
 *
 * ```text
 * --+--------+---------------
 *   \        \
 *    \       ----1----2---3--
 *    --a--b----c----d--------
 *     flattenConcurrently
 * -----a--b----c-1--d-2---3--
 * ```
 *
 * @return {Stream}
 */
function flattenConcurrently(ins) {
    return new core_1.Stream(new FlattenConcOperator(ins));
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = flattenConcurrently;

},{"../core":33}],37:[function(require,module,exports){
"use strict";
var core_1 = require('./core');
exports.Stream = core_1.Stream;
exports.MemoryStream = core_1.MemoryStream;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = core_1.Stream;

},{"./core":33}],38:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Alt = function (__superclass_Data$dotFunctor$dotFunctor_0, alt) {
    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
module.exports = {
    Alt: Alt, 
    alt: alt, 
    altArray: altArray
};

},{"../Data.Functor":173,"../Data.Semigroup":216}],39:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Alternative = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotPlus$dotPlus_1) {
    this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
};
var alternativeArray = new Alternative(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Plus.plusArray;
});
module.exports = {
    Alternative: Alternative, 
    alternativeArray: alternativeArray
};

},{"../Control.Alt":38,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Plus":103,"../Data.Functor":173}],40:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Const = require("../Data.Const");
var Data_Exists = require("../Data.Exists");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Unit = require("../Data.Unit");
var Control_Apply = require("../Control.Apply");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Control_Category = require("../Control.Category");
var ApF = (function () {
    function ApF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ApF.create = function (value0) {
        return function (value1) {
            return new ApF(value0, value1);
        };
    };
    return ApF;
})();
var Pure = (function () {
    function Pure(value0) {
        this.value0 = value0;
    };
    Pure.create = function (value0) {
        return new Pure(value0);
    };
    return Pure;
})();
var Ap = (function () {
    function Ap(value0) {
        this.value0 = value0;
    };
    Ap.create = function (value0) {
        return new Ap(value0);
    };
    return Ap;
})();
var retractFreeAp = function (dictApplicative) {
    return function (v) {
        if (v instanceof Pure) {
            return Control_Applicative.pure(dictApplicative)(v.value0);
        };
        if (v instanceof Ap) {
            return Data_Exists.runExists(function (v1) {
                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(retractFreeAp(dictApplicative)(v1.value1(Data_Unit.unit)))(v1.value0(Data_Unit.unit));
            })(v.value0);
        };
        throw new Error("Failed pattern match at Control.Applicative.Free line 33, column 1 - line 33, column 32: " + [ v.constructor.name ]);
    };
};
var foldFreeAp = function (dictApplicative) {
    return function (k) {
        return function (v) {
            if (v instanceof Pure) {
                return Control_Applicative.pure(dictApplicative)(v.value0);
            };
            if (v instanceof Ap) {
                return Data_Exists.runExists(function (v1) {
                    return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Function.flip(Control_Category.id(Control_Category.categoryFn)))(k(v1.value0(Data_Unit.unit))))(foldFreeAp(dictApplicative)(k)(v1.value1(Data_Unit.unit)));
                })(v.value0);
            };
            throw new Error("Failed pattern match at Control.Applicative.Free line 39, column 1 - line 39, column 31: " + [ k.constructor.name, v.constructor.name ]);
        };
    };
};
var ap = function (v) {
    return function (k) {
        return new Ap(Data_Exists.mkExists(new ApF(v, k)));
    };
};
var functorFreeAp = new Data_Functor.Functor(function (k) {
    return function (v) {
        if (v instanceof Pure) {
            return new Pure(k(v.value0));
        };
        if (v instanceof Ap) {
            return Data_Exists.runExists(function (v1) {
                return ap(v1.value0)(function (v3) {
                    return Data_Functor.map(functorFreeAp)(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)(k))(v1.value1(Data_Unit.unit));
                });
            })(v.value0);
        };
        throw new Error("Failed pattern match at Control.Applicative.Free line 53, column 3 - line 53, column 30: " + [ k.constructor.name, v.constructor.name ]);
    };
});
var applyFreeAp = new Control_Apply.Apply(function () {
    return functorFreeAp;
}, function (v) {
    return function (f) {
        if (v instanceof Pure) {
            return Data_Functor.map(functorFreeAp)(v.value0)(f);
        };
        if (v instanceof Ap) {
            return Data_Exists.runExists(function (v1) {
                return ap(v1.value0)(function (v3) {
                    return Control_Apply.apply(applyFreeAp)(Data_Functor.map(functorFreeAp)(Data_Function.flip)(v1.value1(Data_Unit.unit)))(f);
                });
            })(v.value0);
        };
        throw new Error("Failed pattern match at Control.Applicative.Free line 57, column 3 - line 57, column 29: " + [ v.constructor.name, f.constructor.name ]);
    };
});
var applicativeFreeAp = new Control_Applicative.Applicative(function () {
    return applyFreeAp;
}, Pure.create);
var hoistFreeAp = function (k) {
    return function (v) {
        if (v instanceof Pure) {
            return new Pure(v.value0);
        };
        if (v instanceof Ap) {
            return Data_Exists.runExists(function (v1) {
                return ap(function (v3) {
                    return k(v1.value0(Data_Unit.unit));
                })(function (v3) {
                    return hoistFreeAp(k)(v1.value1(Data_Unit.unit));
                });
            })(v.value0);
        };
        throw new Error("Failed pattern match at Control.Applicative.Free line 45, column 1 - line 45, column 32: " + [ k.constructor.name, v.constructor.name ]);
    };
};
var liftFreeAp = function (a) {
    return ap(function (v) {
        return a;
    })(function (v) {
        return new Pure(Control_Category.id(Control_Category.categoryFn));
    });
};
var analyzeFreeAp = function (dictMonoid) {
    return function (k) {
        return function ($59) {
            return Data_Newtype.unwrap(Data_Const.newtypeConst)(foldFreeAp(Data_Const.applicativeConst(dictMonoid))(function ($60) {
                return Data_Const.Const(k($60));
            })($59));
        };
    };
};
module.exports = {
    analyzeFreeAp: analyzeFreeAp, 
    foldFreeAp: foldFreeAp, 
    hoistFreeAp: hoistFreeAp, 
    liftFreeAp: liftFreeAp, 
    retractFreeAp: retractFreeAp, 
    functorFreeAp: functorFreeAp, 
    applyFreeAp: applyFreeAp, 
    applicativeFreeAp: applicativeFreeAp
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Category":48,"../Control.Semigroupoid":104,"../Data.Const":141,"../Data.Exists":150,"../Data.Function":166,"../Data.Functor":173,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Unit":233,"../Prelude":266}],41:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
    this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
    this.pure = pure;
};
var pure = function (dict) {
    return dict.pure;
};
var unless = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 63, column 1 - line 63, column 19: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var when = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 58, column 1 - line 58, column 16: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var liftA1 = function (dictApplicative) {
    return function (f) {
        return function (a) {
            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return Control_Apply.applyFn;
}, function (x) {
    return function (v) {
        return x;
    };
});
var applicativeArray = new Applicative(function () {
    return Control_Apply.applyArray;
}, function (x) {
    return [ x ];
});
module.exports = {
    Applicative: Applicative, 
    liftA1: liftA1, 
    pure: pure, 
    unless: unless, 
    when: when, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray
};

},{"../Control.Apply":43,"../Data.Functor":173,"../Data.Unit":233}],42:[function(require,module,exports){
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var result = [];
    var n = 0;
    for (var i = 0, l = fs.length; i < l; i++) {
      for (var j = 0, k = xs.length; j < k; j++) {
        result[n++] = fs[i](xs[j]);
      }
    }
    return result;
  };
};

},{}],43:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Category = require("../Control.Category");
var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
    this.apply = apply;
};
var applyFn = new Apply(function () {
    return Data_Functor.functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var applyArray = new Apply(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayApply);
var apply = function (dict) {
    return dict.apply;
};
var applyFirst = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"])(a))(b);
        };
    };
};
var applySecond = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
        };
    };
};
var lift2 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
var lift3 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    Apply: Apply, 
    apply: apply, 
    applyFirst: applyFirst, 
    applySecond: applySecond, 
    lift2: lift2, 
    lift3: lift3, 
    lift4: lift4, 
    lift5: lift5, 
    applyFn: applyFn, 
    applyArray: applyArray
};

},{"../Control.Category":48,"../Data.Function":166,"../Data.Functor":173,"./foreign":42}],44:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Biapply = require("../Control.Biapply");
var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative, 
    bipure: bipure
};

},{"../Control.Biapply":45}],45:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_Function = require("../Data.Function");
var Data_Bifunctor = require("../Data.Bifunctor");
var Control_Category = require("../Control.Category");
var Biapply = function (__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.biapply = biapply;
};
var biapply = function (dict) {
    return dict.biapply;
};
var biapplyFirst = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn))))(a))(b);
        };
    };
};
var biapplySecond = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Data_Function["const"])(Data_Function["const"]))(a))(b);
        };
    };
};
var bilift2 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
module.exports = {
    Biapply: Biapply, 
    biapply: biapply, 
    biapplyFirst: biapplyFirst, 
    biapplySecond: biapplySecond, 
    bilift2: bilift2, 
    bilift3: bilift3
};

},{"../Control.Category":48,"../Data.Bifunctor":130,"../Data.Function":166}],46:[function(require,module,exports){
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

},{}],47:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
    this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
    this.bind = bind;
};
var bindFn = new Bind(function () {
    return Control_Apply.applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var bindArray = new Bind(function () {
    return Control_Apply.applyArray;
}, $foreign.arrayBind);
var bind = function (dict) {
    return dict.bind;
};
var bindFlipped = function (dictBind) {
    return Data_Function.flip(bind(dictBind));
};
var composeKleisliFlipped = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bindFlipped(dictBind)(f)(g(a));
            };
        };
    };
};
var composeKleisli = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bind(dictBind)(f(a))(g);
            };
        };
    };
};
var ifM = function (dictBind) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return bind(dictBind)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    if (!cond$prime) {
                        return f;
                    };
                    throw new Error("Failed pattern match at Control.Bind line 103, column 35 - line 103, column 56: " + [ cond$prime.constructor.name ]);
                });
            };
        };
    };
};
var join = function (dictBind) {
    return function (m) {
        return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Bind: Bind, 
    bind: bind, 
    bindFlipped: bindFlipped, 
    composeKleisli: composeKleisli, 
    composeKleisliFlipped: composeKleisliFlipped, 
    ifM: ifM, 
    join: join, 
    bindFn: bindFn, 
    bindArray: bindArray
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Category":48,"../Data.Function":166,"../Data.Functor":173,"./foreign":46}],48:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
    this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
    this.id = id;
};
var id = function (dict) {
    return dict.id;
};
var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
    return x;
});
module.exports = {
    Category: Category, 
    id: id, 
    categoryFn: categoryFn
};

},{"../Control.Semigroupoid":104}],49:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Extend = require("../Control.Extend");
var Data_Functor = require("../Data.Functor");
var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"../Control.Extend":53,"../Data.Functor":173}],50:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Apply = require("../Control.Apply");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Parallel = require("../Control.Parallel");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Tuple = require("../Data.Tuple");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Category = require("../Control.Category");
var Transform = function (x) {
    return x;
};
var Emit = (function () {
    function Emit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Emit.create = function (value0) {
        return function (value1) {
            return new Emit(value0, value1);
        };
    };
    return Emit;
})();
var CoTransform = (function () {
    function CoTransform(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CoTransform.create = function (value0) {
        return function (value1) {
            return new CoTransform(value0, value1);
        };
    };
    return CoTransform;
})();
var Await = function (x) {
    return x;
};
var runProcess = function (dictMonadRec) {
    return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($185) {
        return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($185));
    });
};
var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
        };
    };
});
var loop = function (dictFunctor) {
    return function (dictMonad) {
        return function (me) {
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
            })(Data_Unit.unit);
        };
    };
};
var fuseWithL = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictFunctor2) {
            return function (dictMonadRec) {
                return function (zap) {
                    return function (fs) {
                        return function (gs) {
                            var go = function (v) {
                                return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
                                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Data_Functor.map(dictFunctor2)(function (t) {
                                            return Control_Monad_Free_Trans.freeT(function (v3) {
                                                return go(t);
                                            });
                                        })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
                                    });
                                }));
                            };
                            return Control_Monad_Free_Trans.freeT(function (v) {
                                return go(new Data_Tuple.Tuple(fs, gs));
                            });
                        };
                    };
                };
            };
        };
    };
};
var fuseWith = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictFunctor2) {
            return function (dictMonadRec) {
                return function (dictParallel) {
                    return function (zap) {
                        return function (fs) {
                            return function (gs) {
                                var go = function (v) {
                                    return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel["__superclass_Control.Applicative.Applicative_1"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictParallel["__superclass_Control.Applicative.Applicative_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                                        if (v1 instanceof Data_Either.Left) {
                                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1.value0));
                                        };
                                        if (v1 instanceof Data_Either.Right) {
                                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                return Control_Monad_Free_Trans.freeT(function (v2) {
                                                    return go(t);
                                                });
                                            })(v1.value0)));
                                        };
                                        throw new Error("Failed pattern match at Control.Coroutine line 76, column 5 - line 78, column 63: " + [ v1.constructor.name ]);
                                    });
                                };
                                return Control_Monad_Free_Trans.freeT(function (v) {
                                    return go(new Data_Tuple.Tuple(fs, gs));
                                });
                            };
                        };
                    };
                };
            };
        };
    };
};
var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
var joinConsumers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorAwait)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return function (v2) {
                        return f(v(v2.value0))(v1(v2.value1));
                    };
                };
            };
        });
    };
};
var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return function ($186) {
                return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(v($186));
            };
        };
    };
});
var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));
var composeTransformers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorTransform)(functorTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return function (i) {
                        var $110 = v(i);
                        var $111 = v1($110.value0);
                        return new Data_Tuple.Tuple($111.value0, f($110.value1)($111.value1));
                    };
                };
            };
        });
    };
};
var transform = function (dictMonad) {
    return function (f) {
        return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
            return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
        });
    };
};
var transformConsumer = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return function (i) {
                        var $118 = v(i);
                        return f($118.value1)(v1($118.value0));
                    };
                };
            };
        });
    };
};
var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Emit(f(v.value0), g(v.value1));
        };
    };
});
var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
var connect = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return f(v.value1)(v1(v.value0));
                };
            };
        });
    };
};
var emit = function (dictMonad) {
    return function (o) {
        return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
    };
};
var joinProducers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorEmit)(functorEmit)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return new Emit(new Data_Tuple.Tuple(v.value0, v1.value0), f(v.value1)(v1.value1));
                };
            };
        });
    };
};
var producer = function (dictMonad) {
    return function (recv) {
        return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
            };
            if (v instanceof Data_Either.Right) {
                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
            };
            throw new Error("Failed pattern match at Control.Coroutine line 119, column 3 - line 121, column 29: " + [ v.constructor.name ]);
        }));
    };
};
var pullFrom = function (dictMonadRec) {
    return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
        return function (v) {
            return function (v1) {
                return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
            };
        };
    });
};
var transformProducer = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorEmit)(functorTransform)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    var $146 = v1(v.value0);
                    return new Emit($146.value0, f(v.value1)($146.value1));
                };
            };
        });
    };
};
var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new CoTransform(f(v.value0), function ($187) {
                return g(v.value1($187));
            });
        };
    };
});
var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));
var composeCoTransformers = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorCoTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return new CoTransform(v1.value0, function (i) {
                        return f(v.value1(i))(v1.value1(v.value0));
                    });
                };
            };
        });
    };
};
var cotransform = function (dictMonad) {
    return function (o) {
        return Control_Monad_Free_Trans.freeT(function (v) {
            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
        });
    };
};
var fuseCoTransform = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorCoTransform)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    var $165 = v(v1.value0);
                    return f($165.value1)(v1.value1($165.value0));
                };
            };
        });
    };
};
var transformCoTransformL = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    return new CoTransform(v1.value0, function (i1) {
                        var $172 = v(i1);
                        return f($172.value1)(v1.value1($172.value0));
                    });
                };
            };
        });
    };
};
var transformCoTransformR = function (dictMonadRec) {
    return function (dictParallel) {
        return fuseWith(functorCoTransform)(functorTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
            return function (v) {
                return function (v1) {
                    var $179 = v1(v.value0);
                    return new CoTransform($179.value0, function ($188) {
                        return (function (v2) {
                            return f(v2)($179.value1);
                        })(v.value1($188));
                    });
                };
            };
        });
    };
};
var $$await = function (dictMonad) {
    return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.id(Control_Category.categoryFn));
};
var consumer = function (dictMonad) {
    return function (send) {
        return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function (v) {
            return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(v));
        }));
    };
};
module.exports = {
    Await: Await, 
    CoTransform: CoTransform, 
    Emit: Emit, 
    Transform: Transform, 
    "await": $$await, 
    composeCoTransformers: composeCoTransformers, 
    composeTransformers: composeTransformers, 
    connect: connect, 
    consumer: consumer, 
    cotransform: cotransform, 
    emit: emit, 
    fuseCoTransform: fuseCoTransform, 
    fuseWith: fuseWith, 
    fuseWithL: fuseWithL, 
    joinConsumers: joinConsumers, 
    joinProducers: joinProducers, 
    loop: loop, 
    producer: producer, 
    pullFrom: pullFrom, 
    runProcess: runProcess, 
    transform: transform, 
    transformCoTransformL: transformCoTransformL, 
    transformCoTransformR: transformCoTransformR, 
    transformConsumer: transformConsumer, 
    transformProducer: transformProducer, 
    bifunctorEmit: bifunctorEmit, 
    functorEmit: functorEmit, 
    profunctorAwait: profunctorAwait, 
    functorAwait: functorAwait, 
    bifunctorTransform: bifunctorTransform, 
    functorTransform: functorTransform, 
    bifunctorCoTransform: bifunctorCoTransform, 
    functorCoTransform: functorCoTransform
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad.Except":79,"../Control.Monad.Except.Trans":78,"../Control.Monad.Free.Trans":83,"../Control.Monad.Rec.Class":90,"../Control.Monad.Trans.Class":95,"../Control.Parallel":102,"../Control.Parallel.Class":101,"../Control.Semigroupoid":104,"../Data.Bifunctor":130,"../Data.Either":144,"../Data.Function":166,"../Data.Functor":173,"../Data.Identity":178,"../Data.Maybe":192,"../Data.Newtype":202,"../Data.Profunctor":212,"../Data.Tuple":229,"../Data.Unit":233,"../Prelude":266}],51:[function(require,module,exports){
var Cycle = require('@cycle/xstream-run');
var xs = require('xstream');

function makeDriver(eff) {
  return function (sink) {
    return eff(sink)();
  };
}

exports._run1 = function (_main, _driver) {
  return function () {
    function main(sources) {
      return {
        a: _main(sources)
      };
    }
    var drivers = {
      a: makeDriver(_driver)
    };
    return Cycle.run(main, drivers);
  };
};

exports._run2 = function (_main, _drivers) {
  return function () {
    function main(sources) {
      var sinks = _main(sources.a)(sources.b);
      return {
        a: sinks.value0,
        b: sinks.value1.value0
      };
    }
    var drivers = {
      a: makeDriver(_drivers.value0),
      b: makeDriver(_drivers.value1.value0)
    };
    return Cycle.run(main, drivers);
  };
};

exports._run3 = function (_main, _drivers) {
  return function () {
    function main(sources) {
      var sinks = _main(sources.a)(sources.b)(sources.c);
      return {
        a: sinks.value0,
        b: sinks.value1.value0,
        c: sinks.value1.value1.value0
      };
    }
    var drivers = {
      a: makeDriver(_drivers.value0),
      b: makeDriver(_drivers.value1.value0),
      c: makeDriver(_drivers.value1.value1.value0)
    };
    return Cycle.run(main, drivers);
  };
};

exports._run4 = function (_main, _drivers) {
  return function () {
    function main(sources) {
      var sinks = _main(sources.a)(sources.b)(sources.c)(sources.d);
      return {
        a: sinks.value0,
        b: sinks.value1.value0,
        c: sinks.value1.value1.value0,
        d: sinks.value1.value1.value1.value0
      };
    }
    var drivers = {
      a: makeDriver(_drivers.value0),
      b: makeDriver(_drivers.value1.value0),
      c: makeDriver(_drivers.value1.value1.value0),
      d: makeDriver(_drivers.value1.value1.value1.value0)
    };
    return Cycle.run(main, drivers);
  };
};

exports._run5 = function (_main, _drivers) {
  return function () {
    function main(sources) {
      var sinks = _main(sources.a)(sources.b)(sources.c)(sources.d)(sources.e);
      return {
        a: sinks.value0,
        b: sinks.value1.value0,
        c: sinks.value1.value1.value0,
        d: sinks.value1.value1.value1.value0,
        e: sinks.value1.value1.value1.value1.value0
      };
    }
    var drivers = {
      a: makeDriver(_drivers.value0),
      b: makeDriver(_drivers.value1.value0),
      c: makeDriver(_drivers.value1.value1.value0),
      d: makeDriver(_drivers.value1.value1.value1.value0),
      e: makeDriver(_drivers.value1.value1.value1.value1.value0)
    };
    return Cycle.run(main, drivers);
  };
};

},{"@cycle/xstream-run":4,"xstream":37}],52:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Tuple_Nested = require("../Data.Tuple.Nested");
var run5 = function (main) {
    return function (drivers) {
        return $foreign._run5(main, drivers);
    };
};
var run4 = function (main) {
    return function (drivers) {
        return $foreign._run4(main, drivers);
    };
};
var run3 = function (main) {
    return function (drivers) {
        return $foreign._run3(main, drivers);
    };
};
var run2 = function (main) {
    return function (drivers) {
        return $foreign._run2(main, drivers);
    };
};
var run1 = function (main) {
    return function (drivers) {
        return $foreign._run1(main, drivers);
    };
};
module.exports = {
    run1: run1, 
    run2: run2, 
    run3: run3, 
    run4: run4, 
    run5: run5
};

},{"../Control.Monad.Eff":76,"../Data.Function.Uncurried":165,"../Data.Tuple.Nested":228,"../Prelude":266,"./foreign":51}],53:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Extend = function (__superclass_Data$dotFunctor$dotFunctor_0, extend) {
    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
    this.extend = extend;
};
var extendFn = function (dictSemigroup) {
    return new Extend(function () {
        return Data_Functor.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extend = function (dict) {
    return dict.extend;
};
var extendFlipped = function (dictExtend) {
    return function (w) {
        return function (f) {
            return extend(dictExtend)(f)(w);
        };
    };
};
var duplicate = function (dictExtend) {
    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
};
var composeCoKleisliFlipped = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f(extend(dictExtend)(g)(w));
            };
        };
    };
};
var composeCoKleisli = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g(extend(dictExtend)(f)(w));
            };
        };
    };
};
module.exports = {
    Extend: Extend, 
    composeCoKleisli: composeCoKleisli, 
    composeCoKleisliFlipped: composeCoKleisliFlipped, 
    duplicate: duplicate, 
    extend: extend, 
    extendFlipped: extendFlipped, 
    extendFn: extendFn
};

},{"../Control.Category":48,"../Data.Functor":173,"../Data.Semigroup":216}],54:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_Unit = require("../Data.Unit");
var Lazy = function (defer) {
    this.defer = defer;
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (dictLazy) {
    return function (f) {
        return defer(dictLazy)(function (v) {
            return f(fix(dictLazy)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    defer: defer, 
    fix: fix
};

},{"../Data.Unit":233}],55:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_Internal = require("../Control.Monad.Aff.Internal");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Function = require("../Data.Function");
var Control_Bind = require("../Control.Bind");
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var fromAVBox = Unsafe_Coerce.unsafeCoerce;
var killVar = function (q) {
    return function (e) {
        return fromAVBox(Control_Monad_Aff_Internal._killVar(Control_Monad_Aff.nonCanceler, q, e));
    };
};
var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(Control_Monad_Aff.nonCanceler));
var peekVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._peekVar(Control_Monad_Aff.nonCanceler, q));
};
var putVar = function (q) {
    return function (a) {
        return fromAVBox(Control_Monad_Aff_Internal._putVar(Control_Monad_Aff.nonCanceler, q, a));
    };
};
var makeVar$prime = function (a) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(makeVar)(function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(putVar(v)(a))(function () {
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v);
        });
    });
};
var takeVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._takeVar(Control_Monad_Aff.nonCanceler, q));
};
var modifyVar = function (f) {
    return function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(takeVar(v))(function ($2) {
            return putVar(v)(f($2));
        });
    };
};
module.exports = {
    killVar: killVar, 
    makeVar: makeVar, 
    "makeVar'": makeVar$prime, 
    modifyVar: modifyVar, 
    peekVar: peekVar, 
    putVar: putVar, 
    takeVar: takeVar
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Control.Monad.Aff":61,"../Control.Monad.Aff.Internal":58,"../Control.Monad.Eff.Exception":68,"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Function.Uncurried":165,"../Prelude":266,"../Unsafe.Coerce":269}],56:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Monad_List_Trans = require("../Control.Monad.List.Trans");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans");
var Data_Monoid = require("../Data.Monoid");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var MonadAff = function (__superclass_Control$dotMonad$dotEff$dotClass$dotMonadEff_0, liftAff) {
    this["__superclass_Control.Monad.Eff.Class.MonadEff_0"] = __superclass_Control$dotMonad$dotEff$dotClass$dotMonadEff_0;
    this.liftAff = liftAff;
};
var monadAffAff = new MonadAff(function () {
    return Control_Monad_Aff.monadEffAff;
}, Control_Category.id(Control_Category.categoryFn));
var liftAff = function (dict) {
    return dict.liftAff;
};
var monadAffContT = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Cont_Trans.monadEffContT(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
    }, function ($10) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($10));
    });
};
var monadAffExceptT = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Except_Trans.monadEffExceptT(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
    }, function ($11) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($11));
    });
};
var monadAffListT = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_List_Trans.monadEffListT(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
    }, function ($12) {
        return Control_Monad_Trans_Class.lift(Control_Monad_List_Trans.monadTransListT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($12));
    });
};
var monadAffMaybe = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Maybe_Trans.monadEffMaybe(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
    }, function ($13) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($13));
    });
};
var monadAffRWS = function (dictMonadAff) {
    return function (dictMonoid) {
        return new MonadAff(function () {
            return Control_Monad_RWS_Trans.monadEffRWS(dictMonoid)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
        }, function ($14) {
            return Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($14));
        });
    };
};
var monadAffReader = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_Reader_Trans.monadEffReader(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
    }, function ($15) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($15));
    });
};
var monadAffState = function (dictMonadAff) {
    return new MonadAff(function () {
        return Control_Monad_State_Trans.monadEffState(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
    }, function ($16) {
        return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($16));
    });
};
var monadAffWriter = function (dictMonadAff) {
    return function (dictMonoid) {
        return new MonadAff(function () {
            return Control_Monad_Writer_Trans.monadEffWriter(dictMonoid)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
        }, function ($17) {
            return Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($17));
        });
    };
};
module.exports = {
    MonadAff: MonadAff, 
    liftAff: liftAff, 
    monadAffAff: monadAffAff, 
    monadAffContT: monadAffContT, 
    monadAffExceptT: monadAffExceptT, 
    monadAffListT: monadAffListT, 
    monadAffMaybe: monadAffMaybe, 
    monadAffReader: monadAffReader, 
    monadAffRWS: monadAffRWS, 
    monadAffState: monadAffState, 
    monadAffWriter: monadAffWriter
};

},{"../Control.Category":48,"../Control.Monad.Aff":61,"../Control.Monad.Cont.Trans":63,"../Control.Monad.Eff.Class":64,"../Control.Monad.Except.Trans":78,"../Control.Monad.List.Trans":85,"../Control.Monad.Maybe.Trans":86,"../Control.Monad.RWS.Trans":87,"../Control.Monad.Reader.Trans":89,"../Control.Monad.State.Trans":94,"../Control.Monad.Trans.Class":95,"../Control.Monad.Writer.Trans":97,"../Control.Semigroupoid":104,"../Data.Monoid":200,"../Prelude":266}],57:[function(require,module,exports){
"use strict";

exports._makeVar = function (nonCanceler) {
  return function (success, error) {
    try {
      success({
        consumers: [],
        producers: [],
        error: undefined
      });
    } catch (err) {
      error(err);
    }

    return nonCanceler;
  };
};

exports._takeVar = function (nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      var producer = avar.producers.shift();

      producer(success, error);
    } else {
      avar.consumers.push({ success: success, error: error });
    }

    return nonCanceler;
  };
};

exports._peekVar = function (nonCanceler, avar) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      var producer = avar.producers[0];
      producer(success, error);
    } else {
      avar.consumers.push({ peek: true, success: success, error: error });
    }
    return nonCanceler;
  };
};

exports._putVar = function (nonCanceler, avar, a) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.consumers.length === 0) {
      avar.producers.push(function (success, error) {
        try {
          success(a);
        } catch (err) {
          error(err);
        }
      });

      success({});
    } else {

      var consumer;
      do {
        consumer = avar.consumers.shift();
        try {
          consumer.success(a);
        } catch (err) {
          error(err);
          return;
        }
      } while (consumer.peek === true);

      success({});
    }

    return nonCanceler;
  };
};

exports._killVar = function (nonCanceler, avar, e) {
  return function (success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else {
      var errors = [];

      avar.error = e;

      while (avar.consumers.length > 0) {
        var consumer = avar.consumers.shift();

        try {
          consumer.error(e);
        } catch (err) {
          errors.push(err);
        }
      }

      if (errors.length > 0) error(errors[0]);
      else success({});
    }

    return nonCanceler;
  };
};

},{}],58:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
module.exports = {
    _killVar: $foreign._killVar, 
    _makeVar: $foreign._makeVar, 
    _peekVar: $foreign._peekVar, 
    _putVar: $foreign._putVar, 
    _takeVar: $foreign._takeVar
};

},{"../Control.Monad.Eff.Exception":68,"../Data.Function.Uncurried":165,"../Prelude":266,"./foreign":57}],59:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var unsafeCoerceAff = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    unsafeCoerceAff: unsafeCoerceAff
};

},{"../Control.Monad.Aff":61,"../Unsafe.Coerce":269}],60:[function(require,module,exports){
/* globals setTimeout, clearTimeout, setImmediate, clearImmediate */
"use strict";

exports._cancelWith = function (nonCanceler, aff, canceler1) {
  return function (success, error) {
    var canceler2 = aff(success, error);

    return function (e) {
      return function (success, error) {
        var cancellations = 0;
        var result = false;
        var errored = false;

        var s = function (bool) {
          cancellations = cancellations + 1;
          result = result || bool;

          if (cancellations === 2 && !errored) {
            success(result);
          }
        };

        var f = function (err) {
          if (!errored) {
            errored = true;
            error(err);
          }
        };

        canceler2(e)(s, f);
        canceler1(e)(s, f);

        return nonCanceler;
      };
    };
  };
};

exports._setTimeout = function (nonCanceler, millis, aff) {
  var set = setTimeout;
  var clear = clearTimeout;
  if (millis <= 0 && typeof setImmediate === "function") {
    set = setImmediate;
    clear = clearImmediate;
  }
  return function (success, error) {
    var canceler;

    var timeout = set(function () {
      canceler = aff(success, error);
    }, millis);

    return function (e) {
      return function (s, f) {
        if (canceler !== undefined) {
          return canceler(e)(s, f);
        } else {
          clear(timeout);
          s(true);
          return nonCanceler;
        }
      };
    };
  };
};

exports._unsafeInterleaveAff = function (aff) {
  return aff;
};

exports._forkAff = function (nonCanceler, aff) {
  var voidF = function () {};

  return function (success) {
    var canceler = aff(voidF, voidF);
    success(canceler);
    return nonCanceler;
  };
};

exports._forkAll = function (nonCanceler, foldl, affs) {
  var voidF = function () {};

  return function (success, error) {
    try {
      var cancelers = foldl(function (acc) {
        return function (aff) {
          acc.push(aff(voidF, voidF));
          return acc;
        };
      })([])(affs);
    } catch (err) {
      error(err);
    }

    var canceler = function (e) {
      return function (success, error) {
        var cancellations = 0;
        var result        = false;
        var errored       = false;

        var s = function (bool) {
          cancellations = cancellations + 1;
          result        = result || bool;

          if (cancellations === cancelers.length && !errored) {
            success(result);
          }
        };

        var f = function (err) {
          if (!errored) {
            errored = true;
            error(err);
          }
        };

        for (var i = 0; i < cancelers.length; i++) {
          cancelers[i](e)(s, f);
        }

        return nonCanceler;
      };
    };

    success(canceler);
    return nonCanceler;
  };
};

exports._makeAff = function (cb) {
  return function (success, error) {
    try {
      return cb(function (e) {
        return function () {
          error(e);
        };
      })(function (v) {
        return function () {
          success(v);
        };
      })();
    } catch (err) {
      error(err);
    }
  };
};

exports._pure = function (nonCanceler, v) {
  return function (success) {
    success(v);
    return nonCanceler;
  };
};

exports._throwError = function (nonCanceler, e) {
  return function (success, error) {
    error(e);
    return nonCanceler;
  };
};

exports._fmap = function (f, aff) {
  return function (success, error) {
    try {
      return aff(function (v) {
        try {
          var v2 = f(v);
        } catch (err) {
          error(err);
        }
        success(v2);
      }, error);
    } catch (err) {
      error(err);
    }
  };
};

exports._bind = function (alwaysCanceler, aff, f) {
  return function (success, error) {
    var canceler1, canceler2;

    var isCanceled    = false;
    var requestCancel = false;

    var onCanceler = function () {};

    canceler1 = aff(function (v) {
      if (requestCancel) {
        isCanceled = true;

        return alwaysCanceler;
      } else {
        canceler2 = f(v)(success, error);

        onCanceler(canceler2);

        return canceler2;
      }
    }, error);

    return function (e) {
      return function (s, f) {
        requestCancel = true;

        if (canceler2 !== undefined) {
          return canceler2(e)(s, f);
        } else {
          return canceler1(e)(function (bool) {
            if (bool || isCanceled) {
              s(true);
            } else {
              onCanceler = function (canceler) {
                canceler(e)(s, f);
              };
            }
          }, f);
        }
      };
    };
  };
};

exports._attempt = function (Left, Right, aff) {
  return function (success) {
    try {
      return aff(function (v) {
        success(Right(v));
      }, function (e) {
        success(Left(e));
      });
    } catch (err) {
      success(Left(err));
    }
  };
};

exports._runAff = function (errorT, successT, aff) {
  return function () {
    return aff(function (v) {
      successT(v)();
    }, function (e) {
      errorT(e)();
    });
  };
};

exports._liftEff = function (nonCanceler, e) {
  return function (success, error) {
    var result;
    try {
      result = e();
    } catch (err) {
      error(err);
      return nonCanceler;
    }

    success(result);
    return nonCanceler;
  };
};

exports._tailRecM = function (isLeft, f, a) {
  return function (success, error) {
    return function go (acc) {
      var result, status, canceler;

      // Observes synchronous effects using a flag.
      //   status = 0 (unresolved status)
      //   status = 1 (synchronous effect)
      //   status = 2 (asynchronous effect)

      var csuccess = function (v) {
        // If the status is still unresolved, we have observed a
        // synchronous effect. Otherwise, the status will be `2`.
        if (status === 0) {
          // Store the result for further synchronous processing.
          result = v;
          status = 1;
        } else {
          // When we have observed an asynchronous effect, we use normal
          // recursion. This is safe because we will be on a new stack.
          if (isLeft(v)) {
            go(v.value0);
          } else {
            try {
              success(v.value0);
            } catch (err) {
              error(err);
            }
          }
        }
      };

      while (true) {
        status = 0;
        canceler = f(acc)(csuccess, error);

        // If the status has already resolved to `1` by our Aff handler, then
        // we have observed a synchronous effect. Otherwise it will still be
        // `0`.
        if (status === 1) {
          // When we have observed a synchronous effect, we merely swap out the
          // accumulator and continue the loop, preserving stack.
          if (isLeft(result)) {
            acc = result.value0;
            continue;
          } else {
            try {
              success(result.value0);
            } catch (err) {
              error(err);
            }
          }
        } else {
          // If the status has not resolved yet, then we have observed an
          // asynchronous effect.
          status = 2;
        }
        return canceler;
      }

    }(a);
  };
};

},{}],61:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Aff_Internal = require("../Control.Monad.Aff.Internal");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_Parallel = require("../Control.Parallel");
var Control_Plus = require("../Control.Plus");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Function = require("../Data.Function");
var Control_MonadZero = require("../Control.MonadZero");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Semiring = require("../Data.Semiring");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Data_Unit = require("../Data.Unit");
var ParAff = function (x) {
    return x;
};
var Canceler = function (x) {
    return x;
};
var runAff = function (ex) {
    return function (f) {
        return function (aff) {
            return $foreign._runAff(ex, f, aff);
        };
    };
};
var newtypeParAff = new Data_Newtype.Newtype(function (n) {
    return n;
}, ParAff);
var makeAff$prime = function (h) {
    return $foreign._makeAff(h);
};
var functorAff = new Data_Functor.Functor(function (f) {
    return function (fa) {
        return $foreign._fmap(f, fa);
    };
});
var functorParAff = functorAff;
var fromAVBox = Unsafe_Coerce.unsafeCoerce;
var cancel = function (v) {
    return v;
};
var launchAff = (function () {
    var lowerEx = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($47) {
        return Canceler(Data_Functor.map(Data_Functor.functorFn)($foreign._unsafeInterleaveAff)(cancel($47)));
    });
    return function ($48) {
        return lowerEx(runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($foreign._unsafeInterleaveAff($48)));
    };
})();
var attempt = function (aff) {
    return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
};
var apathize = function (a) {
    return Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit))(attempt(a));
};
var applyAff = new Control_Apply.Apply(function () {
    return functorAff;
}, function (ff) {
    return function (fa) {
        return $foreign._bind(alwaysCanceler, ff, function (f) {
            return Data_Functor.map(functorAff)(f)(fa);
        });
    };
});
var applicativeAff = new Control_Applicative.Applicative(function () {
    return applyAff;
}, function (v) {
    return $foreign._pure(nonCanceler, v);
});
var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
var cancelWith = function (aff) {
    return function (c) {
        return $foreign._cancelWith(nonCanceler, aff, c);
    };
};
var forkAff = function (aff) {
    return $foreign._forkAff(nonCanceler, aff);
};
var forkAll = function (dictFoldable) {
    return function (affs) {
        return $foreign._forkAll(nonCanceler, Data_Foldable.foldl(dictFoldable), affs);
    };
};
var killVar = function (q) {
    return function (e) {
        return fromAVBox(Control_Monad_Aff_Internal._killVar(nonCanceler, q, e));
    };
};
var later$prime = function (n) {
    return function (aff) {
        return $foreign._setTimeout(nonCanceler, n, aff);
    };
};
var later = later$prime(0);
var liftEff$prime = function (eff) {
    return attempt($foreign._unsafeInterleaveAff($foreign._liftEff(nonCanceler, eff)));
};
var makeAff = function (h) {
    return makeAff$prime(function (e) {
        return function (a) {
            return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Function["const"](nonCanceler))(h(e)(a));
        };
    });
};
var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(nonCanceler));
var putVar = function (q) {
    return function (a) {
        return fromAVBox(Control_Monad_Aff_Internal._putVar(nonCanceler, q, a));
    };
};
var takeVar = function (q) {
    return fromAVBox(Control_Monad_Aff_Internal._takeVar(nonCanceler, q));
};
var semigroupAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (a) {
        return function (b) {
            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_Semigroup.append(dictSemigroup))(a))(b);
        };
    });
};
var monoidAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAff(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
    }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};
var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function (e) {
            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(v(e)))(v1(e));
        };
    };
});
var monoidCanceler = new Data_Monoid.Monoid(function () {
    return semigroupCanceler;
}, Data_Function["const"](Control_Applicative.pure(applicativeAff)(true)));
var bindAff = new Control_Bind.Bind(function () {
    return applyAff;
}, function (fa) {
    return function (f) {
        return $foreign._bind(alwaysCanceler, fa, f);
    };
});
var applyParAff = new Control_Apply.Apply(function () {
    return functorParAff;
}, function (v) {
    return function (v1) {
        var putOrKill = function (v2) {
            return Data_Either.either(killVar(v2))(putVar(v2));
        };
        return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
            return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v2))(attempt(v))))(function (v4) {
                    return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v3))(attempt(v1))))(function (v5) {
                        return cancelWith(Control_Apply.apply(applyAff)(takeVar(v2))(takeVar(v3)))(Data_Semigroup.append(semigroupCanceler)(v4)(v5));
                    });
                });
            });
        });
    };
});
var applicativeParAff = new Control_Applicative.Applicative(function () {
    return applyParAff;
}, function ($49) {
    return ParAff(Control_Applicative.pure(applicativeAff)($49));
});
var semigroupParAff = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (a) {
        return function (b) {
            return Control_Apply.apply(applyParAff)(Data_Functor.map(functorParAff)(Data_Semigroup.append(dictSemigroup))(a))(b);
        };
    });
};
var monoidParAff = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupParAff(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
    }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
};
var monadAff = new Control_Monad.Monad(function () {
    return applicativeAff;
}, function () {
    return bindAff;
});
var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
    return monadAff;
}, function (eff) {
    return $foreign._liftEff(nonCanceler, eff);
});
var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadAff;
}, function (f) {
    return function (a) {
        var isLoop = function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return true;
            };
            return false;
        };
        return $foreign._tailRecM(isLoop, f, a);
    };
});
var parallelParAff = new Control_Parallel_Class.Parallel(function () {
    return applicativeParAff;
}, function () {
    return monadAff;
}, ParAff, function (v) {
    return v;
});
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
    return monadAff;
}, function (aff) {
    return function (ex) {
        return Control_Bind.bind(bindAff)(attempt(aff))(Data_Either.either(ex)(Control_Applicative.pure(applicativeAff)));
    };
}, function (e) {
    return $foreign._throwError(nonCanceler, e);
});
var $$finally = function (aff1) {
    return function (aff2) {
        return Control_Bind.bind(bindAff)(attempt(aff1))(function (v) {
            return Control_Bind.bind(bindAff)(aff2)(function () {
                return Data_Either.either(Control_Monad_Error_Class.throwError(monadErrorAff))(Control_Applicative.pure(applicativeAff))(v);
            });
        });
    };
};
var altParAff = new Control_Alt.Alt(function () {
    return functorParAff;
}, function (v) {
    return function (v1) {
        var maybeKill = function (va) {
            return function (ve) {
                return function (err) {
                    return Control_Bind.bind(bindAff)(takeVar(ve))(function (v2) {
                        return Control_Bind.bind(bindAff)(Control_Applicative.when(applicativeAff)(v2 === 1)(killVar(va)(err)))(function () {
                            return putVar(ve)(v2 + 1 | 0);
                        });
                    });
                };
            };
        };
        return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
            return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                return Control_Bind.bind(bindAff)(putVar(v3)(0))(function () {
                    return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v2)(v3))(putVar(v2)))(attempt(v))))(function (v4) {
                        return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v2)(v3))(putVar(v2)))(attempt(v1))))(function (v5) {
                            return cancelWith(takeVar(v2))(Data_Semigroup.append(semigroupCanceler)(v4)(v5));
                        });
                    });
                });
            });
        });
    };
});
var altAff = new Control_Alt.Alt(function () {
    return functorAff;
}, function (a1) {
    return function (a2) {
        return Control_Bind.bind(bindAff)(attempt(a1))(Data_Either.either(Data_Function["const"](a2))(Control_Applicative.pure(applicativeAff)));
    };
});
var plusAff = new Control_Plus.Plus(function () {
    return altAff;
}, Control_Monad_Error_Class.throwError(monadErrorAff)(Control_Monad_Eff_Exception.error("Always fails")));
var alternativeAff = new Control_Alternative.Alternative(function () {
    return applicativeAff;
}, function () {
    return plusAff;
});
var monadZero = new Control_MonadZero.MonadZero(function () {
    return alternativeAff;
}, function () {
    return monadAff;
});
var monadPlusAff = new Control_MonadPlus.MonadPlus(function () {
    return monadZero;
});
var plusParAff = new Control_Plus.Plus(function () {
    return altParAff;
}, Control_Plus.empty(plusAff));
var alternativeParAff = new Control_Alternative.Alternative(function () {
    return applicativeParAff;
}, function () {
    return plusParAff;
});
module.exports = {
    Canceler: Canceler, 
    ParAff: ParAff, 
    apathize: apathize, 
    attempt: attempt, 
    cancel: cancel, 
    cancelWith: cancelWith, 
    "finally": $$finally, 
    forkAff: forkAff, 
    forkAll: forkAll, 
    later: later, 
    "later'": later$prime, 
    launchAff: launchAff, 
    "liftEff'": liftEff$prime, 
    makeAff: makeAff, 
    "makeAff'": makeAff$prime, 
    nonCanceler: nonCanceler, 
    runAff: runAff, 
    semigroupAff: semigroupAff, 
    monoidAff: monoidAff, 
    functorAff: functorAff, 
    applyAff: applyAff, 
    applicativeAff: applicativeAff, 
    bindAff: bindAff, 
    monadAff: monadAff, 
    monadEffAff: monadEffAff, 
    monadErrorAff: monadErrorAff, 
    altAff: altAff, 
    plusAff: plusAff, 
    alternativeAff: alternativeAff, 
    monadZero: monadZero, 
    monadPlusAff: monadPlusAff, 
    monadRecAff: monadRecAff, 
    semigroupCanceler: semigroupCanceler, 
    monoidCanceler: monoidCanceler, 
    newtypeParAff: newtypeParAff, 
    semigroupParAff: semigroupParAff, 
    monoidParAff: monoidParAff, 
    functorParAff: functorParAff, 
    applyParAff: applyParAff, 
    applicativeParAff: applicativeParAff, 
    altParAff: altParAff, 
    plusParAff: plusParAff, 
    alternativeParAff: alternativeParAff, 
    parallelParAff: parallelParAff
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Control.Monad.Aff.Internal":58,"../Control.Monad.Eff":76,"../Control.Monad.Eff.Class":64,"../Control.Monad.Eff.Exception":68,"../Control.Monad.Error.Class":77,"../Control.Monad.Rec.Class":90,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Parallel":102,"../Control.Parallel.Class":101,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Function.Uncurried":165,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Unit":233,"../Prelude":266,"../Unsafe.Coerce":269,"./foreign":60}],62:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var MonadCont = function (__superclass_Control$dotMonad$dotMonad_0, callCC) {
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
    this.callCC = callCC;
};
var callCC = function (dict) {
    return dict.callCC;
};
module.exports = {
    MonadCont: MonadCont, 
    callCC: callCC
};

},{"../Prelude":266}],63:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Data_Newtype = require("../Data.Newtype");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var ContT = function (x) {
    return x;
};
var withContT = function (f) {
    return function (v) {
        return function (k) {
            return v(f(k));
        };
    };
};
var runContT = function (v) {
    return function (k) {
        return v(k);
    };
};
var newtypeContT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ContT);
var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return function (k) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(k);
        };
    };
});
var mapContT = function (f) {
    return function (v) {
        return function (k) {
            return f(v(k));
        };
    };
};
var functorContT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (k) {
                return v(function (a) {
                    return k(f(a));
                });
            };
        };
    });
};
var applyContT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorContT(dictApply["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return function (v1) {
            return function (k) {
                return v(function (g) {
                    return v1(function (a) {
                        return k(g(a));
                    });
                });
            };
        };
    });
};
var bindContT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyContT(dictBind["__superclass_Control.Apply.Apply_0"]());
    }, function (v) {
        return function (k) {
            return function (k$prime) {
                return v(function (a) {
                    var $36 = k(a);
                    return $36(k$prime);
                });
            };
        };
    });
};
var applicativeContT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyContT(dictApplicative["__superclass_Control.Apply.Apply_0"]());
    }, function (a) {
        return function (k) {
            return k(a);
        };
    });
};
var monadContT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeContT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
    }, function () {
        return bindContT(dictMonad["__superclass_Control.Bind.Bind_1"]());
    });
};
var monadAskContT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadContT(dictMonadAsk["__superclass_Control.Monad.Monad_0"]());
    }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderContT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskContT(dictMonadReader["__superclass_Control.Monad.Reader.Class.MonadAsk_0"]());
    }, function (f) {
        return function (v) {
            return function (k) {
                return Control_Bind.bind(((dictMonadReader["__superclass_Control.Monad.Reader.Class.MonadAsk_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Reader_Class.ask(dictMonadReader["__superclass_Control.Monad.Reader.Class.MonadAsk_0"]()))(function (v1) {
                    return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function ($42) {
                        return Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](v1))(k($42));
                    }));
                });
            };
        };
    });
};
var monadContContT = function (dictMonad) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadContT(dictMonad);
    }, function (f) {
        return function (k) {
            var $41 = f(function (a) {
                return function (v) {
                    return k(a);
                };
            });
            return $41(k);
        };
    });
};
var monadEffContT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadContT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
    }, function ($43) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($43));
    });
};
var monadStateContT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadContT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
    }, function ($44) {
        return Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)($44));
    });
};
module.exports = {
    ContT: ContT, 
    mapContT: mapContT, 
    runContT: runContT, 
    withContT: withContT, 
    newtypeContT: newtypeContT, 
    monadContContT: monadContContT, 
    functorContT: functorContT, 
    applyContT: applyContT, 
    applicativeContT: applicativeContT, 
    bindContT: bindContT, 
    monadContT: monadContT, 
    monadTransContT: monadTransContT, 
    monadEffContT: monadEffContT, 
    monadAskContT: monadAskContT, 
    monadReaderContT: monadReaderContT, 
    monadStateContT: monadStateContT
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Control.Monad.Cont.Class":62,"../Control.Monad.Eff.Class":64,"../Control.Monad.Reader.Class":88,"../Control.Monad.State.Class":93,"../Control.Monad.Trans.Class":95,"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Functor":173,"../Data.Newtype":202,"../Prelude":266}],64:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var MonadEff = function (__superclass_Control$dotMonad$dotMonad_0, liftEff) {
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
    this.liftEff = liftEff;
};
var monadEffEff = new MonadEff(function () {
    return Control_Monad_Eff.monadEff;
}, Control_Category.id(Control_Category.categoryFn));
var liftEff = function (dict) {
    return dict.liftEff;
};
module.exports = {
    MonadEff: MonadEff, 
    liftEff: liftEff, 
    monadEffEff: monadEffEff
};

},{"../Control.Category":48,"../Control.Monad":98,"../Control.Monad.Eff":76}],65:[function(require,module,exports){
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
    return {};
  };
};

},{}],66:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var warnShow = function (dictShow) {
    return function (a) {
        return $foreign.warn(Data_Show.show(dictShow)(a));
    };
};
var logShow = function (dictShow) {
    return function (a) {
        return $foreign.log(Data_Show.show(dictShow)(a));
    };
};
var infoShow = function (dictShow) {
    return function (a) {
        return $foreign.info(Data_Show.show(dictShow)(a));
    };
};
var errorShow = function (dictShow) {
    return function (a) {
        return $foreign.error(Data_Show.show(dictShow)(a));
    };
};
module.exports = {
    errorShow: errorShow, 
    infoShow: infoShow, 
    logShow: logShow, 
    warnShow: warnShow, 
    error: $foreign.error, 
    info: $foreign.info, 
    log: $foreign.log, 
    warn: $foreign.warn
};

},{"../Control.Monad.Eff":76,"../Data.Show":221,"../Data.Unit":233,"./foreign":65}],67:[function(require,module,exports){
"use strict";

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};

},{}],68:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Either = require("../Data.Either");
var Data_Maybe = require("../Data.Maybe");
var Data_Show = require("../Data.Show");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Applicative = require("../Control.Applicative");
var Data_Functor = require("../Data.Functor");
var $$try = function (action) {
    return $foreign.catchException(function ($0) {
        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Either.Left.create($0));
    })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.Right.create)(action));
};
var $$throw = function ($1) {
    return $foreign.throwException($foreign.error($1));
};
var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Data_Show.Show($foreign.showErrorImpl);
module.exports = {
    stack: stack, 
    "throw": $$throw, 
    "try": $$try, 
    showError: showError, 
    catchException: $foreign.catchException, 
    error: $foreign.error, 
    message: $foreign.message, 
    throwException: $foreign.throwException
};

},{"../Control.Applicative":41,"../Control.Monad.Eff":76,"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Functor":173,"../Data.Maybe":192,"../Data.Show":221,"../Prelude":266,"./foreign":67}],69:[function(require,module,exports){
"use strict";

exports.newRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modifyRef'"] = function (ref) {
  return function (f) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.writeRef = function (ref) {
  return function (val) {
    return function () {
      ref.value = val;
      return {};
    };
  };
};

},{}],70:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Unit = require("../Data.Unit");
var modifyRef = function (ref) {
    return function (f) {
        return $foreign["modifyRef'"](ref)(function (s) {
            return {
                state: f(s), 
                value: Data_Unit.unit
            };
        });
    };
};
module.exports = {
    modifyRef: modifyRef, 
    "modifyRef'": $foreign["modifyRef'"], 
    newRef: $foreign.newRef, 
    readRef: $foreign.readRef, 
    writeRef: $foreign.writeRef
};

},{"../Control.Monad.Eff":76,"../Data.Unit":233,"../Prelude":266,"./foreign":69}],71:[function(require,module,exports){
/* global exports */
"use strict";

exports.setTimeout = function (ms) {
  return function (fn) {
    return function () {
      return setTimeout(fn, ms);
    };
  };
};

exports.clearTimeout = function (id) {
  return function () {
    clearTimeout(id);
  };
};

exports.setInterval = function (ms) {
  return function (fn) {
    return function () {
      return setInterval(fn, ms);
    };
  };
};

exports.clearInterval = function (id) {
  return function () {
    clearInterval(id);
  };
};

},{}],72:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var TimeoutId = function (x) {
    return x;
};
var IntervalId = function (x) {
    return x;
};
var eqTimeoutId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordTimeoutId = new Data_Ord.Ord(function () {
    return eqTimeoutId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var eqIntervalId = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordIntervalId = new Data_Ord.Ord(function () {
    return eqIntervalId;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
module.exports = {
    eqTimeoutId: eqTimeoutId, 
    ordTimeoutId: ordTimeoutId, 
    eqIntervalId: eqIntervalId, 
    ordIntervalId: ordIntervalId, 
    clearInterval: $foreign.clearInterval, 
    clearTimeout: $foreign.clearTimeout, 
    setInterval: $foreign.setInterval, 
    setTimeout: $foreign.setTimeout
};

},{"../Control.Monad.Eff":76,"../Data.Eq":147,"../Data.Ord":209,"../Prelude":266,"./foreign":71}],73:[function(require,module,exports){
"use strict";

exports.unsafeCoerceEff = function (f) {
  return f;
};

},{}],74:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var unsafePerformEff = function ($0) {
    return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
};
module.exports = {
    unsafePerformEff: unsafePerformEff, 
    unsafeCoerceEff: $foreign.unsafeCoerceEff
};

},{"../Control.Monad.Eff":76,"../Control.Semigroupoid":104,"./foreign":73}],75:[function(require,module,exports){
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],76:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var monadEff = new Control_Monad.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Control_Bind.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Control_Apply.Apply(function () {
    return functorEff;
}, Control_Monad.ap(monadEff));
var applicativeEff = new Control_Applicative.Applicative(function () {
    return applyEff;
}, $foreign.pureE);
var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    forE: $foreign.forE, 
    foreachE: $foreign.foreachE, 
    runPure: $foreign.runPure, 
    untilE: $foreign.untilE, 
    whileE: $foreign.whileE
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Data.Functor":173,"../Data.Unit":233,"./foreign":75}],77:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Unit = require("../Data.Unit");
var MonadError = function (__superclass_Control$dotMonad$dotMonad_0, catchError, throwError) {
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
    this.catchError = catchError;
    this.throwError = throwError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadErrorMaybe = new MonadError(function () {
    return Data_Maybe.monadMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
            return v1(Data_Unit.unit);
        };
        if (v instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 55, column 3 - line 55, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadErrorEither = new MonadError(function () {
    return Data_Either.monadEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Either.Left) {
            return v1(v.value0);
        };
        if (v instanceof Data_Either.Right) {
            return new Data_Either.Right(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 50, column 3 - line 50, column 30: " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Data_Either.Left.create);
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (dictMonadError) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var $12 = p(e);
                    if ($12 instanceof Data_Maybe.Nothing) {
                        return throwError(dictMonadError)(e);
                    };
                    if ($12 instanceof Data_Maybe.Just) {
                        return handler($12.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 44, column 5 - line 46, column 26: " + [ $12.constructor.name ]);
                };
                return catchError(dictMonadError)(act)(handle);
            };
        };
    };
};
module.exports = {
    MonadError: MonadError, 
    catchError: catchError, 
    catchJust: catchJust, 
    throwError: throwError, 
    monadErrorEither: monadErrorEither, 
    monadErrorMaybe: monadErrorMaybe
};

},{"../Data.Either":144,"../Data.Function":166,"../Data.Maybe":192,"../Data.Unit":233,"../Prelude":266}],78:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Either = require("../Data.Either");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Monad = require("../Control.Monad");
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Bind = require("../Control.Bind");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Function = require("../Data.Function");
var Control_Category = require("../Control.Category");
var ExceptT = function (x) {
    return x;
};
var withExceptT = function (dictFunctor) {
    return function (f) {
        return function (v) {
            var mapLeft = function (v1) {
                return function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return new Data_Either.Right(v2.value0);
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return new Data_Either.Left(v1(v2.value0));
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: " + [ v1.constructor.name, v2.constructor.name ]);
                };
            };
            return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
        };
    };
};
var runExceptT = function (v) {
    return v;
};
var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ExceptT);
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v));
        });
    };
});
var mapExceptT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorExceptT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
};
var except = function (dictApplicative) {
    return function ($87) {
        return ExceptT(Control_Applicative.pure(dictApplicative)($87));
    };
};
var monadExceptT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeExceptT(dictMonad);
    }, function () {
        return bindExceptT(dictMonad);
    });
};
var bindExceptT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function ($88) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($88));
            })(function (a) {
                var $56 = k(a);
                return $56;
            }));
        };
    });
};
var applyExceptT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorExceptT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
};
var applicativeExceptT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyExceptT(dictMonad);
    }, function ($89) {
        return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($89)));
    });
};
var monadAskExceptT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadExceptT(dictMonadAsk["__superclass_Control.Monad.Monad_0"]());
    }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderExceptT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskExceptT(dictMonadReader["__superclass_Control.Monad.Reader.Class.MonadAsk_0"]());
    }, function (f) {
        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContExceptT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadExceptT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
    }, function (f) {
        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var $57 = f(function (a) {
                return ExceptT(c(new Data_Either.Right(a)));
            });
            return $57;
        }));
    });
};
var monadEffExceptT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadExceptT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
    }, function ($90) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($90));
    });
};
var monadErrorExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function (a) {
                var $60 = k(a);
                return $60;
            })(function ($91) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($91));
            }));
        };
    }, function ($92) {
        return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($92)));
    });
};
var monadRecExceptT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
    }, function (f) {
        return function ($93) {
            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())((function () {
                    var $61 = f(a);
                    return $61;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
                        if (m$prime instanceof Data_Either.Left) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 76, column 9 - line 79, column 43: " + [ m$prime.constructor.name ]);
                    })());
                });
            })($93));
        };
    });
};
var monadStateExceptT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadExceptT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellExceptT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadExceptT(dictMonadTell["__superclass_Control.Monad.Monad_0"]());
    }, function ($94) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.tell(dictMonadTell)($94));
    });
};
var monadWriterExceptT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellExceptT(dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]());
    }, mapExceptT(function (m) {
        return Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Functor.map(Data_Either.functorEither)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapExceptT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
                if (v instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.id(Control_Category.categoryFn));
                };
                if (v instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 136, column 5 - line 138, column 44: " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var altExceptT = function (dictSemigroup) {
    return function (dictMonad) {
        return new Control_Alt.Alt(function () {
            return functorExceptT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
        }, function (v) {
            return function (v1) {
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v2.value0));
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v1)(function (v3) {
                            if (v3 instanceof Data_Either.Right) {
                                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v3.value0));
                            };
                            if (v3 instanceof Data_Either.Left) {
                                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 88, column 9 - line 90, column 49: " + [ v3.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 84, column 5 - line 90, column 49: " + [ v2.constructor.name ]);
                });
            };
        });
    };
};
var plusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Plus.Plus(function () {
            return altExceptT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonad);
        }, Control_Monad_Error_Class.throwError(monadErrorExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var alternativeExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Alternative.Alternative(function () {
            return applicativeExceptT(dictMonad);
        }, function () {
            return plusExceptT(dictMonoid)(dictMonad);
        });
    };
};
var monadZeroExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function () {
            return monadExceptT(dictMonad);
        });
    };
};
var monadPlusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroExceptT(dictMonoid)(dictMonad);
        });
    };
};
module.exports = {
    ExceptT: ExceptT, 
    except: except, 
    mapExceptT: mapExceptT, 
    runExceptT: runExceptT, 
    withExceptT: withExceptT, 
    newtypeExceptT: newtypeExceptT, 
    functorExceptT: functorExceptT, 
    applyExceptT: applyExceptT, 
    applicativeExceptT: applicativeExceptT, 
    bindExceptT: bindExceptT, 
    monadExceptT: monadExceptT, 
    monadRecExceptT: monadRecExceptT, 
    altExceptT: altExceptT, 
    plusExceptT: plusExceptT, 
    alternativeExceptT: alternativeExceptT, 
    monadPlusExceptT: monadPlusExceptT, 
    monadZeroExceptT: monadZeroExceptT, 
    monadTransExceptT: monadTransExceptT, 
    monadEffExceptT: monadEffExceptT, 
    monadContExceptT: monadContExceptT, 
    monadErrorExceptT: monadErrorExceptT, 
    monadAskExceptT: monadAskExceptT, 
    monadReaderExceptT: monadReaderExceptT, 
    monadStateExceptT: monadStateExceptT, 
    monadTellExceptT: monadTellExceptT, 
    monadWriterExceptT: monadWriterExceptT
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad":98,"../Control.Monad.Cont.Class":62,"../Control.Monad.Eff.Class":64,"../Control.Monad.Error.Class":77,"../Control.Monad.Reader.Class":88,"../Control.Monad.Rec.Class":90,"../Control.Monad.State.Class":93,"../Control.Monad.Trans.Class":95,"../Control.Monad.Writer.Class":96,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Function":166,"../Data.Functor":173,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Semigroup":216,"../Data.Tuple":229,"../Prelude":266}],79:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Either = require("../Data.Either");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
var runExcept = function ($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
};
var mapExcept = function (f) {
    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
    });
};
module.exports = {
    mapExcept: mapExcept, 
    runExcept: runExcept, 
    withExcept: withExcept
};

},{"../Control.Monad.Error.Class":77,"../Control.Monad.Except.Trans":78,"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Identity":178,"../Data.Newtype":202,"../Prelude":266}],80:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Canceler = function (x) {
    return x;
};
var semigroupCanceler = function (dictApply) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return function (e) {
                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(v(e)))(v1(e));
            };
        };
    });
};
var newtypeCanceler = new Data_Newtype.Newtype(function (n) {
    return n;
}, Canceler);
var monoidCanceler = function (dictApplicative) {
    return new Data_Monoid.Monoid(function () {
        return semigroupCanceler(dictApplicative["__superclass_Control.Apply.Apply_0"]());
    }, Data_Function["const"](Control_Applicative.pure(dictApplicative)(false)));
};
var cancel = function (v) {
    return v;
};
module.exports = {
    Canceler: Canceler, 
    cancel: cancel, 
    newtypeCanceler: newtypeCanceler, 
    semigroupCanceler: semigroupCanceler, 
    monoidCanceler: monoidCanceler
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Data.Function":166,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Semigroup":216,"../Prelude":266}],81:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var MonadFork = function (__superclass_Control$dotMonad$dotMonad_0, fork) {
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
    this.fork = fork;
};
var monadForkAff = new MonadFork(function () {
    return Control_Monad_Aff.monadAff;
}, function ($3) {
    return Data_Functor.map(Control_Monad_Aff.functorAff)(Control_Monad_Aff.cancel)(Control_Monad_Aff.forkAff($3));
});
var fork = function (dict) {
    return dict.fork;
};
var monadForkReaderT = function (dictMonadFork) {
    return new MonadFork(function () {
        return Control_Monad_Reader_Trans.monadReaderT(dictMonadFork["__superclass_Control.Monad.Monad_0"]());
    }, function (v) {
        return function (r) {
            return Data_Functor.map((((dictMonadFork["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Functor.map(Data_Functor.functorFn)(Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadFork["__superclass_Control.Monad.Monad_0"]())))(fork(dictMonadFork)(v(r)));
        };
    });
};
module.exports = {
    MonadFork: MonadFork, 
    fork: fork, 
    monadForkAff: monadForkAff, 
    monadForkReaderT: monadForkReaderT
};

},{"../Control.Monad.Aff":61,"../Control.Monad.Eff.Exception":68,"../Control.Monad.Reader.Trans":89,"../Control.Monad.Trans.Class":95,"../Control.Semigroupoid":104,"../Data.Functor":173,"../Prelude":266}],82:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class");
var Control_Monad_Fork_Canceler = require("../Control.Monad.Fork.Canceler");
module.exports = {};

},{"../Control.Monad.Fork.Canceler":80,"../Control.Monad.Fork.Class":81}],83:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Exists = require("../Data.Exists");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Apply = require("../Control.Apply");
var Control_Monad = require("../Control.Monad");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Bound = (function () {
    function Bound(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bound.create = function (value0) {
        return function (value1) {
            return new Bound(value0, value1);
        };
    };
    return Bound;
})();
var FreeT = (function () {
    function FreeT(value0) {
        this.value0 = value0;
    };
    FreeT.create = function (value0) {
        return new FreeT(value0);
    };
    return FreeT;
})();
var Bind = (function () {
    function Bind(value0) {
        this.value0 = value0;
    };
    Bind.create = function (value0) {
        return new Bind(value0);
    };
    return Bind;
})();
var monadTransFreeT = function (dictFunctor) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (ma) {
            return new FreeT(function (v) {
                return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)(ma);
            });
        };
    });
};
var freeT = FreeT.create;
var bound = function (m) {
    return function (f) {
        return new Bind(Data_Exists.mkExists(new Bound(m, f)));
    };
};
var functorFreeT = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                if (v instanceof FreeT) {
                    return new FreeT(function (v1) {
                        return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                    });
                };
                if (v instanceof Bind) {
                    return Data_Exists.runExists(function (v1) {
                        return bound(v1.value0)(function ($94) {
                            return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($94));
                        });
                    })(v.value0);
                };
                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 53, column 3 - line 53, column 69: " + [ f.constructor.name, v.constructor.name ]);
            };
        });
    };
};
var bimapFreeT = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (nf) {
            return function (nm) {
                return function (v) {
                    if (v instanceof Bind) {
                        return Data_Exists.runExists(function (v1) {
                            return bound(function ($95) {
                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value0($95));
                            })(function ($96) {
                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value1($96));
                            });
                        })(v.value0);
                    };
                    if (v instanceof FreeT) {
                        return new FreeT(function (v1) {
                            return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)(function ($97) {
                                return nf(Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm))($97));
                            }))(nm(v.value0(Data_Unit.unit)));
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 93, column 1 - line 93, column 114: " + [ nf.constructor.name, nm.constructor.name, v.constructor.name ]);
                };
            };
        };
    };
};
var hoistFreeT = function (dictFunctor) {
    return function (dictFunctor1) {
        return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.id(Control_Category.categoryFn));
    };
};
var interpret = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (nf) {
            return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(Control_Category.id(Control_Category.categoryFn));
        };
    };
};
var monadFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Monad.Monad(function () {
            return applicativeFreeT(dictFunctor)(dictMonad);
        }, function () {
            return bindFreeT(dictFunctor)(dictMonad);
        });
    };
};
var bindFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Bind.Bind(function () {
            return applyFreeT(dictFunctor)(dictMonad);
        }, function (v) {
            return function (f) {
                if (v instanceof Bind) {
                    return Data_Exists.runExists(function (v1) {
                        return bound(v1.value0)(function (x) {
                            return bound(function (v2) {
                                return v1.value1(x);
                            })(f);
                        });
                    })(v.value0);
                };
                return bound(function (v1) {
                    return v;
                })(f);
            };
        });
    };
};
var applyFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Apply.Apply(function () {
            return functorFreeT(dictFunctor)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
        }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
    };
};
var applicativeFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Applicative.Applicative(function () {
            return applyFreeT(dictFunctor)(dictMonad);
        }, function (a) {
            return new FreeT(function (v) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(a));
            });
        });
    };
};
var liftFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return function (fa) {
            return new FreeT(function (v) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
            });
        };
    };
};
var resume = function (dictFunctor) {
    return function (dictMonadRec) {
        var go = function (v) {
            if (v instanceof FreeT) {
                return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
            };
            if (v instanceof Bind) {
                return Data_Exists.runExists(function (v1) {
                    var $76 = v1.value0(Data_Unit.unit);
                    if ($76 instanceof FreeT) {
                        return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())($76.value0(Data_Unit.unit))(function (v2) {
                            if (v2 instanceof Data_Either.Left) {
                                return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Loop(v1.value1(v2.value0)));
                            };
                            if (v2 instanceof Data_Either.Right) {
                                return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                    return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(h)(v1.value1);
                                })(v2.value0))));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 47, column 9 - line 49, column 67: " + [ v2.constructor.name ]);
                        });
                    };
                    if ($76 instanceof Bind) {
                        return Data_Exists.runExists(function (v2) {
                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value0(Data_Unit.unit))(function (z) {
                                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value1(z))(v1.value1);
                            })));
                        })($76.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 45, column 5 - line 50, column 98: " + [ $76.constructor.name ]);
                })(v.value0);
            };
            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 43, column 3 - line 43, column 35: " + [ v.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
};
var runFreeT = function (dictFunctor) {
    return function (dictMonadRec) {
        return function (interp) {
            var go = function (v) {
                if (v instanceof Data_Either.Left) {
                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Done(v.value0));
                };
                if (v instanceof Data_Either.Right) {
                    return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                };
                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 101, column 3 - line 101, column 30: " + [ v.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(go)(resume(dictFunctor)(dictMonadRec)));
        };
    };
};
var monadRecFreeT = function (dictFunctor) {
    return function (dictMonad) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadFreeT(dictFunctor)(dictMonad);
        }, function (f) {
            var go = function (s) {
                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                    if (v instanceof Control_Monad_Rec_Class.Loop) {
                        return go(v.value0);
                    };
                    if (v instanceof Control_Monad_Rec_Class.Done) {
                        return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 75, column 7 - line 77, column 25: " + [ v.constructor.name ]);
                });
            };
            return go;
        });
    };
};
module.exports = {
    bimapFreeT: bimapFreeT, 
    freeT: freeT, 
    hoistFreeT: hoistFreeT, 
    interpret: interpret, 
    liftFreeT: liftFreeT, 
    resume: resume, 
    runFreeT: runFreeT, 
    functorFreeT: functorFreeT, 
    applyFreeT: applyFreeT, 
    applicativeFreeT: applicativeFreeT, 
    bindFreeT: bindFreeT, 
    monadFreeT: monadFreeT, 
    monadTransFreeT: monadTransFreeT, 
    monadRecFreeT: monadRecFreeT
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad":98,"../Control.Monad.Rec.Class":90,"../Control.Monad.Trans.Class":95,"../Control.Semigroupoid":104,"../Data.Bifunctor":130,"../Data.Either":144,"../Data.Exists":150,"../Data.Functor":173,"../Data.Unit":233,"../Prelude":266}],84:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Data_CatList = require("../Data.CatList");
var Data_Either = require("../Data.Either");
var Data_Inject = require("../Data.Inject");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Functor = require("../Data.Functor");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Monad = require("../Control.Monad");
var Data_Semigroup = require("../Data.Semigroup");
var ExpF = function (x) {
    return x;
};
var Free = (function () {
    function Free(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Free.create = function (value0) {
        return function (value1) {
            return new Free(value0, value1);
        };
    };
    return Free;
})();
var Return = (function () {
    function Return(value0) {
        this.value0 = value0;
    };
    Return.create = function (value0) {
        return new Return(value0);
    };
    return Return;
})();
var Bind = (function () {
    function Bind(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bind.create = function (value0) {
        return function (value1) {
            return new Bind(value0, value1);
        };
    };
    return Bind;
})();
var toView = function (__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        var runExpF = function (v2) {
            return v2;
        };
        var concatF = function (v2) {
            return function (r) {
                return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
            };
        };
        if (v.value0 instanceof Return) {
            var $21 = Data_CatList.uncons(v.value1);
            if ($21 instanceof Data_Maybe.Nothing) {
                return new Return(Unsafe_Coerce.unsafeCoerce(v.value0.value0));
            };
            if ($21 instanceof Data_Maybe.Just) {
                var __tco_v = Unsafe_Coerce.unsafeCoerce(concatF(runExpF($21.value0.value0)(v.value0.value0))($21.value0.value1));
                v = __tco_v;
                continue tco;
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 173, column 7 - line 177, column 64: " + [ $21.constructor.name ]);
        };
        if (v.value0 instanceof Bind) {
            return new Bind(v.value0.value0, function (a) {
                return Unsafe_Coerce.unsafeCoerce(concatF(v.value0.value1(a))(v.value1));
            });
        };
        throw new Error("Failed pattern match at Control.Monad.Free line 171, column 3 - line 179, column 56: " + [ v.value0.constructor.name ]);
    };
};
var runFreeM = function (dictFunctor) {
    return function (dictMonadRec) {
        return function (k) {
            var go = function (f) {
                var $30 = toView(f);
                if ($30 instanceof Return) {
                    return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())($30.value0));
                };
                if ($30 instanceof Bind) {
                    return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Loop.create)(k(Data_Functor.map(dictFunctor)($30.value1)($30.value0)));
                };
                throw new Error("Failed pattern match at Control.Monad.Free line 149, column 10 - line 151, column 37: " + [ $30.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
        };
    };
};
var runFree = function (dictFunctor) {
    return function (k) {
        var go = function (__copy_f) {
            var f = __copy_f;
            tco: while (true) {
                var $34 = toView(f);
                if ($34 instanceof Return) {
                    return $34.value0;
                };
                if ($34 instanceof Bind) {
                    var __tco_f = k(Data_Functor.map(dictFunctor)($34.value1)($34.value0));
                    f = __tco_f;
                    continue tco;
                };
                throw new Error("Failed pattern match at Control.Monad.Free line 134, column 10 - line 136, column 33: " + [ $34.constructor.name ]);
            };
        };
        return go;
    };
};
var resume = function (dictFunctor) {
    return function (f) {
        var $38 = toView(f);
        if ($38 instanceof Return) {
            return new Data_Either.Right($38.value0);
        };
        if ($38 instanceof Bind) {
            return new Data_Either.Left(Data_Functor.map(dictFunctor)($38.value1)($38.value0));
        };
        throw new Error("Failed pattern match at Control.Monad.Free line 159, column 12 - line 161, column 29: " + [ $38.constructor.name ]);
    };
};
var fromView = function (f) {
    return new Free(Unsafe_Coerce.unsafeCoerce(f), Data_CatList.empty);
};
var suspendF = function (dictApplicative) {
    return function (f) {
        return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(Control_Applicative.pure(dictApplicative)(f)), Unsafe_Coerce.unsafeCoerce));
    };
};
var freeMonad = new Control_Monad.Monad(function () {
    return freeApplicative;
}, function () {
    return freeBind;
});
var freeFunctor = new Data_Functor.Functor(function (k) {
    return function (f) {
        return Control_Bind.bindFlipped(freeBind)(function ($57) {
            return Control_Applicative.pure(freeApplicative)(k($57));
        })(f);
    };
});
var freeBind = new Control_Bind.Bind(function () {
    return freeApply;
}, function (v) {
    return function (k) {
        return new Free(v.value0, Data_CatList.snoc(v.value1)(Unsafe_Coerce.unsafeCoerce(k)));
    };
});
var freeApply = new Control_Apply.Apply(function () {
    return freeFunctor;
}, Control_Monad.ap(freeMonad));
var freeApplicative = new Control_Applicative.Applicative(function () {
    return freeApply;
}, function ($58) {
    return fromView(Return.create($58));
});
var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
    return freeMonad;
}, function (k) {
    return function (a) {
        return Control_Bind.bind(freeBind)(k(a))(function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);
            };
            if (v instanceof Control_Monad_Rec_Class.Done) {
                return Control_Applicative.pure(freeApplicative)(v.value0);
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 63, column 18 - line 65, column 21: " + [ v.constructor.name ]);
        });
    };
});
var liftF = function (f) {
    return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(f), function ($59) {
        return Control_Applicative.pure(freeApplicative)(Unsafe_Coerce.unsafeCoerce($59));
    }));
};
var freeMonadTrans = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return liftF;
});
var liftFI = function (dictInject) {
    return function (fa) {
        return liftF(Data_Inject.inj(dictInject)(fa));
    };
};
var substFree = function (k) {
    var go = function (f) {
        var $49 = toView(f);
        if ($49 instanceof Return) {
            return Control_Applicative.pure(freeApplicative)($49.value0);
        };
        if ($49 instanceof Bind) {
            return Control_Bind.bind(freeBind)(k($49.value0))(Data_Functor.map(Data_Functor.functorFn)(go)($49.value1));
        };
        throw new Error("Failed pattern match at Control.Monad.Free line 124, column 10 - line 126, column 33: " + [ $49.constructor.name ]);
    };
    return go;
};
var hoistFree = function (k) {
    return substFree(function ($60) {
        return liftF(k($60));
    });
};
var injF = function (dictInject) {
    return hoistFree(Data_Inject.inj(dictInject));
};
var foldFree = function (dictMonadRec) {
    return function (k) {
        var go = function (f) {
            var $53 = toView(f);
            if ($53 instanceof Return) {
                return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())($53.value0));
            };
            if ($53 instanceof Bind) {
                return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($61) {
                    return Control_Monad_Rec_Class.Loop.create($53.value1($61));
                })(k($53.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 114, column 10 - line 116, column 37: " + [ $53.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
};
module.exports = {
    foldFree: foldFree, 
    hoistFree: hoistFree, 
    injF: injF, 
    liftF: liftF, 
    liftFI: liftFI, 
    resume: resume, 
    runFree: runFree, 
    runFreeM: runFreeM, 
    substFree: substFree, 
    suspendF: suspendF, 
    freeFunctor: freeFunctor, 
    freeBind: freeBind, 
    freeApplicative: freeApplicative, 
    freeApply: freeApply, 
    freeMonad: freeMonad, 
    freeMonadTrans: freeMonadTrans, 
    freeMonadRec: freeMonadRec
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Control.Monad.Rec.Class":90,"../Control.Monad.Trans.Class":95,"../Control.Semigroupoid":104,"../Data.CatList":136,"../Data.Either":144,"../Data.Functor":173,"../Data.Inject":179,"../Data.Maybe":192,"../Data.Semigroup":216,"../Data.Tuple":229,"../Prelude":266,"../Unsafe.Coerce":269}],85:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Lazy = require("../Data.Lazy");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Functor = require("../Data.Functor");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Monad = require("../Control.Monad");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Ring = require("../Data.Ring");
var Control_Category = require("../Control.Category");
var Yield = (function () {
    function Yield(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Yield.create = function (value0) {
        return function (value1) {
            return new Yield(value0, value1);
        };
    };
    return Yield;
})();
var Skip = (function () {
    function Skip(value0) {
        this.value0 = value0;
    };
    Skip.create = function (value0) {
        return new Skip(value0);
    };
    return Skip;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var ListT = function (x) {
    return x;
};
var wrapLazy = function (dictApplicative) {
    return function (v) {
        return ListT(Control_Applicative.pure(dictApplicative)(new Skip(v)));
    };
};
var wrapEffect = function (dictFunctor) {
    return function (v) {
        return ListT(Data_Functor.map(dictFunctor)(function ($166) {
            return Skip.create(Data_Lazy.defer(Data_Function["const"]($166)));
        })(v));
    };
};
var unfold = function (dictMonad) {
    return function (f) {
        return function (z) {
            var g = function (v) {
                if (v instanceof Data_Maybe.Just) {
                    return new Yield(v.value0.value1, Data_Lazy.defer(function (v1) {
                        return unfold(dictMonad)(f)(v.value0.value0);
                    }));
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 120, column 3 - line 120, column 60: " + [ v.constructor.name ]);
            };
            return ListT(Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g)(f(z)));
        };
    };
};
var uncons = function (dictMonad) {
    return function (v) {
        var g = function (v1) {
            if (v1 instanceof Yield) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Just.create(new Data_Tuple.Tuple(v1.value0, Data_Lazy.force(v1.value1))));
            };
            if (v1 instanceof Skip) {
                return uncons(dictMonad)(Data_Lazy.force(v1.value0));
            };
            if (v1 instanceof Done) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Nothing.value);
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 185, column 3 - line 185, column 50: " + [ v1.constructor.name ]);
        };
        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(g);
    };
};
var tail = function (dictMonad) {
    return function (l) {
        return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(dictMonad)(l));
    };
};
var stepMap = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return ListT(Data_Functor.map(dictFunctor)(f)(v));
        };
    };
};
var takeWhile = function (dictApplicative) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                var $90 = f(v.value0);
                if ($90) {
                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value1));
                };
                if (!$90) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 144, column 19 - line 144, column 68: " + [ $90.constructor.name ]);
            };
            if (v instanceof Skip) {
                return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 144, column 3 - line 144, column 68: " + [ v.constructor.name ]);
        };
        return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g);
    };
};
var scanl = function (dictMonad) {
    return function (f) {
        return function (b) {
            return function (l) {
                var g = function (v) {
                    var h = function (v1) {
                        if (v1 instanceof Yield) {
                            var b$prime$prime = f(v.value0)(v1.value0);
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime$prime, Data_Lazy.force(v1.value1)), v.value0));
                        };
                        if (v1 instanceof Skip) {
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, Data_Lazy.force(v1.value0)), v.value0));
                        };
                        if (v1 instanceof Done) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at Control.Monad.List.Trans line 219, column 5 - line 219, column 78: " + [ v1.constructor.name ]);
                    };
                    return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(h)(v.value1);
                };
                return unfold(dictMonad)(g)(new Data_Tuple.Tuple(b, l));
            };
        };
    };
};
var runListT = function (v) {
    return v;
};
var prepend$prime = function (dictApplicative) {
    return function (h) {
        return function (t) {
            return ListT(Control_Applicative.pure(dictApplicative)(new Yield(h, t)));
        };
    };
};
var prepend = function (dictApplicative) {
    return function (h) {
        return function (t) {
            return prepend$prime(dictApplicative)(h)(Data_Lazy.defer(Data_Function["const"](t)));
        };
    };
};
var nil = function (dictApplicative) {
    return ListT(Control_Applicative.pure(dictApplicative)(Done.value));
};
var singleton = function (dictApplicative) {
    return function (a) {
        return prepend(dictApplicative)(a)(nil(dictApplicative));
    };
};
var take = function (dictApplicative) {
    return function (v) {
        return function (fa) {
            if (v === 0) {
                return nil(dictApplicative);
            };
            var f = function (v1) {
                if (v1 instanceof Yield) {
                    return new Yield(v1.value0, Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v - 1))(v1.value1));
                };
                if (v1 instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v))(v1.value0));
                };
                if (v1 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 137, column 3 - line 137, column 47: " + [ v1.constructor.name ]);
            };
            return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(fa);
        };
    };
};
var zipWith$prime = function (dictMonad) {
    return function (f) {
        var g = function (v) {
            return function (v1) {
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
                };
                if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                    return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Function.flip(prepend$prime(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(Data_Lazy.defer(function (v2) {
                        return zipWith$prime(dictMonad)(f)(v.value0.value1)(v1.value0.value1);
                    })))(f(v.value0.value0)(v1.value0.value0));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 226, column 3 - line 229, column 12: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        var loop = function (fa) {
            return function (fb) {
                return wrapEffect(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(fa))(function (v) {
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(fb))(function (v1) {
                        return g(v)(v1);
                    });
                }));
            };
        };
        return loop;
    };
};
var zipWith = function (dictMonad) {
    return function (f) {
        var g = function (a) {
            return function (b) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f(a)(b));
            };
        };
        return zipWith$prime(dictMonad)(g);
    };
};
var newtypeListT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ListT);
var mapMaybe = function (dictFunctor) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                return Data_Maybe.fromMaybe(Skip.create)(Data_Functor.map(Data_Maybe.functorMaybe)(Yield.create)(f(v.value0)))(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value1));
            };
            if (v instanceof Skip) {
                return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 173, column 3 - line 173, column 72: " + [ v.constructor.name ]);
        };
        return stepMap(dictFunctor)(g);
    };
};
var iterate = function (dictMonad) {
    return function (f) {
        return function (a) {
            var g = function (x) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(x), x)));
            };
            return unfold(dictMonad)(g)(a);
        };
    };
};
var repeat = function (dictMonad) {
    return iterate(dictMonad)(Control_Category.id(Control_Category.categoryFn));
};
var head = function (dictMonad) {
    return function (l) {
        return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(dictMonad)(l));
    };
};
var functorListT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                return new Yield(f(v.value0), Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value1));
            };
            if (v instanceof Skip) {
                return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 251, column 5 - line 251, column 48: " + [ v.constructor.name ]);
        };
        return stepMap(dictFunctor)(g);
    });
};
var fromEffect = function (dictApplicative) {
    return function (fa) {
        return ListT(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Function.flip(Yield.create)(Data_Lazy.defer(function (v) {
            return nil(dictApplicative);
        })))(fa));
    };
};
var monadTransListT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return fromEffect(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
});
var foldl$prime = function (dictMonad) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(b);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(b)(v.value0.value0))(Data_Function.flip(loop)(v.value0.value1));
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 202, column 5 - line 202, column 35: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(l))(g);
            };
        };
        return loop;
    };
};
var foldl = function (dictMonad) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(b);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return loop(f(b)(v.value0.value0))(v.value0.value1);
                    };
                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 210, column 5 - line 210, column 35: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(l))(g);
            };
        };
        return loop;
    };
};
var filter = function (dictFunctor) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value1);
                var $138 = f(v.value0);
                if ($138) {
                    return new Yield(v.value0, s$prime);
                };
                if (!$138) {
                    return new Skip(s$prime);
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 166, column 19 - line 166, column 54: " + [ $138.constructor.name ]);
            };
            if (v instanceof Skip) {
                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value0);
                return new Skip(s$prime);
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 166, column 3 - line 166, column 80: " + [ v.constructor.name ]);
        };
        return stepMap(dictFunctor)(g);
    };
};
var dropWhile = function (dictApplicative) {
    return function (f) {
        var g = function (v) {
            if (v instanceof Yield) {
                var $143 = f(v.value0);
                if ($143) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value1));
                };
                if (!$143) {
                    return new Yield(v.value0, v.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 159, column 19 - line 159, column 70: " + [ $143.constructor.name ]);
            };
            if (v instanceof Skip) {
                return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value0));
            };
            if (v instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match at Control.Monad.List.Trans line 159, column 3 - line 159, column 70: " + [ v.constructor.name ]);
        };
        return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g);
    };
};
var drop = function (dictApplicative) {
    return function (v) {
        return function (fa) {
            if (v === 0) {
                return fa;
            };
            var f = function (v1) {
                if (v1 instanceof Yield) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v - 1))(v1.value1));
                };
                if (v1 instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v))(v1.value0));
                };
                if (v1 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 152, column 3 - line 152, column 44: " + [ v1.constructor.name ]);
            };
            return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(fa);
        };
    };
};
var cons = function (dictApplicative) {
    return function (lh) {
        return function (t) {
            return ListT(Control_Applicative.pure(dictApplicative)(new Yield(Data_Lazy.force(lh), t)));
        };
    };
};
var unfoldableListT = function (dictMonad) {
    return new Data_Unfoldable.Unfoldable(function (f) {
        return function (b) {
            var go = function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
                };
                if (v instanceof Data_Maybe.Just) {
                    return cons(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0.value0))(Data_Lazy.defer(function (v1) {
                        return go(f(v.value0.value1));
                    }));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 256, column 3 - line 258, column 73: " + [ v.constructor.name ]);
            };
            return go(f(b));
        };
    });
};
var semigroupListT = function (dictApplicative) {
    return new Data_Semigroup.Semigroup(concat(dictApplicative));
};
var concat = function (dictApplicative) {
    return function (x) {
        return function (y) {
            var f = function (v) {
                if (v instanceof Yield) {
                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
                    })(v.value1));
                };
                if (v instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
                    })(v.value0));
                };
                if (v instanceof Done) {
                    return new Skip(Data_Lazy.defer(Data_Function["const"](y)));
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 96, column 3 - line 96, column 43: " + [ v.constructor.name ]);
            };
            return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(x);
        };
    };
};
var monoidListT = function (dictApplicative) {
    return new Data_Monoid.Monoid(function () {
        return semigroupListT(dictApplicative);
    }, nil(dictApplicative));
};
var catMaybes = function (dictFunctor) {
    return mapMaybe(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
};
var monadListT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeListT(dictMonad);
    }, function () {
        return bindListT(dictMonad);
    });
};
var bindListT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyListT(dictMonad);
    }, function (fa) {
        return function (f) {
            var g = function (v) {
                if (v instanceof Yield) {
                    var h = function (s$prime) {
                        return Data_Semigroup.append(semigroupListT(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(f(v.value0))(Control_Bind.bind(bindListT(dictMonad))(s$prime)(f));
                    };
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(h)(v.value1));
                };
                if (v instanceof Skip) {
                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
                        return Control_Bind.bind(bindListT(dictMonad))(v1)(f);
                    })(v.value0));
                };
                if (v instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match at Control.Monad.List.Trans line 268, column 5 - line 270, column 31: " + [ v.constructor.name ]);
            };
            return stepMap(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g)(fa);
        };
    });
};
var applyListT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorListT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
    }, Control_Monad.ap(monadListT(dictMonad)));
};
var applicativeListT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyListT(dictMonad);
    }, singleton(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
};
var monadEffListT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadListT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
    }, function ($167) {
        return Control_Monad_Trans_Class.lift(monadTransListT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($167));
    });
};
var altListT = function (dictApplicative) {
    return new Control_Alt.Alt(function () {
        return functorListT((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
    }, concat(dictApplicative));
};
var plusListT = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altListT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
    }, nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
};
var alternativeListT = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeListT(dictMonad);
    }, function () {
        return plusListT(dictMonad);
    });
};
var monadZeroListT = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeListT(dictMonad);
    }, function () {
        return monadListT(dictMonad);
    });
};
var monadPlusListT = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroListT(dictMonad);
    });
};
module.exports = {
    catMaybes: catMaybes, 
    cons: cons, 
    drop: drop, 
    dropWhile: dropWhile, 
    filter: filter, 
    foldl: foldl, 
    "foldl'": foldl$prime, 
    fromEffect: fromEffect, 
    head: head, 
    iterate: iterate, 
    mapMaybe: mapMaybe, 
    nil: nil, 
    prepend: prepend, 
    "prepend'": prepend$prime, 
    repeat: repeat, 
    scanl: scanl, 
    singleton: singleton, 
    tail: tail, 
    take: take, 
    takeWhile: takeWhile, 
    uncons: uncons, 
    unfold: unfold, 
    wrapEffect: wrapEffect, 
    wrapLazy: wrapLazy, 
    zipWith: zipWith, 
    "zipWith'": zipWith$prime, 
    semigroupListT: semigroupListT, 
    monoidListT: monoidListT, 
    functorListT: functorListT, 
    unfoldableListT: unfoldableListT, 
    applyListT: applyListT, 
    applicativeListT: applicativeListT, 
    bindListT: bindListT, 
    monadListT: monadListT, 
    monadTransListT: monadTransListT, 
    altListT: altListT, 
    plusListT: plusListT, 
    alternativeListT: alternativeListT, 
    monadZeroListT: monadZeroListT, 
    monadPlusListT: monadPlusListT, 
    monadEffListT: monadEffListT
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad":98,"../Control.Monad.Eff.Class":64,"../Control.Monad.Trans.Class":95,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Functor":173,"../Data.Lazy":185,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Tuple":229,"../Data.Unfoldable":231,"../Prelude":266}],86:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Monad = require("../Control.Monad");
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Control_Category = require("../Control.Category");
var MaybeT = function (x) {
    return x;
};
var runMaybeT = function (v) {
    return v;
};
var newtypeMaybeT = new Data_Newtype.Newtype(function (n) {
    return n;
}, MaybeT);
var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($66) {
        return MaybeT(Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create)($66));
    };
});
var mapMaybeT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorMaybeT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
        };
    });
};
var monadMaybeT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return bindMaybeT(dictMonad);
    });
};
var bindMaybeT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyMaybeT(dictMonad);
    }, function (v) {
        return function (f) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Nothing.value);
                };
                if (v1 instanceof Data_Maybe.Just) {
                    var $42 = f(v1.value0);
                    return $42;
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 55, column 5 - line 57, column 42: " + [ v1.constructor.name ]);
            });
        };
    });
};
var applyMaybeT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorMaybeT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
    }, Control_Monad.ap(monadMaybeT(dictMonad)));
};
var applicativeMaybeT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyMaybeT(dictMonad);
    }, function ($67) {
        return MaybeT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Just.create($67)));
    });
};
var monadAskMaybeT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadMaybeT(dictMonadAsk["__superclass_Control.Monad.Monad_0"]());
    }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderMaybeT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskMaybeT(dictMonadReader["__superclass_Control.Monad.Reader.Class.MonadAsk_0"]());
    }, function (f) {
        return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContMaybeT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadMaybeT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
    }, function (f) {
        return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var $44 = f(function (a) {
                return MaybeT(c(new Data_Maybe.Just(a)));
            });
            return $44;
        }));
    });
};
var monadEffMaybe = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadMaybeT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
    }, function ($68) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($68));
    });
};
var monadErrorMaybeT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadMaybeT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
    }, function (v) {
        return function (h) {
            return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
                var $47 = h(a);
                return $47;
            }));
        };
    }, function (e) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
    });
};
var monadRecMaybeT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadMaybeT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
    }, function (f) {
        return function ($69) {
            return MaybeT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())((function () {
                    var $48 = f(a);
                    return $48;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
                        if (m$prime instanceof Data_Maybe.Nothing) {
                            return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 85, column 11 - line 88, column 43: " + [ m$prime.constructor.name ]);
                    })());
                });
            })($69));
        };
    });
};
var monadStateMaybeT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadMaybeT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellMaybeT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadMaybeT(dictMonadTell["__superclass_Control.Monad.Monad_0"]());
    }, function ($70) {
        return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.tell(dictMonadTell)($70));
    });
};
var monadWriterMaybeT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellMaybeT(dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]());
    }, mapMaybeT(function (m) {
        return Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapMaybeT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.id(Control_Category.categoryFn));
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 120, column 5 - line 122, column 42: " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var altMaybeT = function (dictMonad) {
    return new Control_Alt.Alt(function () {
        return functorMaybeT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return function (v1) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v2) {
                if (v2 instanceof Data_Maybe.Nothing) {
                    return v1;
                };
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v2);
            });
        };
    });
};
var plusMaybeT = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altMaybeT(dictMonad);
    }, Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Nothing.value));
};
var alternativeMaybeT = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeMaybeT(dictMonad);
    }, function () {
        return plusMaybeT(dictMonad);
    });
};
var monadZeroMaybeT = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeMaybeT(dictMonad);
    }, function () {
        return monadMaybeT(dictMonad);
    });
};
var monadPlusMaybeT = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroMaybeT(dictMonad);
    });
};
module.exports = {
    MaybeT: MaybeT, 
    mapMaybeT: mapMaybeT, 
    runMaybeT: runMaybeT, 
    newtypeMaybeT: newtypeMaybeT, 
    functorMaybeT: functorMaybeT, 
    applyMaybeT: applyMaybeT, 
    applicativeMaybeT: applicativeMaybeT, 
    bindMaybeT: bindMaybeT, 
    monadMaybeT: monadMaybeT, 
    monadTransMaybeT: monadTransMaybeT, 
    altMaybeT: altMaybeT, 
    plusMaybeT: plusMaybeT, 
    alternativeMaybeT: alternativeMaybeT, 
    monadPlusMaybeT: monadPlusMaybeT, 
    monadZeroMaybeT: monadZeroMaybeT, 
    monadRecMaybeT: monadRecMaybeT, 
    monadEffMaybe: monadEffMaybe, 
    monadContMaybeT: monadContMaybeT, 
    monadErrorMaybeT: monadErrorMaybeT, 
    monadAskMaybeT: monadAskMaybeT, 
    monadReaderMaybeT: monadReaderMaybeT, 
    monadStateMaybeT: monadStateMaybeT, 
    monadTellMaybeT: monadTellMaybeT, 
    monadWriterMaybeT: monadWriterMaybeT
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad":98,"../Control.Monad.Cont.Class":62,"../Control.Monad.Eff.Class":64,"../Control.Monad.Error.Class":77,"../Control.Monad.Reader.Class":88,"../Control.Monad.Rec.Class":90,"../Control.Monad.State.Class":93,"../Control.Monad.Trans.Class":95,"../Control.Monad.Writer.Class":96,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Functor":173,"../Data.Maybe":192,"../Data.Newtype":202,"../Data.Tuple":229,"../Prelude":266}],87:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Applicative = require("../Control.Applicative");
var Data_Function = require("../Data.Function");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Unit = require("../Data.Unit");
var RWSResult = (function () {
    function RWSResult(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    RWSResult.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new RWSResult(value0, value1, value2);
            };
        };
    };
    return RWSResult;
})();
var RWST = function (x) {
    return x;
};
var withRWST = function (f) {
    return function (m) {
        return function (r) {
            return function (s) {
                return Data_Tuple.uncurry(m)(f(r)(s));
            };
        };
    };
};
var runRWST = function (v) {
    return v;
};
var newtypeRWST = new Data_Newtype.Newtype(function (n) {
    return n;
}, RWST);
var monadTransRWST = function (dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (m) {
            return function (v) {
                return function (s) {
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (a) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                    });
                };
            };
        };
    });
};
var mapRWST = function (f) {
    return function (v) {
        return function (r) {
            return function (s) {
                return f(v(r)(s));
            };
        };
    };
};
var functorRWST = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (r) {
                return function (s) {
                    return Data_Functor.map(dictFunctor)(function (v1) {
                        return new RWSResult(v1.value0, f(v1.value1), v1.value2);
                    })(v(r)(s));
                };
            };
        };
    });
};
var execRWST = function (dictMonad) {
    return function (v) {
        return function (r) {
            return function (s) {
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(r)(s))(function (v1) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, v1.value2));
                });
            };
        };
    };
};
var evalRWST = function (dictMonad) {
    return function (v) {
        return function (r) {
            return function (s) {
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(r)(s))(function (v1) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value1, v1.value2));
                });
            };
        };
    };
};
var applyRWST = function (dictBind) {
    return function (dictMonoid) {
        return new Control_Apply.Apply(function () {
            return functorRWST((dictBind["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
        }, function (v) {
            return function (v1) {
                return function (r) {
                    return function (s) {
                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v2) {
                            return Data_Functor.mapFlipped((dictBind["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(v1(r)(v2.value0))(function (v3) {
                                return new RWSResult(v3.value0, v2.value1(v3.value1), Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v2.value2)(v3.value2));
                            });
                        });
                    };
                };
            };
        });
    };
};
var bindRWST = function (dictBind) {
    return function (dictMonoid) {
        return new Control_Bind.Bind(function () {
            return applyRWST(dictBind)(dictMonoid);
        }, function (v) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v1) {
                            var $93 = f(v1.value1);
                            return Data_Functor.mapFlipped((dictBind["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())($93(r)(v1.value0))(function (v2) {
                                return new RWSResult(v2.value0, v2.value1, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v1.value2)(v2.value2));
                            });
                        });
                    };
                };
            };
        });
    };
};
var applicativeRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Applicative.Applicative(function () {
            return applyRWST(dictMonad["__superclass_Control.Bind.Bind_1"]())(dictMonoid);
        }, function (a) {
            return function (v) {
                return function (s) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                };
            };
        });
    };
};
var monadRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad.Monad(function () {
            return applicativeRWST(dictMonad)(dictMonoid);
        }, function () {
            return bindRWST(dictMonad["__superclass_Control.Bind.Bind_1"]())(dictMonoid);
        });
    };
};
var monadAskRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadRWST(dictMonad)(dictMonoid);
        }, function (r) {
            return function (s) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new RWSResult(s, r, Data_Monoid.mempty(dictMonoid)));
            };
        });
    };
};
var monadReaderRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Reader_Class.MonadReader(function () {
            return monadAskRWST(dictMonad)(dictMonoid);
        }, function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return m(f(r))(s);
                    };
                };
            };
        });
    };
};
var monadEffRWS = function (dictMonoid) {
    return function (dictMonadEff) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadRWST(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(dictMonoid);
        }, function ($135) {
            return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($135));
        });
    };
};
var monadErrorRWST = function (dictMonadError) {
    return function (dictMonoid) {
        return new Control_Monad_Error_Class.MonadError(function () {
            return monadRWST(dictMonadError["__superclass_Control.Monad.Monad_0"]())(dictMonoid);
        }, function (m) {
            return function (h) {
                return RWST(function (r) {
                    return function (s) {
                        return Control_Monad_Error_Class.catchError(dictMonadError)(m(r)(s))(function (e) {
                            var $104 = h(e);
                            return $104(r)(s);
                        });
                    };
                });
            };
        }, function (e) {
            return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
        });
    };
};
var monadRecRWST = function (dictMonadRec) {
    return function (dictMonoid) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadRWST(dictMonadRec["__superclass_Control.Monad.Monad_0"]())(dictMonoid);
        }, function (k) {
            return function (a) {
                var k$prime = function (r) {
                    return function (v) {
                        var $107 = k(v.value1);
                        return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())($107(r)(v.value0))(function (v1) {
                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
                                if (v1.value1 instanceof Control_Monad_Rec_Class.Loop) {
                                    return new Control_Monad_Rec_Class.Loop(new RWSResult(v1.value0, v1.value1.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value2)(v1.value2)));
                                };
                                if (v1.value1 instanceof Control_Monad_Rec_Class.Done) {
                                    return new Control_Monad_Rec_Class.Done(new RWSResult(v1.value0, v1.value1.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value2)(v1.value2)));
                                };
                                throw new Error("Failed pattern match at Control.Monad.RWS.Trans line 115, column 11 - line 117, column 67: " + [ v1.value1.constructor.name ]);
                            })());
                        });
                    };
                };
                return function (r) {
                    return function (s) {
                        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
                    };
                };
            };
        });
    };
};
var monadStateRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadRWST(dictMonad)(dictMonoid);
        }, function (f) {
            return function (v) {
                return function (s) {
                    var $119 = f(s);
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new RWSResult($119.value1, $119.value0, Data_Monoid.mempty(dictMonoid)));
                };
            };
        });
    };
};
var monadTellRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadRWST(dictMonad)(dictMonoid);
        }, function (w) {
            return function (v) {
                return function (s) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new RWSResult(s, Data_Unit.unit, w));
                };
            };
        });
    };
};
var monadWriterRWST = function (dictMonad) {
    return function (dictMonoid) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadTellRWST(dictMonad)(dictMonoid);
        }, function (m) {
            return function (r) {
                return function (s) {
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m(r)(s))(function (v) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new RWSResult(v.value0, new Data_Tuple.Tuple(v.value1, v.value2), v.value2));
                    });
                };
            };
        }, function (m) {
            return function (r) {
                return function (s) {
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m(r)(s))(function (v) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new RWSResult(v.value0, v.value1.value0, v.value1.value1(v.value2)));
                    });
                };
            };
        });
    };
};
module.exports = {
    RWSResult: RWSResult, 
    RWST: RWST, 
    evalRWST: evalRWST, 
    execRWST: execRWST, 
    mapRWST: mapRWST, 
    runRWST: runRWST, 
    withRWST: withRWST, 
    newtypeRWST: newtypeRWST, 
    functorRWST: functorRWST, 
    applyRWST: applyRWST, 
    bindRWST: bindRWST, 
    applicativeRWST: applicativeRWST, 
    monadRWST: monadRWST, 
    monadTransRWST: monadTransRWST, 
    monadEffRWS: monadEffRWS, 
    monadAskRWST: monadAskRWST, 
    monadReaderRWST: monadReaderRWST, 
    monadStateRWST: monadStateRWST, 
    monadTellRWST: monadTellRWST, 
    monadWriterRWST: monadWriterRWST, 
    monadErrorRWST: monadErrorRWST, 
    monadRecRWST: monadRecRWST
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Control.Monad.Eff.Class":64,"../Control.Monad.Error.Class":77,"../Control.Monad.Reader.Class":88,"../Control.Monad.Rec.Class":90,"../Control.Monad.State.Class":93,"../Control.Monad.Trans.Class":95,"../Control.Monad.Writer.Class":96,"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Functor":173,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Semigroup":216,"../Data.Tuple":229,"../Data.Unit":233,"../Prelude":266}],88:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Monad = require("../Control.Monad");
var Data_Functor = require("../Data.Functor");
var MonadAsk = function (__superclass_Control$dotMonad$dotMonad_0, ask) {
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
    this.ask = ask;
};
var MonadReader = function (__superclass_Control$dotMonad$dotReader$dotClass$dotMonadAsk_0, local) {
    this["__superclass_Control.Monad.Reader.Class.MonadAsk_0"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadAsk_0;
    this.local = local;
};
var monadAskFun = new MonadAsk(function () {
    return Control_Monad.monadFn;
}, Control_Category.id(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function () {
    return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
var local = function (dict) {
    return dict.local;
};
var ask = function (dict) {
    return dict.ask;
};
var asks = function (dictMonadAsk) {
    return function (f) {
        return Data_Functor.map((((dictMonadAsk["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(ask(dictMonadAsk));
    };
};
module.exports = {
    MonadAsk: MonadAsk, 
    MonadReader: MonadReader, 
    ask: ask, 
    asks: asks, 
    local: local, 
    monadAskFun: monadAskFun, 
    monadReaderFun: monadReaderFun
};

},{"../Control.Category":48,"../Control.Monad":98,"../Control.Semigroupoid":104,"../Data.Functor":173,"../Prelude":266}],89:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Distributive = require("../Data.Distributive");
var Data_Newtype = require("../Data.Newtype");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Data_Function = require("../Data.Function");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var ReaderT = function (x) {
    return x;
};
var withReaderT = function (f) {
    return function (v) {
        return function ($53) {
            return v(f($53));
        };
    };
};
var runReaderT = function (v) {
    return v;
};
var newtypeReaderT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ReaderT);
var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function ($54) {
        return ReaderT(Data_Function["const"]($54));
    };
});
var mapReaderT = function (f) {
    return function (v) {
        return function ($55) {
            return f(v($55));
        };
    };
};
var functorReaderT = function (dictFunctor) {
    return new Data_Functor.Functor(function ($56) {
        return mapReaderT(Data_Functor.map(dictFunctor)($56));
    });
};
var distributiveReaderT = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorReaderT(dictDistributive["__superclass_Data.Functor.Functor_0"]());
    }, function (dictFunctor) {
        return function (f) {
            return function ($57) {
                return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($57));
            };
        };
    }, function (dictFunctor) {
        return function (a) {
            return function (e) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
                    return r(e);
                })(a);
            };
        };
    });
};
var applyReaderT = function (dictApply) {
    return new Control_Apply.Apply(function () {
        return functorReaderT(dictApply["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Apply.apply(dictApply)(v(r))(v1(r));
            };
        };
    });
};
var bindReaderT = function (dictBind) {
    return new Control_Bind.Bind(function () {
        return applyReaderT(dictBind["__superclass_Control.Apply.Apply_0"]());
    }, function (v) {
        return function (k) {
            return function (r) {
                return Control_Bind.bind(dictBind)(v(r))(function (a) {
                    var $45 = k(a);
                    return $45(r);
                });
            };
        };
    });
};
var applicativeReaderT = function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
        return applyReaderT(dictApplicative["__superclass_Control.Apply.Apply_0"]());
    }, function ($58) {
        return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($58)));
    });
};
var monadReaderT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeReaderT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
    }, function () {
        return bindReaderT(dictMonad["__superclass_Control.Bind.Bind_1"]());
    });
};
var monadAskReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadReaderT(dictMonad);
    }, Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
};
var monadReaderReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskReaderT(dictMonad);
    }, withReaderT);
};
var monadContReaderT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadReaderT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
    }, function (f) {
        return function (r) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var $46 = f(function ($59) {
                    return ReaderT(Data_Function["const"](c($59)));
                });
                return $46(r);
            });
        };
    });
};
var monadEffReader = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadReaderT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
    }, function ($60) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($60));
    });
};
var monadErrorReaderT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadReaderT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
    }, function (v) {
        return function (h) {
            return function (r) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
                    var $49 = h(e);
                    return $49(r);
                });
            };
        };
    }, function ($61) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)($61));
    });
};
var monadRecReaderT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadReaderT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
    }, function (k) {
        return function (a) {
            var k$prime = function (r) {
                return function (a$prime) {
                    var $50 = k(a$prime);
                    return Control_Bind.bindFlipped((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]()))($50(r));
                };
            };
            return function (r) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
            };
        };
    });
};
var monadStateReaderT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadReaderT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
    }, function ($62) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)($62));
    });
};
var monadTellReaderT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadReaderT(dictMonadTell["__superclass_Control.Monad.Monad_0"]());
    }, function ($63) {
        return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.tell(dictMonadTell)($63));
    });
};
var monadWriterReaderT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellReaderT(dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]());
    }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
};
var altReaderT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorReaderT(dictAlt["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return function (v1) {
            return function (r) {
                return Control_Alt.alt(dictAlt)(v(r))(v1(r));
            };
        };
    });
};
var plusReaderT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altReaderT(dictPlus["__superclass_Control.Alt.Alt_0"]());
    }, Data_Function["const"](Control_Plus.empty(dictPlus)));
};
var alternativeReaderT = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return applicativeReaderT(dictAlternative["__superclass_Control.Applicative.Applicative_0"]());
    }, function () {
        return plusReaderT(dictAlternative["__superclass_Control.Plus.Plus_1"]());
    });
};
var monadZeroReaderT = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeReaderT(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
    }, function () {
        return monadReaderT(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
    });
};
var monadPlusReaderT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroReaderT(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
    });
};
module.exports = {
    ReaderT: ReaderT, 
    mapReaderT: mapReaderT, 
    runReaderT: runReaderT, 
    withReaderT: withReaderT, 
    newtypeReaderT: newtypeReaderT, 
    functorReaderT: functorReaderT, 
    applyReaderT: applyReaderT, 
    applicativeReaderT: applicativeReaderT, 
    altReaderT: altReaderT, 
    plusReaderT: plusReaderT, 
    alternativeReaderT: alternativeReaderT, 
    bindReaderT: bindReaderT, 
    monadReaderT: monadReaderT, 
    monadZeroReaderT: monadZeroReaderT, 
    monadPlusReaderT: monadPlusReaderT, 
    monadTransReaderT: monadTransReaderT, 
    monadEffReader: monadEffReader, 
    monadContReaderT: monadContReaderT, 
    monadErrorReaderT: monadErrorReaderT, 
    monadAskReaderT: monadAskReaderT, 
    monadReaderReaderT: monadReaderReaderT, 
    monadStateReaderT: monadStateReaderT, 
    monadTellReaderT: monadTellReaderT, 
    monadWriterReaderT: monadWriterReaderT, 
    distributiveReaderT: distributiveReaderT, 
    monadRecReaderT: monadRecReaderT
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Control.Monad.Cont.Class":62,"../Control.Monad.Eff.Class":64,"../Control.Monad.Error.Class":77,"../Control.Monad.Reader.Class":88,"../Control.Monad.Rec.Class":90,"../Control.Monad.State.Class":93,"../Control.Monad.Trans.Class":95,"../Control.Monad.Writer.Class":96,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Distributive":142,"../Data.Function":166,"../Data.Functor":173,"../Data.Newtype":202,"../Prelude":266}],90:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_ST = require("../Control.Monad.ST");
var Data_Either = require("../Data.Either");
var Data_Identity = require("../Data.Identity");
var Data_Bifunctor = require("../Data.Bifunctor");
var Partial_Unsafe = require("../Partial.Unsafe");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Bind = require("../Control.Bind");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var Loop = (function () {
    function Loop(value0) {
        this.value0 = value0;
    };
    Loop.create = function (value0) {
        return new Loop(value0);
    };
    return Loop;
})();
var Done = (function () {
    function Done(value0) {
        this.value0 = value0;
    };
    Done.create = function (value0) {
        return new Done(value0);
    };
    return Done;
})();
var MonadRec = function (__superclass_Control$dotMonad$dotMonad_0, tailRecM) {
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(dictMonadRec)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a, 
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(dictMonadRec)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a, 
                        b: b, 
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var fromDone = Partial_Unsafe.unsafePartial(function (dictPartial) {
            return function (v) {
                var __unused = function (dictPartial1) {
                    return function ($dollar15) {
                        return $dollar15;
                    };
                };
                return __unused(dictPartial)((function () {
                    if (v instanceof Done) {
                        return v.value0;
                    };
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 14 - line 130, column 42: " + [ v.constructor.name ]);
                })());
            };
        });
        var f$prime = function ($47) {
            return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($47));
        };
        return function __do() {
            var v = f$prime(a)();
            var v1 = {
                value: v
            };
            (function () {
                while (!(function __do() {
                    var v2 = v1.value;
                    if (v2 instanceof Loop) {
                        var v3 = f$prime(v2.value0)();
                        v1.value = v3;
                        return false;
                    };
                    if (v2 instanceof Done) {
                        return true;
                    };
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 119, column 5 - line 124, column 26: " + [ v2.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v1))();
        };
    };
};
var tailRec = function (f) {
    var go = function (__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            if (v instanceof Loop) {
                var __tco_v = f(v.value0);
                v = __tco_v;
                continue tco;
            };
            if (v instanceof Done) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 93, column 1 - line 96, column 18: " + [ v.constructor.name ]);
        };
    };
    return function ($48) {
        return go(f($48));
    };
};
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    var runIdentity = function (v) {
        return v;
    };
    return function ($49) {
        return Data_Identity.Identity(tailRec(function ($50) {
            return runIdentity(f($50));
        })($49));
    };
});
var monadRecEither = new MonadRec(function () {
    return Data_Either.monadEither;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Either.Left) {
                return new Done(new Data_Either.Left(v.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                return new Done(new Data_Either.Right(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 108, column 7 - line 108, column 33: " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var functorStep = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Loop) {
            return new Loop(v.value0);
        };
        if (v instanceof Done) {
            return new Done(f(v.value0));
        };
        throw new Error("Failed pattern match at Control.Monad.Rec.Class line 28, column 3 - line 28, column 26: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var forever = function (dictMonadRec) {
    return function (ma) {
        return tailRecM(dictMonadRec)(function (u) {
            return Data_Functor.voidRight((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(new Loop(u))(ma);
        })(Data_Unit.unit);
    };
};
var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Loop) {
                return new Loop(v(v2.value0));
            };
            if (v2 instanceof Done) {
                return new Done(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 3 - line 32, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
module.exports = {
    Loop: Loop, 
    Done: Done, 
    MonadRec: MonadRec, 
    forever: forever, 
    tailRec: tailRec, 
    tailRecM: tailRecM, 
    tailRecM2: tailRecM2, 
    tailRecM3: tailRecM3, 
    functorStep: functorStep, 
    bifunctorStep: bifunctorStep, 
    monadRecIdentity: monadRecIdentity, 
    monadRecEff: monadRecEff, 
    monadRecEither: monadRecEither
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Control.Monad.Eff":76,"../Control.Monad.Eff.Unsafe":74,"../Control.Monad.ST":92,"../Control.Semigroupoid":104,"../Data.Bifunctor":130,"../Data.Either":144,"../Data.Functor":173,"../Data.Identity":178,"../Data.Unit":233,"../Partial.Unsafe":263,"../Prelude":266}],91:[function(require,module,exports){
"use strict";

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      /* jshint boss: true */
      return ref.value = f(ref.value);
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      /* jshint boss: true */
      return ref.value = a;
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],92:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST, 
    modifySTRef: $foreign.modifySTRef, 
    newSTRef: $foreign.newSTRef, 
    readSTRef: $foreign.readSTRef, 
    runST: $foreign.runST, 
    writeSTRef: $foreign.writeSTRef
};

},{"../Control.Monad.Eff":76,"./foreign":91}],93:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var MonadState = function (__superclass_Control$dotMonad$dotMonad_0, state) {
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
    this.state = state;
};
var state = function (dict) {
    return dict.state;
};
var put = function (dictMonadState) {
    return function (s) {
        return state(dictMonadState)(function (v) {
            return new Data_Tuple.Tuple(Data_Unit.unit, s);
        });
    };
};
var modify = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
        });
    };
};
var gets = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(f(s), s);
        });
    };
};
var get = function (dictMonadState) {
    return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(s, s);
    });
};
module.exports = {
    MonadState: MonadState, 
    get: get, 
    gets: gets, 
    modify: modify, 
    put: put, 
    state: state
};

},{"../Data.Tuple":229,"../Data.Unit":233,"../Prelude":266}],94:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Monad = require("../Control.Monad");
var Control_Applicative = require("../Control.Applicative");
var Data_Function = require("../Data.Function");
var Control_Bind = require("../Control.Bind");
var Data_Unit = require("../Data.Unit");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var StateT = function (x) {
    return x;
};
var withStateT = function (f) {
    return function (v) {
        return function ($97) {
            return v(f($97));
        };
    };
};
var runStateT = function (v) {
    return v;
};
var newtypeStateT = new Data_Newtype.Newtype(function (n) {
    return n;
}, StateT);
var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return function (s) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v, s));
            });
        };
    };
});
var mapStateT = function (f) {
    return function (v) {
        return function ($98) {
            return f(v($98));
        };
    };
};
var lazyStateT = new Control_Lazy.Lazy(function (f) {
    return function (s) {
        var $52 = f(Data_Unit.unit);
        return $52(s);
    };
});
var functorStateT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return function (s) {
                return Data_Functor.map(dictFunctor)(function (v1) {
                    return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                })(v(s));
            };
        };
    });
};
var execStateT = function (dictFunctor) {
    return function (v) {
        return function (s) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
        };
    };
};
var evalStateT = function (dictFunctor) {
    return function (v) {
        return function (s) {
            return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
        };
    };
};
var monadStateT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeStateT(dictMonad);
    }, function () {
        return bindStateT(dictMonad);
    });
};
var bindStateT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyStateT(dictMonad);
    }, function (v) {
        return function (f) {
            return function (s) {
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(s))(function (v1) {
                    var $65 = f(v1.value0);
                    return $65(v1.value1);
                });
            };
        };
    });
};
var applyStateT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorStateT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
    }, Control_Monad.ap(monadStateT(dictMonad)));
};
var applicativeStateT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyStateT(dictMonad);
    }, function (a) {
        return function (s) {
            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
        };
    });
};
var monadAskStateT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadStateT(dictMonadAsk["__superclass_Control.Monad.Monad_0"]());
    }, Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderStateT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskStateT(dictMonadReader["__superclass_Control.Monad.Reader.Class.MonadAsk_0"]());
    }, function ($99) {
        return mapStateT(Control_Monad_Reader_Class.local(dictMonadReader)($99));
    });
};
var monadContStateT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadStateT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
    }, function (f) {
        return function (s) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var $68 = f(function (a) {
                    return function (s$prime) {
                        return c(new Data_Tuple.Tuple(a, s$prime));
                    };
                });
                return $68(s);
            });
        };
    });
};
var monadEffState = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadStateT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
    }, function ($100) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($100));
    });
};
var monadErrorStateT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadStateT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
    }, function (v) {
        return function (h) {
            return function (s) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
                    var $71 = h(e);
                    return $71(s);
                });
            };
        };
    }, function (e) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
    });
};
var monadRecStateT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadStateT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
    }, function (f) {
        return function (a) {
            var f$prime = function (v) {
                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())((function () {
                    var $73 = f(v.value0);
                    return $73;
                })()(v.value1))(function (v1) {
                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
                        if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                        };
                        if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
                        };
                        throw new Error("Failed pattern match at Control.Monad.State.Trans line 88, column 11 - line 90, column 40: " + [ v1.value0.constructor.name ]);
                    })());
                });
            };
            return function (s) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
            };
        };
    });
};
var monadStateStateT = function (dictMonad) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadStateT(dictMonad);
    }, function (f) {
        return StateT(function ($101) {
            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f($101));
        });
    });
};
var monadTellStateT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadStateT(dictMonadTell["__superclass_Control.Monad.Monad_0"]());
    }, function ($102) {
        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadTell["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.tell(dictMonadTell)($102));
    });
};
var monadWriterStateT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellStateT(dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]());
    }, function (m) {
        return function (s) {
            return Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
            });
        };
    }, function (m) {
        return function (s) {
            return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m(s))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
            }));
        };
    });
};
var altStateT = function (dictMonad) {
    return function (dictAlt) {
        return new Control_Alt.Alt(function () {
            return functorStateT(dictAlt["__superclass_Data.Functor.Functor_0"]());
        }, function (v) {
            return function (v1) {
                return function (s) {
                    return Control_Alt.alt(dictAlt)(v(s))(v1(s));
                };
            };
        });
    };
};
var plusStateT = function (dictMonad) {
    return function (dictPlus) {
        return new Control_Plus.Plus(function () {
            return altStateT(dictMonad)(dictPlus["__superclass_Control.Alt.Alt_0"]());
        }, function (v) {
            return Control_Plus.empty(dictPlus);
        });
    };
};
var alternativeStateT = function (dictMonad) {
    return function (dictAlternative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeStateT(dictMonad);
        }, function () {
            return plusStateT(dictMonad)(dictAlternative["__superclass_Control.Plus.Plus_1"]());
        });
    };
};
var monadZeroStateT = function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeStateT(dictMonadZero["__superclass_Control.Monad.Monad_0"]())(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
    }, function () {
        return monadStateT(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
    });
};
var monadPlusStateT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZeroStateT(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
    });
};
module.exports = {
    StateT: StateT, 
    evalStateT: evalStateT, 
    execStateT: execStateT, 
    mapStateT: mapStateT, 
    runStateT: runStateT, 
    withStateT: withStateT, 
    newtypeStateT: newtypeStateT, 
    functorStateT: functorStateT, 
    applyStateT: applyStateT, 
    applicativeStateT: applicativeStateT, 
    altStateT: altStateT, 
    plusStateT: plusStateT, 
    alternativeStateT: alternativeStateT, 
    bindStateT: bindStateT, 
    monadStateT: monadStateT, 
    monadRecStateT: monadRecStateT, 
    monadZeroStateT: monadZeroStateT, 
    monadPlusStateT: monadPlusStateT, 
    monadTransStateT: monadTransStateT, 
    lazyStateT: lazyStateT, 
    monadEffState: monadEffState, 
    monadContStateT: monadContStateT, 
    monadErrorStateT: monadErrorStateT, 
    monadAskStateT: monadAskStateT, 
    monadReaderStateT: monadReaderStateT, 
    monadStateStateT: monadStateStateT, 
    monadTellStateT: monadTellStateT, 
    monadWriterStateT: monadWriterStateT
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Lazy":54,"../Control.Monad":98,"../Control.Monad.Cont.Class":62,"../Control.Monad.Eff.Class":64,"../Control.Monad.Error.Class":77,"../Control.Monad.Reader.Class":88,"../Control.Monad.Rec.Class":90,"../Control.Monad.State.Class":93,"../Control.Monad.Trans.Class":95,"../Control.Monad.Writer.Class":96,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Functor":173,"../Data.Newtype":202,"../Data.Tuple":229,"../Data.Unit":233,"../Prelude":266}],95:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    MonadTrans: MonadTrans, 
    lift: lift
};

},{"../Prelude":266}],96:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var MonadTell = function (__superclass_Control$dotMonad$dotMonad_0, tell) {
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
    this.tell = tell;
};
var MonadWriter = function (__superclass_Control$dotMonad$dotWriter$dotClass$dotMonadTell_0, listen, pass) {
    this["__superclass_Control.Monad.Writer.Class.MonadTell_0"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadTell_0;
    this.listen = listen;
    this.pass = pass;
};
var tell = function (dict) {
    return dict.tell;
};
var pass = function (dict) {
    return dict.pass;
};
var listen = function (dict) {
    return dict.listen;
};
var listens = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(listen(dictMonadWriter)(m))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
            });
        };
    };
};
var censor = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
                return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v, f));
            }));
        };
    };
};
module.exports = {
    MonadTell: MonadTell, 
    MonadWriter: MonadWriter, 
    censor: censor, 
    listen: listen, 
    listens: listens, 
    pass: pass, 
    tell: tell
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Data.Function":166,"../Data.Tuple":229,"../Prelude":266}],97:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Apply = require("../Control.Apply");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Unit = require("../Data.Unit");
var WriterT = function (x) {
    return x;
};
var runWriterT = function (v) {
    return v;
};
var newtypeWriterT = new Data_Newtype.Newtype(function (n) {
    return n;
}, WriterT);
var monadTransWriterT = function (dictMonoid) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
        return function (m) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
            });
        };
    });
};
var mapWriterT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorWriterT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
            return new Data_Tuple.Tuple(f(v.value0), v.value1);
        }));
    });
};
var execWriterT = function (dictFunctor) {
    return function (v) {
        return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
    };
};
var applyWriterT = function (dictSemigroup) {
    return function (dictApply) {
        return new Control_Apply.Apply(function () {
            return functorWriterT(dictApply["__superclass_Data.Functor.Functor_0"]());
        }, function (v) {
            return function (v1) {
                var k = function (v3) {
                    return function (v4) {
                        return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                    };
                };
                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(k)(v))(v1);
            };
        });
    };
};
var bindWriterT = function (dictSemigroup) {
    return function (dictBind) {
        return new Control_Bind.Bind(function () {
            return applyWriterT(dictSemigroup)(dictBind["__superclass_Control.Apply.Apply_0"]());
        }, function (v) {
            return function (k) {
                return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
                    var $81 = k(v1.value0);
                    return Data_Functor.map((dictBind["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function (v2) {
                        return new Data_Tuple.Tuple(v2.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v2.value1));
                    })($81);
                }));
            };
        });
    };
};
var applicativeWriterT = function (dictMonoid) {
    return function (dictApplicative) {
        return new Control_Applicative.Applicative(function () {
            return applyWriterT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictApplicative["__superclass_Control.Apply.Apply_0"]());
        }, function (a) {
            return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
        });
    };
};
var monadWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad.Monad(function () {
            return applicativeWriterT(dictMonoid)(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
        }, function () {
            return bindWriterT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonad["__superclass_Control.Bind.Bind_1"]());
        });
    };
};
var monadAskWriterT = function (dictMonoid) {
    return function (dictMonadAsk) {
        return new Control_Monad_Reader_Class.MonadAsk(function () {
            return monadWriterT(dictMonoid)(dictMonadAsk["__superclass_Control.Monad.Monad_0"]());
        }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
    };
};
var monadReaderWriterT = function (dictMonoid) {
    return function (dictMonadReader) {
        return new Control_Monad_Reader_Class.MonadReader(function () {
            return monadAskWriterT(dictMonoid)(dictMonadReader["__superclass_Control.Monad.Reader.Class.MonadAsk_0"]());
        }, function (f) {
            return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
        });
    };
};
var monadContWriterT = function (dictMonoid) {
    return function (dictMonadCont) {
        return new Control_Monad_Cont_Class.MonadCont(function () {
            return monadWriterT(dictMonoid)(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
        }, function (f) {
            return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                var $87 = f(function (a) {
                    return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
                });
                return $87;
            }));
        });
    };
};
var monadEffWriter = function (dictMonoid) {
    return function (dictMonadEff) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadWriterT(dictMonoid)(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
        }, function ($113) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($113));
        });
    };
};
var monadErrorWriterT = function (dictMonoid) {
    return function (dictMonadError) {
        return new Control_Monad_Error_Class.MonadError(function () {
            return monadWriterT(dictMonoid)(dictMonadError["__superclass_Control.Monad.Monad_0"]());
        }, function (v) {
            return function (h) {
                return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
                    var $90 = h(e);
                    return $90;
                }));
            };
        }, function (e) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
        });
    };
};
var monadRecWriterT = function (dictMonoid) {
    return function (dictMonadRec) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadWriterT(dictMonoid)(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
        }, function (f) {
            return function (a) {
                var f$prime = function (v) {
                    return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())((function () {
                        var $92 = f(v.value0);
                        return $92;
                    })())(function (v1) {
                        return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
                                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value1)(v1.value1)));
                            };
                            if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
                                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value1)(v1.value1)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans line 85, column 11 - line 87, column 47: " + [ v1.value0.constructor.name ]);
                        })());
                    });
                };
                return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
            };
        });
    };
};
var monadStateWriterT = function (dictMonoid) {
    return function (dictMonadState) {
        return new Control_Monad_State_Class.MonadState(function () {
            return monadWriterT(dictMonoid)(dictMonadState["__superclass_Control.Monad.Monad_0"]());
        }, function (f) {
            return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
        });
    };
};
var monadTellWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadTell(function () {
            return monadWriterT(dictMonoid)(dictMonad);
        }, function ($114) {
            return WriterT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Tuple.Tuple.create(Data_Unit.unit)($114)));
        });
    };
};
var monadWriterWriterT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadTellWriterT(dictMonoid)(dictMonad);
        }, function (v) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
            });
        }, function (v) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
            });
        });
    };
};
var altWriterT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorWriterT(dictAlt["__superclass_Data.Functor.Functor_0"]());
    }, function (v) {
        return function (v1) {
            return Control_Alt.alt(dictAlt)(v)(v1);
        };
    });
};
var plusWriterT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altWriterT(dictPlus["__superclass_Control.Alt.Alt_0"]());
    }, Control_Plus.empty(dictPlus));
};
var alternativeWriterT = function (dictMonoid) {
    return function (dictAlternative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeWriterT(dictMonoid)(dictAlternative["__superclass_Control.Applicative.Applicative_0"]());
        }, function () {
            return plusWriterT(dictAlternative["__superclass_Control.Plus.Plus_1"]());
        });
    };
};
var monadZeroWriterT = function (dictMonoid) {
    return function (dictMonadZero) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeWriterT(dictMonoid)(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadWriterT(dictMonoid)(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
        });
    };
};
var monadPlusWriterT = function (dictMonoid) {
    return function (dictMonadPlus) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroWriterT(dictMonoid)(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
        });
    };
};
module.exports = {
    WriterT: WriterT, 
    execWriterT: execWriterT, 
    mapWriterT: mapWriterT, 
    runWriterT: runWriterT, 
    newtypeWriterT: newtypeWriterT, 
    functorWriterT: functorWriterT, 
    applyWriterT: applyWriterT, 
    applicativeWriterT: applicativeWriterT, 
    altWriterT: altWriterT, 
    plusWriterT: plusWriterT, 
    alternativeWriterT: alternativeWriterT, 
    bindWriterT: bindWriterT, 
    monadWriterT: monadWriterT, 
    monadRecWriterT: monadRecWriterT, 
    monadZeroWriterT: monadZeroWriterT, 
    monadPlusWriterT: monadPlusWriterT, 
    monadTransWriterT: monadTransWriterT, 
    monadEffWriter: monadEffWriter, 
    monadContWriterT: monadContWriterT, 
    monadErrorWriterT: monadErrorWriterT, 
    monadAskWriterT: monadAskWriterT, 
    monadReaderWriterT: monadReaderWriterT, 
    monadStateWriterT: monadStateWriterT, 
    monadTellWriterT: monadTellWriterT, 
    monadWriterWriterT: monadWriterWriterT
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Control.Monad.Cont.Class":62,"../Control.Monad.Eff.Class":64,"../Control.Monad.Error.Class":77,"../Control.Monad.Reader.Class":88,"../Control.Monad.Rec.Class":90,"../Control.Monad.State.Class":93,"../Control.Monad.Trans.Class":95,"../Control.Monad.Writer.Class":96,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Functor":173,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Semigroup":216,"../Data.Tuple":229,"../Data.Unit":233,"../Prelude":266}],98:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
    this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
    this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
};
var whenM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(mb)(function (v) {
                return Control_Applicative.when(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v)(m);
            });
        };
    };
};
var unlessM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(mb)(function (v) {
                return Control_Applicative.unless(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v)(m);
            });
        };
    };
};
var monadFn = new Monad(function () {
    return Control_Applicative.applicativeFn;
}, function () {
    return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Bind.bindArray;
});
var liftM1 = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f(v));
            });
        };
    };
};
var ap = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                });
            });
        };
    };
};
module.exports = {
    Monad: Monad, 
    ap: ap, 
    liftM1: liftM1, 
    unlessM: unlessM, 
    whenM: whenM, 
    monadFn: monadFn, 
    monadArray: monadArray
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Data.Functor":173,"../Data.Unit":233}],99:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var MonadPlus = function (__superclass_Control$dotMonadZero$dotMonadZero_0) {
    this["__superclass_Control.MonadZero.MonadZero_0"] = __superclass_Control$dotMonadZero$dotMonadZero_0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_MonadZero.monadZeroArray;
});
module.exports = {
    MonadPlus: MonadPlus, 
    monadPlusArray: monadPlusArray
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Control.MonadZero":100,"../Control.Plus":103,"../Data.Functor":173}],100:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var MonadZero = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Control$dotMonad$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
};
var monadZeroArray = new MonadZero(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Control_Monad.monadArray;
});
var guard = function (dictMonadZero) {
    return function (v) {
        if (v) {
            return Control_Applicative.pure((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
        };
        if (!v) {
            return Control_Plus.empty((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match at Control.MonadZero line 52, column 1 - line 52, column 23: " + [ v.constructor.name ]);
    };
};
module.exports = {
    MonadZero: MonadZero, 
    guard: guard, 
    monadZeroArray: monadZeroArray
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Control.Plus":103,"../Data.Functor":173,"../Data.Unit":233}],101:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans");
var Control_Plus = require("../Control.Plus");
var Data_Either = require("../Data.Either");
var Data_Functor_Compose = require("../Data.Functor.Compose");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Apply = require("../Control.Apply");
var Data_Function = require("../Data.Function");
var Control_Bind = require("../Control.Bind");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var ParCont = function (x) {
    return x;
};
var Parallel = function (__superclass_Control$dotApplicative$dotApplicative_1, __superclass_Control$dotMonad$dotMonad_0, parallel, sequential) {
    this["__superclass_Control.Applicative.Applicative_1"] = __superclass_Control$dotApplicative$dotApplicative_1;
    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
    this.parallel = parallel;
    this.sequential = sequential;
};
var unsafeWithRef = Control_Monad_Eff_Unsafe.unsafeCoerceEff;
var sequential = function (dict) {
    return dict.sequential;
};
var parallel = function (dict) {
    return dict.parallel;
};
var newtypeParCont = new Data_Newtype.Newtype(function (n) {
    return n;
}, ParCont);
var monadParWriterT = function (dictMonoid) {
    return function (dictParallel) {
        return new Parallel(function () {
            return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel["__superclass_Control.Applicative.Applicative_1"]());
        }, function () {
            return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel["__superclass_Control.Monad.Monad_0"]());
        }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
    };
};
var monadParReaderT = function (dictParallel) {
    return new Parallel(function () {
        return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel["__superclass_Control.Applicative.Applicative_1"]());
    }, function () {
        return Control_Monad_Reader_Trans.monadReaderT(dictParallel["__superclass_Control.Monad.Monad_0"]());
    }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
};
var monadParMaybeT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel["__superclass_Control.Applicative.Applicative_1"]())(Data_Maybe.applicativeMaybe);
    }, function () {
        return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel["__superclass_Control.Monad.Monad_0"]());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParExceptT = function (dictParallel) {
    return new Parallel(function () {
        return Data_Functor_Compose.applicativeCompose(dictParallel["__superclass_Control.Applicative.Applicative_1"]())(Data_Either.applicativeEither);
    }, function () {
        return Control_Monad_Except_Trans.monadExceptT(dictParallel["__superclass_Control.Monad.Monad_0"]());
    }, function (v) {
        return parallel(dictParallel)(v);
    }, function (v) {
        return sequential(dictParallel)(v);
    });
};
var monadParParCont = function (dictMonadEff) {
    return new Parallel(function () {
        return applicativeParCont(dictMonadEff);
    }, function () {
        return Control_Monad_Cont_Trans.monadContT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
    }, ParCont, function (v) {
        return v;
    });
};
var functorParCont = function (dictMonadEff) {
    return new Data_Functor.Functor(function (f) {
        return function ($55) {
            return parallel(monadParParCont(dictMonadEff))(Data_Functor.map(Control_Monad_Cont_Trans.functorContT((((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(f)(sequential(monadParParCont(dictMonadEff))($55)));
        };
    });
};
var applyParCont = function (dictMonadEff) {
    return new Control_Apply.Apply(function () {
        return functorParCont(dictMonadEff);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v2) {
                    return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v3) {
                        return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                            return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v3))))(function (v4) {
                                if (v4 instanceof Data_Maybe.Nothing) {
                                    return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(new Data_Maybe.Just(a))));
                                };
                                if (v4 instanceof Data_Maybe.Just) {
                                    return k(a(v4.value0));
                                };
                                throw new Error("Failed pattern match at Control.Parallel.Class line 81, column 7 - line 83, column 26: " + [ v4.constructor.name ]);
                            });
                        }))(function () {
                            return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                                return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v4) {
                                    if (v4 instanceof Data_Maybe.Nothing) {
                                        return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v3)(new Data_Maybe.Just(b))));
                                    };
                                    if (v4 instanceof Data_Maybe.Just) {
                                        return k(v4.value0(b));
                                    };
                                    throw new Error("Failed pattern match at Control.Parallel.Class line 87, column 7 - line 89, column 26: " + [ v4.constructor.name ]);
                                });
                            });
                        });
                    });
                });
            });
        };
    });
};
var applicativeParCont = function (dictMonadEff) {
    return new Control_Applicative.Applicative(function () {
        return applyParCont(dictMonadEff);
    }, function ($56) {
        return parallel(monadParParCont(dictMonadEff))(Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]()))($56));
    });
};
var altParCont = function (dictMonadEff) {
    return new Control_Alt.Alt(function () {
        return functorParCont(dictMonadEff);
    }, function (v) {
        return function (v1) {
            return ParCont(function (k) {
                return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(false))))(function (v2) {
                    return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                        return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
                            if (v3) {
                                return Control_Applicative.pure((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
                            };
                            if (!v3) {
                                return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
                                    return k(a);
                                });
                            };
                            throw new Error("Failed pattern match at Control.Parallel.Class line 100, column 7 - line 104, column 14: " + [ v3.constructor.name ]);
                        });
                    }))(function () {
                        return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
                            return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v3) {
                                if (v3) {
                                    return Control_Applicative.pure((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
                                };
                                if (!v3) {
                                    return Control_Bind.bind((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(true))))(function () {
                                        return k(a);
                                    });
                                };
                                throw new Error("Failed pattern match at Control.Parallel.Class line 108, column 7 - line 112, column 14: " + [ v3.constructor.name ]);
                            });
                        });
                    });
                });
            });
        };
    });
};
var plusParCont = function (dictMonadEff) {
    return new Control_Plus.Plus(function () {
        return altParCont(dictMonadEff);
    }, ParCont(function (v) {
        return Control_Applicative.pure((dictMonadEff["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
    }));
};
var alternativeParCont = function (dictMonadEff) {
    return new Control_Alternative.Alternative(function () {
        return applicativeParCont(dictMonadEff);
    }, function () {
        return plusParCont(dictMonadEff);
    });
};
module.exports = {
    ParCont: ParCont, 
    Parallel: Parallel, 
    parallel: parallel, 
    sequential: sequential, 
    monadParExceptT: monadParExceptT, 
    monadParReaderT: monadParReaderT, 
    monadParWriterT: monadParWriterT, 
    monadParMaybeT: monadParMaybeT, 
    newtypeParCont: newtypeParCont, 
    functorParCont: functorParCont, 
    applyParCont: applyParCont, 
    applicativeParCont: applicativeParCont, 
    altParCont: altParCont, 
    plusParCont: plusParCont, 
    alternativeParCont: alternativeParCont, 
    monadParParCont: monadParParCont
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad.Cont.Trans":63,"../Control.Monad.Eff":76,"../Control.Monad.Eff.Class":64,"../Control.Monad.Eff.Ref":70,"../Control.Monad.Eff.Unsafe":74,"../Control.Monad.Except.Trans":78,"../Control.Monad.Maybe.Trans":86,"../Control.Monad.Reader.Trans":89,"../Control.Monad.Writer.Trans":97,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Function":166,"../Data.Functor":173,"../Data.Functor.Compose":167,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Unit":233,"../Prelude":266}],102:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Data_Foldable = require("../Data.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Category = require("../Control.Category");
var parTraverse_ = function (dictParallel) {
    return function (dictFoldable) {
        return function (f) {
            return function ($8) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel["__superclass_Control.Applicative.Applicative_1"]())(dictFoldable)(function ($9) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($9));
                })($8));
            };
        };
    };
};
var parTraverse = function (dictParallel) {
    return function (dictTraversable) {
        return function (f) {
            return function ($10) {
                return Control_Parallel_Class.sequential(dictParallel)(Data_Traversable.traverse(dictTraversable)(dictParallel["__superclass_Control.Applicative.Applicative_1"]())(function ($11) {
                    return Control_Parallel_Class.parallel(dictParallel)(f($11));
                })($10));
            };
        };
    };
};
var parSequence_ = function (dictParallel) {
    return function (dictTraversable) {
        return parTraverse_(dictParallel)(dictTraversable["__superclass_Data.Foldable.Foldable_1"]())(Control_Category.id(Control_Category.categoryFn));
    };
};
var parSequence = function (dictParallel) {
    return function (dictTraversable) {
        return parTraverse(dictParallel)(dictTraversable)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    parSequence: parSequence, 
    parSequence_: parSequence_, 
    parTraverse: parTraverse, 
    parTraverse_: parTraverse_
};

},{"../Control.Category":48,"../Control.Parallel.Class":101,"../Control.Semigroupoid":104,"../Data.Foldable":153,"../Data.Traversable":227,"../Prelude":266}],103:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Alt = require("../Control.Alt");
var Data_Functor = require("../Data.Functor");
var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty, 
    plusArray: plusArray
};

},{"../Control.Alt":38,"../Data.Functor":173}],104:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var compose = function (dict) {
    return dict.compose;
};
var composeFlipped = function (dictSemigroupoid) {
    return function (f) {
        return function (g) {
            return compose(dictSemigroupoid)(g)(f);
        };
    };
};
module.exports = {
    Semigroupoid: Semigroupoid, 
    compose: compose, 
    composeFlipped: composeFlipped, 
    semigroupoidFn: semigroupoidFn
};

},{}],105:[function(require,module,exports){
var xs = require('xstream').default;
var flattenConcurrently = require('xstream/extra/flattenConcurrently').default;
var concat = require('xstream/extra/concat').default;
var delay = require('xstream/extra/delay').default;

exports._addListener = function (effL, s) {
  return function () {
    return s.addListener({
      next: function (a) {
        return effL.next(a)();
      },
      error: function (e) {
        return effL.error(e)();
      },
      complete: function () {
        return effL.complete()();
      }
    });
  };
};

exports._combine = function (p, s1, s2) {
  return xs.combine(
    s1,
    s2
  ).map(function (r) {
    return p(r[0])(r[1]);
  });
};

exports._concat = function (s1, s2) {
  return concat(s1, s2);
};

exports._delay = function (i, s) {
  return function () {
    return s.compose(delay(i));
  };
};

exports._drop = function (s, i) {
  return s.drop(i);
};

exports._fold = function (s, p, x) {
  return s.fold(function (b, a) {
    return p(b)(a);
  }, x);
};

exports._empty = xs.empty();

exports._endWhen = function (s1, s2) {
  return s1.endWhen(s2);
};

exports._filter = function(s, p) {
  return s.filter(p);
};

exports._flatMap = function (s, p) {
  return s.map(p).compose(flattenConcurrently);
};

exports._flatMapEff = function (s, effP) {
  return function () {
    return s.map(function (a) {
      var result = effP(a)();
      return result;
    }).compose(flattenConcurrently);
  };
};

exports._flatMapLatest = function (s, p) {
  return s.map(p).flatten();
};

exports._flatMapLatestEff = function (s, effP) {
  return function () {
    return s.map(function (a) {
      var result = effP(a)();
      return result;
    }).flatten();
  };
};

exports._imitate = function (s1, s2) {
  return function () {
    s1.imitate(s2);
  };
};

exports._last = function (s) {
  return s.last();
};

exports._map = function (p, s) {
  return s.map(p);
};

exports._mapTo = function (s, v) {
  return s.mapTo(v);
};

exports._merge = function (s1, s2) {
  return xs.merge(s1, s2);
};

exports._of = xs.of;

exports._startWith = function (s, x) {
  return s.startWith(x);
};

exports._replaceError = function (s, p) {
  return s.replaceError(p);
}

exports._take = function (s, i) {
  return s.take(i);
};

var adaptListenerToEff = function (l) {
  return {
    next: function (x) {
      return function () {
        l.next(x);
      }
    },
    error: function (e) {
      return function () {
        l.error(e);
      }
    },
    complete: function () {
      return function () {
        l.complete();
      }
    }
  };
};

var adaptEffProducer = function (p) {
  return {
    start: function (x) {
      return p.start(adaptListenerToEff(x))();
    },
    stop: function () {
      return p.stop()();
    }
  };
};

exports.create = function (p) {
  return function () {
    return xs.create(adaptEffProducer(p));
  };
};

exports["create'"] = function () {
  return function () {
    return xs.create();
  };
};

exports.createWithMemory = function (p) {
  return function () {
    return xs.createWithMemory(adaptEffProducer(p));
  };
};

exports.flatten = function (s) {
  return s.flatten();
};

exports.flattenEff = function (s) {
  return function () {
    return s.map(function (effS) {
      return effS();
    }).flatten();
  };
};

exports.fromArray = xs.fromArray;

exports.never = xs.never();

exports.periodic = function (t) {
  return function () {
    return xs.periodic(t);
  };
};

exports.remember = function (s) {
  return s.remember()
};

exports.throw = xs.throw;

exports.unsafeLog = function (a) {
  return function () {
    console.log(a);
  }
}

},{"xstream":37,"xstream/extra/concat":34,"xstream/extra/delay":35,"xstream/extra/flattenConcurrently":36}],106:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Console = require("../Control.Monad.Eff.Console");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Eff_Timer = require("../Control.Monad.Eff.Timer");
var Control_Plus = require("../Control.Plus");
var Data_Either = require("../Data.Either");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Function = require("../Data.Function");
var Data_Unit = require("../Data.Unit");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var take = function (i) {
    return function (s) {
        return $foreign._take(s, i);
    };
};
var switchMapEff = function (s) {
    return function (effP) {
        return $foreign._flatMapLatestEff(s, effP);
    };
};
var switchMap = function (s) {
    return function (p) {
        return $foreign._flatMapLatest(s, p);
    };
};
var startWith = function (x) {
    return function (s) {
        return $foreign._startWith(s, x);
    };
};
var semigroupStream = new Data_Semigroup.Semigroup(Data_Function_Uncurried.runFn2($foreign._concat));
var replaceError = function (p) {
    return function (s) {
        return $foreign._replaceError(s, p);
    };
};
var monoidStream = new Data_Monoid.Monoid(function () {
    return semigroupStream;
}, $foreign._empty);
var mapTo = function (v) {
    return function (s) {
        return $foreign._mapTo(s, v);
    };
};
var last = function (s) {
    return $foreign._last(s);
};
var imitate = function (s1) {
    return function (s2) {
        return Control_Monad_Eff_Exception["try"]($foreign._imitate(s1, s2));
    };
};
var functorStream = new Data_Functor.Functor(Data_Function_Uncurried.runFn2($foreign._map));
var fromCallback = function (cb) {
    return $foreign.create({
        start: function (l) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)(cb(l.next));
        }, 
        stop: Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))
    });
};
var fromAff = function (aff) {
    return function __do() {
        var v = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
        return $foreign.create({
            start: function (l) {
                return function __do() {
                    var v1 = Control_Monad_Aff.runAff(l.error)(function (a) {
                        return function __do() {
                            l.next(a)();
                            return l.complete(Data_Unit.unit)();
                        };
                    })(aff)();
                    return Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff)(Control_Monad_Eff_Ref.writeRef(v)(new Data_Maybe.Just(v1)))();
                };
            }, 
            stop: function (v1) {
                return function __do() {
                    var v2 = Control_Monad_Eff_Ref.readRef(v)();
                    if (v2 instanceof Data_Maybe.Just) {
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(Control_Monad_Aff.cancel(v2.value0)(Control_Monad_Eff_Exception.error("Unsubscribed"))))();
                    };
                    if (v2 instanceof Data_Maybe.Nothing) {
                        return Data_Unit.unit;
                    };
                    throw new Error("Failed pattern match at Control.XStream line 174, column 9 - line 176, column 31: " + [ v2.constructor.name ]);
                };
            }
        })();
    };
};
var fold = function (s) {
    return function (p) {
        return function (x) {
            return $foreign._fold(s, p, x);
        };
    };
};
var filter = function (p) {
    return function (s) {
        return $foreign._filter(s, p);
    };
};
var endWhen = function (s1) {
    return function (s2) {
        return $foreign._endWhen(s1, s2);
    };
};
var drop = function (i) {
    return function (s) {
        return $foreign._drop(s, i);
    };
};
var delay = function (i) {
    return function (s) {
        return $foreign._delay(i, s);
    };
};
var defaultListener = {
    next: $foreign.unsafeLog, 
    error: function ($10) {
        return Control_Monad_Eff_Console.log(Control_Monad_Eff_Exception.message($10));
    }, 
    complete: Control_Applicative.pure(Control_Monad_Eff.applicativeEff)
};
var bindEff = function (s) {
    return function (effP) {
        return $foreign._flatMapEff(s, effP);
    };
};
var applyStream = new Control_Apply.Apply(function () {
    return functorStream;
}, Data_Function_Uncurried.runFn3($foreign._combine)(Control_Category.id(Control_Category.categoryFn)));
var bindStream = new Control_Bind.Bind(function () {
    return applyStream;
}, Data_Function_Uncurried.runFn2($foreign._flatMap));
var applicativeStream = new Control_Applicative.Applicative(function () {
    return applyStream;
}, $foreign._of);
var monadStream = new Control_Monad.Monad(function () {
    return applicativeStream;
}, function () {
    return bindStream;
});
var altStream = new Control_Alt.Alt(function () {
    return functorStream;
}, Data_Function_Uncurried.runFn2($foreign._merge));
var plusStream = new Control_Plus.Plus(function () {
    return altStream;
}, $foreign._empty);
var addListener = function (l) {
    return function (s) {
        return $foreign._addListener(l, s);
    };
};
module.exports = {
    addListener: addListener, 
    bindEff: bindEff, 
    defaultListener: defaultListener, 
    delay: delay, 
    drop: drop, 
    endWhen: endWhen, 
    filter: filter, 
    fold: fold, 
    fromAff: fromAff, 
    fromCallback: fromCallback, 
    imitate: imitate, 
    last: last, 
    mapTo: mapTo, 
    replaceError: replaceError, 
    startWith: startWith, 
    switchMap: switchMap, 
    switchMapEff: switchMapEff, 
    take: take, 
    functorStream: functorStream, 
    applyStream: applyStream, 
    applicativeStream: applicativeStream, 
    bindStream: bindStream, 
    monadStream: monadStream, 
    semigroupStream: semigroupStream, 
    altStream: altStream, 
    monoidStream: monoidStream, 
    plusStream: plusStream, 
    create: $foreign.create, 
    "create'": $foreign["create'"], 
    createWithMemory: $foreign.createWithMemory, 
    flatten: $foreign.flatten, 
    flattenEff: $foreign.flattenEff, 
    fromArray: $foreign.fromArray, 
    never: $foreign.never, 
    periodic: $foreign.periodic, 
    remember: $foreign.remember, 
    "throw": $foreign["throw"]
};

},{"../Control.Alt":38,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad":98,"../Control.Monad.Aff":61,"../Control.Monad.Eff":76,"../Control.Monad.Eff.Class":64,"../Control.Monad.Eff.Console":66,"../Control.Monad.Eff.Exception":68,"../Control.Monad.Eff.Ref":70,"../Control.Monad.Eff.Timer":72,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Function":166,"../Data.Function.Uncurried":165,"../Data.Functor":173,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Semigroup":216,"../Data.Unit":233,"../Prelude":266,"./foreign":105}],107:[function(require,module,exports){
"use strict";

exports.eventListener = function (fn) {
  return function (event) {
    return fn(event)();
  };
};

exports.addEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          target.addEventListener(type, listener, useCapture);
          return {};
        };
      };
    };
  };
};

exports.removeEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          target.removeEventListener(type, listener, useCapture);
          return {};
        };
      };
    };
  };
};

exports.dispatchEvent = function (event) {
  return function (target) {
    return function () {
      return target.dispatchEvent(event);
    };
  };
};

},{}],108:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var DOM = require("../DOM");
var DOM_Event_Types = require("../DOM.Event.Types");
module.exports = {
    addEventListener: $foreign.addEventListener, 
    dispatchEvent: $foreign.dispatchEvent, 
    eventListener: $foreign.eventListener, 
    removeEventListener: $foreign.removeEventListener
};

},{"../Control.Monad.Eff":76,"../Control.Monad.Eff.Exception":68,"../DOM":124,"../DOM.Event.Types":110,"../Prelude":266,"./foreign":107}],109:[function(require,module,exports){
/* global EventTarget */
"use strict";

exports._readEventTarget = function (left) {
  return function (right) {
    return function (foreign) {
      return foreign instanceof EventTarget ? left("Value is not an EventTarget") : right(foreign);
    };
  };
};

},{}],110:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Class = require("../Data.Foreign.Class");
var Data_Newtype = require("../Data.Newtype");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var EventType = function (x) {
    return x;
};
var wheelEventToEvent = Unsafe_Coerce.unsafeCoerce;
var uiEventToEvent = Unsafe_Coerce.unsafeCoerce;
var touchEventToEvent = Unsafe_Coerce.unsafeCoerce;
var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
var readEventTarget = $foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create);
var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
var progressEventToEvent = Unsafe_Coerce.unsafeCoerce;
var ordEventType = Data_Ord.ordString;
var newtypeEventType = new Data_Newtype.Newtype(function (n) {
    return n;
}, EventType);
var mouseEventToEvent = Unsafe_Coerce.unsafeCoerce;
var keyboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
var isForeignWheelEvent = new Data_Foreign_Class.IsForeign(readWheelEvent);
var isForeignUIEvent = new Data_Foreign_Class.IsForeign(readUIEvent);
var isForeignTouchEvent = new Data_Foreign_Class.IsForeign(readTouchEvent);
var isForeignProgressEvent = new Data_Foreign_Class.IsForeign(readProgressEvent);
var isForeignMouseEvent = new Data_Foreign_Class.IsForeign(readMouseEvent);
var isForeignKeyboardEvent = new Data_Foreign_Class.IsForeign(readKeyboardEvent);
var isForeignInputEvent = new Data_Foreign_Class.IsForeign(readInputEvent);
var isForeignFocusEvent = new Data_Foreign_Class.IsForeign(readFocusEvent);
var isForeignEventTarget = new Data_Foreign_Class.IsForeign(readEventTarget);
var isForeignCustomEvent = new Data_Foreign_Class.IsForeign(readCustomEvent);
var isForeignCompositionEvent = new Data_Foreign_Class.IsForeign(readCompositionEvent);
var inputEventToEvent = Unsafe_Coerce.unsafeCoerce;
var focusEventToEvent = Unsafe_Coerce.unsafeCoerce;
var eqEventType = Data_Eq.eqString;
var customEventToEvent = Unsafe_Coerce.unsafeCoerce;
var compositionEventToEvent = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    EventType: EventType, 
    compositionEventToEvent: compositionEventToEvent, 
    customEventToEvent: customEventToEvent, 
    focusEventToEvent: focusEventToEvent, 
    inputEventToEvent: inputEventToEvent, 
    keyboardEventToEvent: keyboardEventToEvent, 
    mouseEventToEvent: mouseEventToEvent, 
    progressEventToEvent: progressEventToEvent, 
    readCompositionEvent: readCompositionEvent, 
    readCustomEvent: readCustomEvent, 
    readEventTarget: readEventTarget, 
    readFocusEvent: readFocusEvent, 
    readInputEvent: readInputEvent, 
    readKeyboardEvent: readKeyboardEvent, 
    readMouseEvent: readMouseEvent, 
    readProgressEvent: readProgressEvent, 
    readTouchEvent: readTouchEvent, 
    readUIEvent: readUIEvent, 
    readWheelEvent: readWheelEvent, 
    touchEventToEvent: touchEventToEvent, 
    uiEventToEvent: uiEventToEvent, 
    wheelEventToEvent: wheelEventToEvent, 
    newtypeEventType: newtypeEventType, 
    eqEventType: eqEventType, 
    ordEventType: ordEventType, 
    isForeignEventTarget: isForeignEventTarget, 
    isForeignCustomEvent: isForeignCustomEvent, 
    isForeignUIEvent: isForeignUIEvent, 
    isForeignFocusEvent: isForeignFocusEvent, 
    isForeignMouseEvent: isForeignMouseEvent, 
    isForeignWheelEvent: isForeignWheelEvent, 
    isForeignTouchEvent: isForeignTouchEvent, 
    isForeignInputEvent: isForeignInputEvent, 
    isForeignKeyboardEvent: isForeignKeyboardEvent, 
    isForeignCompositionEvent: isForeignCompositionEvent, 
    isForeignProgressEvent: isForeignProgressEvent
};

},{"../Data.Either":144,"../Data.Eq":147,"../Data.Foreign":163,"../Data.Foreign.Class":154,"../Data.Newtype":202,"../Data.Ord":209,"../Prelude":266,"../Unsafe.Coerce":269,"./foreign":109}],111:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var DOM_Event_Types = require("../DOM.Event.Types");
var wheel = "wheel";
var visibilitychange = "visibilitychange";
var unload = "unload";
var transitionend = "transitionend";
var touchstart = "touchstart";
var touchmove = "touchmove";
var touchleave = "touchleave";
var touchenter = "touchenter";
var touchend = "touchend";
var touchcancel = "touchcancel";
var timeupdate = "timeupdate";
var timeout = "timeout";
var suspend = "suspend";
var submit = "submit";
var stalled = "stalled";
var show = "show";
var select = "select";
var seeking = "seeking";
var seeked = "seeked";
var scroll = "scroll";
var resize = "resize";
var reset = "reset";
var readystatechange = "readystatechange";
var ratechange = "ratechange";
var progress = "progress";
var popstate = "popstate";
var playing = "playing";
var play = "play";
var pause = "pause";
var pageshow = "pageshow";
var pagehide = "pagehide";
var open = "open";
var mouseup = "mouseup";
var mouseover = "mouseover";
var mouseout = "mouseout";
var mousemove = "mousemove";
var mouseleave = "mouseleave";
var mouseenter = "mouseenter";
var mousedown = "mousedown";
var message = "message";
var loadstart = "loadstart";
var loadend = "loadend";
var loadedmetadata = "loadedmetadata";
var loadeddata = "loadeddata";
var load = "load";
var keyup = "keyup";
var keypress = "keypress";
var keydown = "keydown";
var input = "input";
var hashchange = "hashchange";
var focus = "focus";
var error = "error";
var drop = "drop";
var dragstart = "dragstart";
var dragover = "dragover";
var dragleave = "dragleave";
var dragenter = "dragenter";
var dragend = "dragend";
var drag = "drag";
var dblclick = "dblclick";
var contextmenu = "contextmenu";
var compositionupdate = "compositionupdate";
var compositionstart = "compositionstart";
var compositionend = "compositionend";
var complete = "complete";
var click = "click";
var change = "change";
var blur = "blur";
var beforeunload = "beforeunload";
var animationstart = "animationstart";
var animationiteration = "animationiteration";
var animationend = "animationend";
var abort = "abort";
module.exports = {
    abort: abort, 
    animationend: animationend, 
    animationiteration: animationiteration, 
    animationstart: animationstart, 
    beforeunload: beforeunload, 
    blur: blur, 
    change: change, 
    click: click, 
    complete: complete, 
    compositionend: compositionend, 
    compositionstart: compositionstart, 
    compositionupdate: compositionupdate, 
    contextmenu: contextmenu, 
    dblclick: dblclick, 
    drag: drag, 
    dragend: dragend, 
    dragenter: dragenter, 
    dragleave: dragleave, 
    dragover: dragover, 
    dragstart: dragstart, 
    drop: drop, 
    error: error, 
    focus: focus, 
    hashchange: hashchange, 
    input: input, 
    keydown: keydown, 
    keypress: keypress, 
    keyup: keyup, 
    load: load, 
    loadeddata: loadeddata, 
    loadedmetadata: loadedmetadata, 
    loadend: loadend, 
    loadstart: loadstart, 
    message: message, 
    mousedown: mousedown, 
    mouseenter: mouseenter, 
    mouseleave: mouseleave, 
    mousemove: mousemove, 
    mouseout: mouseout, 
    mouseover: mouseover, 
    mouseup: mouseup, 
    open: open, 
    pagehide: pagehide, 
    pageshow: pageshow, 
    pause: pause, 
    play: play, 
    playing: playing, 
    popstate: popstate, 
    progress: progress, 
    ratechange: ratechange, 
    readystatechange: readystatechange, 
    reset: reset, 
    resize: resize, 
    scroll: scroll, 
    seeked: seeked, 
    seeking: seeking, 
    select: select, 
    show: show, 
    stalled: stalled, 
    submit: submit, 
    suspend: suspend, 
    timeout: timeout, 
    timeupdate: timeupdate, 
    touchcancel: touchcancel, 
    touchend: touchend, 
    touchenter: touchenter, 
    touchleave: touchleave, 
    touchmove: touchmove, 
    touchstart: touchstart, 
    transitionend: transitionend, 
    unload: unload, 
    visibilitychange: visibilitychange, 
    wheel: wheel
};

},{"../DOM.Event.Types":110}],112:[function(require,module,exports){
"use strict";

exports._readHTMLElement = function (failure) {
  return function (success) {
    return function (value) {
      var tag = Object.prototype.toString.call(value);
      if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
        return success(value);
      } else {
        return failure(tag);
      }
    };
  };
};

},{}],113:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Class = require("../Data.Foreign.Class");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_Node_Types = require("../DOM.Node.Types");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Identity = require("../Data.Identity");
var Control_Applicative = require("../Control.Applicative");
var Data_List_Types = require("../Data.List.Types");
var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;
var readHTMLVideoElement = Data_Foreign.unsafeReadTagged("HTMLVideoElement");
var readHTMLUListElement = Data_Foreign.unsafeReadTagged("HTMLUListElement");
var readHTMLTrackElement = Data_Foreign.unsafeReadTagged("HTMLTrackElement");
var readHTMLTitleElement = Data_Foreign.unsafeReadTagged("HTMLTitleElement");
var readHTMLTimeElement = Data_Foreign.unsafeReadTagged("HTMLTimeElement");
var readHTMLTextAreaElement = Data_Foreign.unsafeReadTagged("HTMLTextAreaElement");
var readHTMLTemplateElement = Data_Foreign.unsafeReadTagged("HTMLTemplateElement");
var readHTMLTableSectionElement = Data_Foreign.unsafeReadTagged("HTMLTableSectionElement");
var readHTMLTableRowElement = Data_Foreign.unsafeReadTagged("HTMLTableRowElement");
var readHTMLTableHeaderCellElement = Data_Foreign.unsafeReadTagged("HTMLTableHeaderCellElement");
var readHTMLTableElement = Data_Foreign.unsafeReadTagged("HTMLTableElement");
var readHTMLTableDataCellElement = Data_Foreign.unsafeReadTagged("HTMLTableDataCellElement");
var readHTMLTableColElement = Data_Foreign.unsafeReadTagged("HTMLTableColElement");
var readHTMLTableCellElement = Data_Foreign.unsafeReadTagged("HTMLTableCellElement");
var readHTMLTableCaptionElement = Data_Foreign.unsafeReadTagged("HTMLTableCaptionElement");
var readHTMLStyleElement = Data_Foreign.unsafeReadTagged("HTMLStyleElement");
var readHTMLSpanElement = Data_Foreign.unsafeReadTagged("HTMLSpanElement");
var readHTMLSourceElement = Data_Foreign.unsafeReadTagged("HTMLSourceElement");
var readHTMLSelectElement = Data_Foreign.unsafeReadTagged("HTMLSelectElement");
var readHTMLScriptElement = Data_Foreign.unsafeReadTagged("HTMLScriptElement");
var readHTMLQuoteElement = Data_Foreign.unsafeReadTagged("HTMLQuoteElement");
var readHTMLProgressElement = Data_Foreign.unsafeReadTagged("HTMLProgressElement");
var readHTMLPreElement = Data_Foreign.unsafeReadTagged("HTMLPreElement");
var readHTMLParamElement = Data_Foreign.unsafeReadTagged("HTMLParamElement");
var readHTMLParagraphElement = Data_Foreign.unsafeReadTagged("HTMLParagraphElement");
var readHTMLOutputElement = Data_Foreign.unsafeReadTagged("HTMLOutputElement");
var readHTMLOptionElement = Data_Foreign.unsafeReadTagged("HTMLOptionElement");
var readHTMLOptGroupElement = Data_Foreign.unsafeReadTagged("HTMLOptGroupElement");
var readHTMLObjectElement = Data_Foreign.unsafeReadTagged("HTMLObjectElement");
var readHTMLOListElement = Data_Foreign.unsafeReadTagged("HTMLOListElement");
var readHTMLModElement = Data_Foreign.unsafeReadTagged("HTMLModElement");
var readHTMLMeterElement = Data_Foreign.unsafeReadTagged("HTMLMeterElement");
var readHTMLMetaElement = Data_Foreign.unsafeReadTagged("HTMLMetaElement");
var readHTMLMediaElement = Data_Foreign.unsafeReadTagged("HTMLMediaElement");
var readHTMLMapElement = Data_Foreign.unsafeReadTagged("HTMLMapElement");
var readHTMLLinkElement = Data_Foreign.unsafeReadTagged("HTMLLinkElement");
var readHTMLLegendElement = Data_Foreign.unsafeReadTagged("HTMLLegendElement");
var readHTMLLabelElement = Data_Foreign.unsafeReadTagged("HTMLLabelElement");
var readHTMLLIElement = Data_Foreign.unsafeReadTagged("HTMLLIElement");
var readHTMLKeygenElement = Data_Foreign.unsafeReadTagged("HTMLKeygenElement");
var readHTMLInputElement = Data_Foreign.unsafeReadTagged("HTMLInputElement");
var readHTMLImageElement = Data_Foreign.unsafeReadTagged("HTMLImageElement");
var readHTMLIFrameElement = Data_Foreign.unsafeReadTagged("HTMLIFrameElement");
var readHTMLHtmlElement = Data_Foreign.unsafeReadTagged("HTMLHtmlElement");
var readHTMLHeadingElement = Data_Foreign.unsafeReadTagged("HTMLHeadingElement");
var readHTMLHeadElement = Data_Foreign.unsafeReadTagged("HTMLHeadElement");
var readHTMLHRElement = Data_Foreign.unsafeReadTagged("HTMLHRElement");
var readHTMLFormElement = Data_Foreign.unsafeReadTagged("HTMLFormElement");
var readHTMLFieldSetElement = Data_Foreign.unsafeReadTagged("HTMLFieldSetElement");
var readHTMLEmbedElement = Data_Foreign.unsafeReadTagged("HTMLEmbedElement");
var readHTMLElement = $foreign._readHTMLElement(function ($0) {
    return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create("HTMLElement")($0))));
})(function ($1) {
    return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1));
});
var readHTMLDocument = Data_Foreign.unsafeReadTagged("HTMLDocument");
var readHTMLDivElement = Data_Foreign.unsafeReadTagged("HTMLDivElement");
var readHTMLDataListElement = Data_Foreign.unsafeReadTagged("HTMLDataListElement");
var readHTMLDataElement = Data_Foreign.unsafeReadTagged("HTMLDataElement");
var readHTMLDListElement = Data_Foreign.unsafeReadTagged("HTMLDListElement");
var readHTMLCanvasElement = Data_Foreign.unsafeReadTagged("HTMLCanvasElement");
var readHTMLButtonElement = Data_Foreign.unsafeReadTagged("HTMLButtonElement");
var readHTMLBodyElement = Data_Foreign.unsafeReadTagged("HTMLBodyElement");
var readHTMLBaseElement = Data_Foreign.unsafeReadTagged("HTMLBaseElement");
var readHTMLBRElement = Data_Foreign.unsafeReadTagged("HTMLBRElement");
var readHTMLAudioElement = Data_Foreign.unsafeReadTagged("HTMLAudioElement");
var readHTMLAreaElement = Data_Foreign.unsafeReadTagged("HTMLAreaElement");
var readHTMLAnchorElement = Data_Foreign.unsafeReadTagged("HTMLAnchorElement");
var isForeignHTMLUListElement = new Data_Foreign_Class.IsForeign(readHTMLUListElement);
var isForeignHTMLTrackElement = new Data_Foreign_Class.IsForeign(readHTMLTrackElement);
var isForeignHTMLTitleElement = new Data_Foreign_Class.IsForeign(readHTMLTitleElement);
var isForeignHTMLTimeElement = new Data_Foreign_Class.IsForeign(readHTMLTimeElement);
var isForeignHTMLTextAreaElement = new Data_Foreign_Class.IsForeign(readHTMLTextAreaElement);
var isForeignHTMLTemplateElement = new Data_Foreign_Class.IsForeign(readHTMLTemplateElement);
var isForeignHTMLTableSectionElement = new Data_Foreign_Class.IsForeign(readHTMLTableSectionElement);
var isForeignHTMLTableRowElement = new Data_Foreign_Class.IsForeign(readHTMLTableRowElement);
var isForeignHTMLTableElement = new Data_Foreign_Class.IsForeign(readHTMLTableElement);
var isForeignHTMLTableColElement = new Data_Foreign_Class.IsForeign(readHTMLTableColElement);
var isForeignHTMLTableCaptionElement = new Data_Foreign_Class.IsForeign(readHTMLTableCaptionElement);
var isForeignHTMLStyleElement = new Data_Foreign_Class.IsForeign(readHTMLStyleElement);
var isForeignHTMLSpanElement = new Data_Foreign_Class.IsForeign(readHTMLSpanElement);
var isForeignHTMLSourceElement = new Data_Foreign_Class.IsForeign(readHTMLSourceElement);
var isForeignHTMLSelectElement = new Data_Foreign_Class.IsForeign(readHTMLSelectElement);
var isForeignHTMLScriptElement = new Data_Foreign_Class.IsForeign(readHTMLScriptElement);
var isForeignHTMLQuoteElement = new Data_Foreign_Class.IsForeign(readHTMLQuoteElement);
var isForeignHTMLProgressElement = new Data_Foreign_Class.IsForeign(readHTMLProgressElement);
var isForeignHTMLPreElement = new Data_Foreign_Class.IsForeign(readHTMLPreElement);
var isForeignHTMLParamElement = new Data_Foreign_Class.IsForeign(readHTMLParamElement);
var isForeignHTMLParagraphElement = new Data_Foreign_Class.IsForeign(readHTMLParagraphElement);
var isForeignHTMLOutputElement = new Data_Foreign_Class.IsForeign(readHTMLOutputElement);
var isForeignHTMLOptionElement = new Data_Foreign_Class.IsForeign(readHTMLOptionElement);
var isForeignHTMLOptGroupElement = new Data_Foreign_Class.IsForeign(readHTMLOptGroupElement);
var isForeignHTMLObjectElement = new Data_Foreign_Class.IsForeign(readHTMLObjectElement);
var isForeignHTMLOListElement = new Data_Foreign_Class.IsForeign(readHTMLOListElement);
var isForeignHTMLModElement = new Data_Foreign_Class.IsForeign(readHTMLModElement);
var isForeignHTMLMeterElement = new Data_Foreign_Class.IsForeign(readHTMLMeterElement);
var isForeignHTMLMetaElement = new Data_Foreign_Class.IsForeign(readHTMLMetaElement);
var isForeignHTMLMapElement = new Data_Foreign_Class.IsForeign(readHTMLMapElement);
var isForeignHTMLLinkElement = new Data_Foreign_Class.IsForeign(readHTMLLinkElement);
var isForeignHTMLLegendElement = new Data_Foreign_Class.IsForeign(readHTMLLegendElement);
var isForeignHTMLLabelElement = new Data_Foreign_Class.IsForeign(readHTMLLabelElement);
var isForeignHTMLLIElement = new Data_Foreign_Class.IsForeign(readHTMLLIElement);
var isForeignHTMLKeygenElement = new Data_Foreign_Class.IsForeign(readHTMLKeygenElement);
var isForeignHTMLInputElement = new Data_Foreign_Class.IsForeign(readHTMLInputElement);
var isForeignHTMLImageElement = new Data_Foreign_Class.IsForeign(readHTMLImageElement);
var isForeignHTMLIFrameElement = new Data_Foreign_Class.IsForeign(readHTMLIFrameElement);
var isForeignHTMLHtmlElement = new Data_Foreign_Class.IsForeign(readHTMLHtmlElement);
var isForeignHTMLHeadingElement = new Data_Foreign_Class.IsForeign(readHTMLHeadingElement);
var isForeignHTMLHeadElement = new Data_Foreign_Class.IsForeign(readHTMLHeadElement);
var isForeignHTMLHRElement = new Data_Foreign_Class.IsForeign(readHTMLHRElement);
var isForeignHTMLFormElement = new Data_Foreign_Class.IsForeign(readHTMLFormElement);
var isForeignHTMLFieldSetElement = new Data_Foreign_Class.IsForeign(readHTMLFieldSetElement);
var isForeignHTMLEmbedElement = new Data_Foreign_Class.IsForeign(readHTMLEmbedElement);
var isForeignHTMLElement = new Data_Foreign_Class.IsForeign(readHTMLElement);
var isForeignHTMLDocument = new Data_Foreign_Class.IsForeign(readHTMLDocument);
var isForeignHTMLDivElement = new Data_Foreign_Class.IsForeign(readHTMLDivElement);
var isForeignHTMLDataListElement = new Data_Foreign_Class.IsForeign(readHTMLDataListElement);
var isForeignHTMLDataElement = new Data_Foreign_Class.IsForeign(readHTMLDataElement);
var isForeignHTMLDListElement = new Data_Foreign_Class.IsForeign(readHTMLDListElement);
var isForeignHTMLCanvasElement = new Data_Foreign_Class.IsForeign(readHTMLCanvasElement);
var isForeignHTMLButtonElement = new Data_Foreign_Class.IsForeign(readHTMLButtonElement);
var isForeignHTMLBodyElement = new Data_Foreign_Class.IsForeign(readHTMLBodyElement);
var isForeignHTMLBaseElement = new Data_Foreign_Class.IsForeign(readHTMLBaseElement);
var isForeignHTMLBRElement = new Data_Foreign_Class.IsForeign(readHTMLBRElement);
var isForeignHTMLAreaElement = new Data_Foreign_Class.IsForeign(readHTMLAreaElement);
var isForeignHTMLAnchorElement = new Data_Foreign_Class.IsForeign(readHTMLAnchorElement);
var htmlVideoElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var htmlUListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTrackElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTitleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTimeElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTextAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTemplateElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableSectionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableRowElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableHeaderCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableDataCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableColElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableCellElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlTableCaptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlStyleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlSpanElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlSourceElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlSelectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlScriptElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlQuoteElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlProgressElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlPreElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlParamElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlParagraphElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlOutputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlOptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlOptGroupElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlObjectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlOListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlModElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlMeterElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlMetaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlMediaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlMapElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlLinkElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlLegendElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlLabelElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlLIElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlKeygenElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlInputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlImageElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlIFrameElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlHtmlElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlHeadingElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlHeadElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlHRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlFormElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlFieldSetElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlEmbedElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlElementToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
var htmlDivElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlDataListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlDataElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlDListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlCanvasElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlButtonElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlBodyElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlBaseElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlBRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlAudioElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var htmlAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
var htmlAnchorElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    htmlAnchorElementToHTMLElement: htmlAnchorElementToHTMLElement, 
    htmlAreaElementToHTMLElement: htmlAreaElementToHTMLElement, 
    htmlAudioElementToHTMLMediaElement: htmlAudioElementToHTMLMediaElement, 
    htmlBRElementToHTMLElement: htmlBRElementToHTMLElement, 
    htmlBaseElementToHTMLElement: htmlBaseElementToHTMLElement, 
    htmlBodyElementToHTMLElement: htmlBodyElementToHTMLElement, 
    htmlButtonElementToHTMLElement: htmlButtonElementToHTMLElement, 
    htmlCanvasElementToHTMLElement: htmlCanvasElementToHTMLElement, 
    htmlDListElementToHTMLElement: htmlDListElementToHTMLElement, 
    htmlDataElementToHTMLElement: htmlDataElementToHTMLElement, 
    htmlDataListElementToHTMLElement: htmlDataListElementToHTMLElement, 
    htmlDivElementToHTMLElement: htmlDivElementToHTMLElement, 
    htmlDocumentToDocument: htmlDocumentToDocument, 
    htmlDocumentToEventTarget: htmlDocumentToEventTarget, 
    htmlDocumentToNode: htmlDocumentToNode, 
    htmlDocumentToNonElementParentNode: htmlDocumentToNonElementParentNode, 
    htmlDocumentToParentNode: htmlDocumentToParentNode, 
    htmlElementToElement: htmlElementToElement, 
    htmlElementToEventTarget: htmlElementToEventTarget, 
    htmlElementToNode: htmlElementToNode, 
    htmlElementToNonDocumentTypeChildNode: htmlElementToNonDocumentTypeChildNode, 
    htmlElementToParentNode: htmlElementToParentNode, 
    htmlEmbedElementToHTMLElement: htmlEmbedElementToHTMLElement, 
    htmlFieldSetElementToHTMLElement: htmlFieldSetElementToHTMLElement, 
    htmlFormElementToHTMLElement: htmlFormElementToHTMLElement, 
    htmlHRElementToHTMLElement: htmlHRElementToHTMLElement, 
    htmlHeadElementToHTMLElement: htmlHeadElementToHTMLElement, 
    htmlHeadingElementToHTMLElement: htmlHeadingElementToHTMLElement, 
    htmlHtmlElementToHTMLElement: htmlHtmlElementToHTMLElement, 
    htmlIFrameElementToHTMLElement: htmlIFrameElementToHTMLElement, 
    htmlImageElementToHTMLElement: htmlImageElementToHTMLElement, 
    htmlInputElementToHTMLElement: htmlInputElementToHTMLElement, 
    htmlKeygenElementToHTMLElement: htmlKeygenElementToHTMLElement, 
    htmlLIElementToHTMLElement: htmlLIElementToHTMLElement, 
    htmlLabelElementToHTMLElement: htmlLabelElementToHTMLElement, 
    htmlLegendElementToHTMLElement: htmlLegendElementToHTMLElement, 
    htmlLinkElementToHTMLElement: htmlLinkElementToHTMLElement, 
    htmlMapElementToHTMLElement: htmlMapElementToHTMLElement, 
    htmlMediaElementToHTMLElement: htmlMediaElementToHTMLElement, 
    htmlMetaElementToHTMLElement: htmlMetaElementToHTMLElement, 
    htmlMeterElementToHTMLElement: htmlMeterElementToHTMLElement, 
    htmlModElementToHTMLElement: htmlModElementToHTMLElement, 
    htmlOListElementToHTMLElement: htmlOListElementToHTMLElement, 
    htmlObjectElementToHTMLElement: htmlObjectElementToHTMLElement, 
    htmlOptGroupElementToHTMLElement: htmlOptGroupElementToHTMLElement, 
    htmlOptionElementToHTMLElement: htmlOptionElementToHTMLElement, 
    htmlOutputElementToHTMLElement: htmlOutputElementToHTMLElement, 
    htmlParagraphElementToHTMLElement: htmlParagraphElementToHTMLElement, 
    htmlParamElementToHTMLElement: htmlParamElementToHTMLElement, 
    htmlPreElementToHTMLElement: htmlPreElementToHTMLElement, 
    htmlProgressElementToHTMLElement: htmlProgressElementToHTMLElement, 
    htmlQuoteElementToHTMLElement: htmlQuoteElementToHTMLElement, 
    htmlScriptElementToHTMLElement: htmlScriptElementToHTMLElement, 
    htmlSelectElementToHTMLElement: htmlSelectElementToHTMLElement, 
    htmlSourceElementToHTMLElement: htmlSourceElementToHTMLElement, 
    htmlSpanElementToHTMLElement: htmlSpanElementToHTMLElement, 
    htmlStyleElementToHTMLElement: htmlStyleElementToHTMLElement, 
    htmlTableCaptionElementToHTMLElement: htmlTableCaptionElementToHTMLElement, 
    htmlTableCellElementToHTMLElement: htmlTableCellElementToHTMLElement, 
    htmlTableColElementToHTMLElement: htmlTableColElementToHTMLElement, 
    htmlTableDataCellElementToHTMLTableCellElement: htmlTableDataCellElementToHTMLTableCellElement, 
    htmlTableElementToHTMLElement: htmlTableElementToHTMLElement, 
    htmlTableHeaderCellElementToHTMLTableCellElement: htmlTableHeaderCellElementToHTMLTableCellElement, 
    htmlTableRowElementToHTMLElement: htmlTableRowElementToHTMLElement, 
    htmlTableSectionElementToHTMLElement: htmlTableSectionElementToHTMLElement, 
    htmlTemplateElementToHTMLElement: htmlTemplateElementToHTMLElement, 
    htmlTextAreaElementToHTMLElement: htmlTextAreaElementToHTMLElement, 
    htmlTimeElementToHTMLElement: htmlTimeElementToHTMLElement, 
    htmlTitleElementToHTMLElement: htmlTitleElementToHTMLElement, 
    htmlTrackElementToHTMLElement: htmlTrackElementToHTMLElement, 
    htmlUListElementToHTMLElement: htmlUListElementToHTMLElement, 
    htmlVideoElementToHTMLMediaElement: htmlVideoElementToHTMLMediaElement, 
    readHTMLAnchorElement: readHTMLAnchorElement, 
    readHTMLAreaElement: readHTMLAreaElement, 
    readHTMLAudioElement: readHTMLAudioElement, 
    readHTMLBRElement: readHTMLBRElement, 
    readHTMLBaseElement: readHTMLBaseElement, 
    readHTMLBodyElement: readHTMLBodyElement, 
    readHTMLButtonElement: readHTMLButtonElement, 
    readHTMLCanvasElement: readHTMLCanvasElement, 
    readHTMLDListElement: readHTMLDListElement, 
    readHTMLDataElement: readHTMLDataElement, 
    readHTMLDataListElement: readHTMLDataListElement, 
    readHTMLDivElement: readHTMLDivElement, 
    readHTMLDocument: readHTMLDocument, 
    readHTMLElement: readHTMLElement, 
    readHTMLEmbedElement: readHTMLEmbedElement, 
    readHTMLFieldSetElement: readHTMLFieldSetElement, 
    readHTMLFormElement: readHTMLFormElement, 
    readHTMLHRElement: readHTMLHRElement, 
    readHTMLHeadElement: readHTMLHeadElement, 
    readHTMLHeadingElement: readHTMLHeadingElement, 
    readHTMLHtmlElement: readHTMLHtmlElement, 
    readHTMLIFrameElement: readHTMLIFrameElement, 
    readHTMLImageElement: readHTMLImageElement, 
    readHTMLInputElement: readHTMLInputElement, 
    readHTMLKeygenElement: readHTMLKeygenElement, 
    readHTMLLIElement: readHTMLLIElement, 
    readHTMLLabelElement: readHTMLLabelElement, 
    readHTMLLegendElement: readHTMLLegendElement, 
    readHTMLLinkElement: readHTMLLinkElement, 
    readHTMLMapElement: readHTMLMapElement, 
    readHTMLMediaElement: readHTMLMediaElement, 
    readHTMLMetaElement: readHTMLMetaElement, 
    readHTMLMeterElement: readHTMLMeterElement, 
    readHTMLModElement: readHTMLModElement, 
    readHTMLOListElement: readHTMLOListElement, 
    readHTMLObjectElement: readHTMLObjectElement, 
    readHTMLOptGroupElement: readHTMLOptGroupElement, 
    readHTMLOptionElement: readHTMLOptionElement, 
    readHTMLOutputElement: readHTMLOutputElement, 
    readHTMLParagraphElement: readHTMLParagraphElement, 
    readHTMLParamElement: readHTMLParamElement, 
    readHTMLPreElement: readHTMLPreElement, 
    readHTMLProgressElement: readHTMLProgressElement, 
    readHTMLQuoteElement: readHTMLQuoteElement, 
    readHTMLScriptElement: readHTMLScriptElement, 
    readHTMLSelectElement: readHTMLSelectElement, 
    readHTMLSourceElement: readHTMLSourceElement, 
    readHTMLSpanElement: readHTMLSpanElement, 
    readHTMLStyleElement: readHTMLStyleElement, 
    readHTMLTableCaptionElement: readHTMLTableCaptionElement, 
    readHTMLTableCellElement: readHTMLTableCellElement, 
    readHTMLTableColElement: readHTMLTableColElement, 
    readHTMLTableDataCellElement: readHTMLTableDataCellElement, 
    readHTMLTableElement: readHTMLTableElement, 
    readHTMLTableHeaderCellElement: readHTMLTableHeaderCellElement, 
    readHTMLTableRowElement: readHTMLTableRowElement, 
    readHTMLTableSectionElement: readHTMLTableSectionElement, 
    readHTMLTemplateElement: readHTMLTemplateElement, 
    readHTMLTextAreaElement: readHTMLTextAreaElement, 
    readHTMLTimeElement: readHTMLTimeElement, 
    readHTMLTitleElement: readHTMLTitleElement, 
    readHTMLTrackElement: readHTMLTrackElement, 
    readHTMLUListElement: readHTMLUListElement, 
    readHTMLVideoElement: readHTMLVideoElement, 
    windowToEventTarget: windowToEventTarget, 
    isForeignHTMLDocument: isForeignHTMLDocument, 
    isForeignHTMLElement: isForeignHTMLElement, 
    isForeignHTMLHtmlElement: isForeignHTMLHtmlElement, 
    isForeignHTMLHeadElement: isForeignHTMLHeadElement, 
    isForeignHTMLTitleElement: isForeignHTMLTitleElement, 
    isForeignHTMLBaseElement: isForeignHTMLBaseElement, 
    isForeignHTMLLinkElement: isForeignHTMLLinkElement, 
    isForeignHTMLMetaElement: isForeignHTMLMetaElement, 
    isForeignHTMLStyleElement: isForeignHTMLStyleElement, 
    isForeignHTMLBodyElement: isForeignHTMLBodyElement, 
    isForeignHTMLHeadingElement: isForeignHTMLHeadingElement, 
    isForeignHTMLParagraphElement: isForeignHTMLParagraphElement, 
    isForeignHTMLHRElement: isForeignHTMLHRElement, 
    isForeignHTMLPreElement: isForeignHTMLPreElement, 
    isForeignHTMLQuoteElement: isForeignHTMLQuoteElement, 
    isForeignHTMLOListElement: isForeignHTMLOListElement, 
    isForeignHTMLUListElement: isForeignHTMLUListElement, 
    isForeignHTMLLIElement: isForeignHTMLLIElement, 
    isForeignHTMLDListElement: isForeignHTMLDListElement, 
    isForeignHTMLDivElement: isForeignHTMLDivElement, 
    isForeignHTMLAnchorElement: isForeignHTMLAnchorElement, 
    isForeignHTMLDataElement: isForeignHTMLDataElement, 
    isForeignHTMLTimeElement: isForeignHTMLTimeElement, 
    isForeignHTMLSpanElement: isForeignHTMLSpanElement, 
    isForeignHTMLBRElement: isForeignHTMLBRElement, 
    isForeignHTMLModElement: isForeignHTMLModElement, 
    isForeignHTMLImageElement: isForeignHTMLImageElement, 
    isForeignHTMLIFrameElement: isForeignHTMLIFrameElement, 
    isForeignHTMLEmbedElement: isForeignHTMLEmbedElement, 
    isForeignHTMLObjectElement: isForeignHTMLObjectElement, 
    isForeignHTMLParamElement: isForeignHTMLParamElement, 
    isForeignHTMLSourceElement: isForeignHTMLSourceElement, 
    isForeignHTMLTrackElement: isForeignHTMLTrackElement, 
    isForeignHTMLMapElement: isForeignHTMLMapElement, 
    isForeignHTMLAreaElement: isForeignHTMLAreaElement, 
    isForeignHTMLTableElement: isForeignHTMLTableElement, 
    isForeignHTMLTableCaptionElement: isForeignHTMLTableCaptionElement, 
    isForeignHTMLTableColElement: isForeignHTMLTableColElement, 
    isForeignHTMLTableSectionElement: isForeignHTMLTableSectionElement, 
    isForeignHTMLTableRowElement: isForeignHTMLTableRowElement, 
    isForeignHTMLFormElement: isForeignHTMLFormElement, 
    isForeignHTMLLabelElement: isForeignHTMLLabelElement, 
    isForeignHTMLInputElement: isForeignHTMLInputElement, 
    isForeignHTMLButtonElement: isForeignHTMLButtonElement, 
    isForeignHTMLSelectElement: isForeignHTMLSelectElement, 
    isForeignHTMLDataListElement: isForeignHTMLDataListElement, 
    isForeignHTMLOptGroupElement: isForeignHTMLOptGroupElement, 
    isForeignHTMLOptionElement: isForeignHTMLOptionElement, 
    isForeignHTMLTextAreaElement: isForeignHTMLTextAreaElement, 
    isForeignHTMLKeygenElement: isForeignHTMLKeygenElement, 
    isForeignHTMLOutputElement: isForeignHTMLOutputElement, 
    isForeignHTMLProgressElement: isForeignHTMLProgressElement, 
    isForeignHTMLMeterElement: isForeignHTMLMeterElement, 
    isForeignHTMLFieldSetElement: isForeignHTMLFieldSetElement, 
    isForeignHTMLLegendElement: isForeignHTMLLegendElement, 
    isForeignHTMLScriptElement: isForeignHTMLScriptElement, 
    isForeignHTMLTemplateElement: isForeignHTMLTemplateElement, 
    isForeignHTMLCanvasElement: isForeignHTMLCanvasElement
};

},{"../Control.Applicative":41,"../Control.Monad.Except.Trans":78,"../Control.Semigroupoid":104,"../DOM.Event.Types":110,"../DOM.Node.Types":123,"../Data.Either":144,"../Data.Foreign":163,"../Data.Foreign.Class":154,"../Data.Identity":178,"../Data.List.Types":187,"../Prelude":266,"../Unsafe.Coerce":269,"./foreign":112}],114:[function(require,module,exports){
"use strict";

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

exports.navigator = function (window) {
  return function () {
    return window.navigator;
  };
};

exports.location = function (window) {
  return function () {
    return window.location;
  };
};

exports.innerWidth = function (window) {
  return function () {
    return window.innerWidth;
  };
};

exports.innerHeight = function (window) {
  return function () {
    return window.innerHeight;
  };
};

exports.alert = function (str) {
  return function (window) {
    return function () {
      window.alert(str);
      return {};
    };
  };
};

exports.confirm = function (str) {
  return function (window) {
    return function () {
      return window.confirm(str);
    };
  };
};

exports.moveBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.moveBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.moveTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.moveTo(width, height);
        return {};
      };
    };
  };
};

exports._open = function (url) {
  return function (name) {
    return function (features) {
      return function (window) {
        return function () {
          return window.open(url, name, features);
        };
      };
    };
  };
};

exports.outerHeight = function (window) {
  return function () {
    return window.outerHeight;
  };
};

exports.outerWidth = function (window) {
  return function () {
    return window.outerWidth;
  };
};

exports.print = function (window) {
  return function () {
    window.print();
    return {};
  };
};

exports._prompt = function (str) {
  return function (window) {
    return function () {
      return window.prompt(str);
    };
  };
};

exports.resizeBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.resizeBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.resizeTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.resizeTo(width, height);
        return {};
      };
    };
  };
};

exports.screenX = function (window) {
  return function () {
    return window.screenX;
  };
};

exports.screenY = function (window) {
  return function () {
    return window.screenY;
  };
};

exports.scroll = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scroll(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollBy = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scrollBy(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollX = function (window) {
  return function () {
    return window.scrollX;
  };
};

exports.scrollY = function (window) {
  return function () {
    return window.scrollY;
  };
};

},{}],115:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var DOM = require("../DOM");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var Data_Functor = require("../Data.Functor");
var prompt = function (window) {
    return function (msg) {
        return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._prompt(window)(msg));
    };
};
var open = function (window) {
    return function (url) {
        return function (name) {
            return function (features) {
                return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._open(window)(url)(name)(features));
            };
        };
    };
};
module.exports = {
    open: open, 
    prompt: prompt, 
    alert: $foreign.alert, 
    confirm: $foreign.confirm, 
    document: $foreign.document, 
    innerHeight: $foreign.innerHeight, 
    innerWidth: $foreign.innerWidth, 
    location: $foreign.location, 
    moveBy: $foreign.moveBy, 
    moveTo: $foreign.moveTo, 
    navigator: $foreign.navigator, 
    outerHeight: $foreign.outerHeight, 
    outerWidth: $foreign.outerWidth, 
    print: $foreign.print, 
    resizeBy: $foreign.resizeBy, 
    resizeTo: $foreign.resizeTo, 
    screenX: $foreign.screenX, 
    screenY: $foreign.screenY, 
    scroll: $foreign.scroll, 
    scrollBy: $foreign.scrollBy, 
    scrollX: $foreign.scrollX, 
    scrollY: $foreign.scrollY
};

},{"../Control.Monad.Eff":76,"../DOM":124,"../DOM.HTML.Types":113,"../Data.Functor":173,"../Data.Maybe":192,"../Data.Nullable":205,"../Prelude":266,"./foreign":114}],116:[function(require,module,exports){
/* global window */
"use strict";

exports.window = function () {
  return window;
};

},{}],117:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var DOM = require("../DOM");
var DOM_HTML_Types = require("../DOM.HTML.Types");
module.exports = {
    window: $foreign.window
};

},{"../Control.Monad.Eff":76,"../DOM":124,"../DOM.HTML.Types":113,"./foreign":116}],118:[function(require,module,exports){
"use strict";

var getEffProp = function (name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.nodeTypeIndex = function (node) {
  return node.nodeType;
};

exports.nodeName = function (node) {
  return node.nodeName;
};

exports.baseURI = getEffProp("baseURI");

exports.ownerDocument = getEffProp("ownerDocument");

exports.parentNode = getEffProp("parentNode");

exports.parentElement = getEffProp("parentElement");

exports.hasChildNodes = function (node) {
  return function () {
    return node.hasChildNodes();
  };
};

exports.childNodes = getEffProp("childNodes");

exports.firstChild = getEffProp("firstChild");

exports.lastChild = getEffProp("lastChild");

exports.previousSibling = getEffProp("previousSibling");

exports.nextSibling = getEffProp("nextSibling");

exports.nodeValue = getEffProp("nodeValue");

exports.setNodeValue = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
      return {};
    };
  };
};

exports.textContent = getEffProp("textContent");

exports.setTextContent = function (value) {
  return function (node) {
    return function () {
      node.textContent = value;
      return {};
    };
  };
};

exports.normalize = function (node) {
  return function () {
    node.normalize();
    return {};
  };
};

exports.clone = function (node) {
  return function () {
    return node.clone(false);
  };
};

exports.deepClone = function (node) {
  return function () {
    return node.clone(false);
  };
};

exports.isEqualNode = function (node1) {
  return function (node2) {
    return function () {
      return node1.isEqualNode(node2);
    };
  };
};

exports.compareDocumentPositionBits = function (node1) {
  return function (node2) {
    return function () {
      return node1.compareDocumentPosition(node2);
    };
  };
};

exports.contains = function (node1) {
  return function (node2) {
    return function () {
      return node1.contains(node2);
    };
  };
};

exports.lookupPrefix = function (prefix) {
  return function (node) {
    return function () {
      return node.lookupPrefix(prefix);
    };
  };
};

exports.lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.lookupNamespaceURI(ns);
    };
  };
};

exports.isDefaultNamespace = function (ns) {
  return function (node) {
    return function () {
      return node.isDefaultNamespace(ns);
    };
  };
};

exports.insertBefore = function (node1) {
  return function (node2) {
    return function (parent) {
      return function () {
        return parent.insertBefore(node1, node2);
      };
    };
  };
};

exports.appendChild = function (node) {
  return function (parent) {
    return function () {
      return parent.appendChild(node);
    };
  };
};

exports.replaceChild = function (newChild) {
  return function (oldChild) {
    return function (parent) {
      return function () {
        return parent.replaceChild(newChild, oldChild);
      };
    };
  };
};

exports.removeChild = function (node) {
  return function (parent) {
    return function () {
      return parent.removeChild(node);
    };
  };
};

},{}],119:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Enum = require("../Data.Enum");
var Data_Nullable = require("../Data.Nullable");
var Data_Maybe = require("../Data.Maybe");
var DOM = require("../DOM");
var DOM_Node_NodeType = require("../DOM.Node.NodeType");
var DOM_Node_Types = require("../DOM.Node.Types");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var nodeType = function (dictPartial) {
    return function ($1) {
        return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(DOM_Node_NodeType.boundedEnumNodeType)($foreign.nodeTypeIndex($1)));
    };
};
module.exports = {
    nodeType: nodeType, 
    appendChild: $foreign.appendChild, 
    baseURI: $foreign.baseURI, 
    childNodes: $foreign.childNodes, 
    clone: $foreign.clone, 
    compareDocumentPositionBits: $foreign.compareDocumentPositionBits, 
    contains: $foreign.contains, 
    deepClone: $foreign.deepClone, 
    firstChild: $foreign.firstChild, 
    hasChildNodes: $foreign.hasChildNodes, 
    insertBefore: $foreign.insertBefore, 
    isDefaultNamespace: $foreign.isDefaultNamespace, 
    isEqualNode: $foreign.isEqualNode, 
    lastChild: $foreign.lastChild, 
    lookupNamespaceURI: $foreign.lookupNamespaceURI, 
    lookupPrefix: $foreign.lookupPrefix, 
    nextSibling: $foreign.nextSibling, 
    nodeName: $foreign.nodeName, 
    nodeTypeIndex: $foreign.nodeTypeIndex, 
    nodeValue: $foreign.nodeValue, 
    normalize: $foreign.normalize, 
    ownerDocument: $foreign.ownerDocument, 
    parentElement: $foreign.parentElement, 
    parentNode: $foreign.parentNode, 
    previousSibling: $foreign.previousSibling, 
    removeChild: $foreign.removeChild, 
    replaceChild: $foreign.replaceChild, 
    setNodeValue: $foreign.setNodeValue, 
    setTextContent: $foreign.setTextContent, 
    textContent: $foreign.textContent
};

},{"../Control.Monad.Eff":76,"../Control.Semigroupoid":104,"../DOM":124,"../DOM.Node.NodeType":120,"../DOM.Node.Types":123,"../Data.Enum":145,"../Data.Maybe":192,"../Data.Nullable":205,"../Prelude":266,"./foreign":118}],120:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Enum = require("../Data.Enum");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var ElementNode = (function () {
    function ElementNode() {

    };
    ElementNode.value = new ElementNode();
    return ElementNode;
})();
var AttributeNode = (function () {
    function AttributeNode() {

    };
    AttributeNode.value = new AttributeNode();
    return AttributeNode;
})();
var TextNode = (function () {
    function TextNode() {

    };
    TextNode.value = new TextNode();
    return TextNode;
})();
var CDATASectionNode = (function () {
    function CDATASectionNode() {

    };
    CDATASectionNode.value = new CDATASectionNode();
    return CDATASectionNode;
})();
var EntityReferenceNode = (function () {
    function EntityReferenceNode() {

    };
    EntityReferenceNode.value = new EntityReferenceNode();
    return EntityReferenceNode;
})();
var EntityNode = (function () {
    function EntityNode() {

    };
    EntityNode.value = new EntityNode();
    return EntityNode;
})();
var ProcessingInstructionNode = (function () {
    function ProcessingInstructionNode() {

    };
    ProcessingInstructionNode.value = new ProcessingInstructionNode();
    return ProcessingInstructionNode;
})();
var CommentNode = (function () {
    function CommentNode() {

    };
    CommentNode.value = new CommentNode();
    return CommentNode;
})();
var DocumentNode = (function () {
    function DocumentNode() {

    };
    DocumentNode.value = new DocumentNode();
    return DocumentNode;
})();
var DocumentTypeNode = (function () {
    function DocumentTypeNode() {

    };
    DocumentTypeNode.value = new DocumentTypeNode();
    return DocumentTypeNode;
})();
var DocumentFragmentNode = (function () {
    function DocumentFragmentNode() {

    };
    DocumentFragmentNode.value = new DocumentFragmentNode();
    return DocumentFragmentNode;
})();
var NotationNode = (function () {
    function NotationNode() {

    };
    NotationNode.value = new NotationNode();
    return NotationNode;
})();
var toEnumNodeType = function (v) {
    if (v === 1) {
        return new Data_Maybe.Just(ElementNode.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(AttributeNode.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(TextNode.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(CDATASectionNode.value);
    };
    if (v === 5) {
        return new Data_Maybe.Just(EntityReferenceNode.value);
    };
    if (v === 6) {
        return new Data_Maybe.Just(EntityNode.value);
    };
    if (v === 7) {
        return new Data_Maybe.Just(ProcessingInstructionNode.value);
    };
    if (v === 8) {
        return new Data_Maybe.Just(CommentNode.value);
    };
    if (v === 9) {
        return new Data_Maybe.Just(DocumentNode.value);
    };
    if (v === 10) {
        return new Data_Maybe.Just(DocumentTypeNode.value);
    };
    if (v === 11) {
        return new Data_Maybe.Just(DocumentFragmentNode.value);
    };
    if (v === 12) {
        return new Data_Maybe.Just(NotationNode.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumNodeType = function (v) {
    if (v instanceof ElementNode) {
        return 1;
    };
    if (v instanceof AttributeNode) {
        return 2;
    };
    if (v instanceof TextNode) {
        return 3;
    };
    if (v instanceof CDATASectionNode) {
        return 4;
    };
    if (v instanceof EntityReferenceNode) {
        return 5;
    };
    if (v instanceof EntityNode) {
        return 6;
    };
    if (v instanceof ProcessingInstructionNode) {
        return 7;
    };
    if (v instanceof CommentNode) {
        return 8;
    };
    if (v instanceof DocumentNode) {
        return 9;
    };
    if (v instanceof DocumentTypeNode) {
        return 10;
    };
    if (v instanceof DocumentFragmentNode) {
        return 11;
    };
    if (v instanceof NotationNode) {
        return 12;
    };
    throw new Error("Failed pattern match at DOM.Node.NodeType line 55, column 1 - line 56, column 1: " + [ v.constructor.name ]);
};
var eqNodeType = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ElementNode && y instanceof ElementNode) {
            return true;
        };
        if (x instanceof AttributeNode && y instanceof AttributeNode) {
            return true;
        };
        if (x instanceof TextNode && y instanceof TextNode) {
            return true;
        };
        if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) {
            return true;
        };
        if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) {
            return true;
        };
        if (x instanceof EntityNode && y instanceof EntityNode) {
            return true;
        };
        if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) {
            return true;
        };
        if (x instanceof CommentNode && y instanceof CommentNode) {
            return true;
        };
        if (x instanceof DocumentNode && y instanceof DocumentNode) {
            return true;
        };
        if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) {
            return true;
        };
        if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) {
            return true;
        };
        if (x instanceof NotationNode && y instanceof NotationNode) {
            return true;
        };
        return false;
    };
});
var ordNodeType = new Data_Ord.Ord(function () {
    return eqNodeType;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
    };
});
var enumNodeType = new Data_Enum.Enum(function () {
    return ordNodeType;
}, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType));
var boundedNodeType = new Data_Bounded.Bounded(function () {
    return ordNodeType;
}, ElementNode.value, NotationNode.value);
var boundedEnumNodeType = new Data_Enum.BoundedEnum(function () {
    return boundedNodeType;
}, function () {
    return enumNodeType;
}, 12, fromEnumNodeType, toEnumNodeType);
module.exports = {
    ElementNode: ElementNode, 
    AttributeNode: AttributeNode, 
    TextNode: TextNode, 
    CDATASectionNode: CDATASectionNode, 
    EntityReferenceNode: EntityReferenceNode, 
    EntityNode: EntityNode, 
    ProcessingInstructionNode: ProcessingInstructionNode, 
    CommentNode: CommentNode, 
    DocumentNode: DocumentNode, 
    DocumentTypeNode: DocumentTypeNode, 
    DocumentFragmentNode: DocumentFragmentNode, 
    NotationNode: NotationNode, 
    eqNodeType: eqNodeType, 
    ordNodeType: ordNodeType, 
    boundedNodeType: boundedNodeType, 
    enumNodeType: enumNodeType, 
    boundedEnumNodeType: boundedEnumNodeType
};

},{"../Data.Bounded":135,"../Data.Enum":145,"../Data.Eq":147,"../Data.Maybe":192,"../Data.Ord":209,"../Prelude":266}],121:[function(require,module,exports){
"use strict";

var getEffProp = function (name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.children = getEffProp("children");

exports.firstElementChild = getEffProp("firstElementChild");

exports.lastElementChild = getEffProp("lastElementChild");

exports.childElementCount = getEffProp("childElementCount");

exports.querySelector = function (selector) {
  return function (node) {
    return function () {
      return node.querySelector(selector);
    };
  };
};

exports.querySelectorAll = function (selector) {
  return function (node) {
    return function () {
      return node.querySelectorAll(selector);
    };
  };
};

},{}],122:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Nullable = require("../Data.Nullable");
var DOM = require("../DOM");
var DOM_Node_Types = require("../DOM.Node.Types");
module.exports = {
    childElementCount: $foreign.childElementCount, 
    children: $foreign.children, 
    firstElementChild: $foreign.firstElementChild, 
    lastElementChild: $foreign.lastElementChild, 
    querySelector: $foreign.querySelector, 
    querySelectorAll: $foreign.querySelectorAll
};

},{"../Control.Monad.Eff":76,"../DOM":124,"../DOM.Node.Types":123,"../Data.Nullable":205,"./foreign":121}],123:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Newtype = require("../Data.Newtype");
var DOM_Event_Types = require("../DOM.Event.Types");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var ElementId = function (x) {
    return x;
};
var textToNode = Unsafe_Coerce.unsafeCoerce;
var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
var oOrdElementId = Data_Ord.ordString;
var newtypeElementId = new Data_Newtype.Newtype(function (n) {
    return n;
}, ElementId);
var eqElementId = Data_Eq.eqString;
var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var elementToNode = Unsafe_Coerce.unsafeCoerce;
var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNode = Unsafe_Coerce.unsafeCoerce;
var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
var commentToNode = Unsafe_Coerce.unsafeCoerce;
var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    ElementId: ElementId, 
    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode, 
    commentToNode: commentToNode, 
    documentFragmentToNode: documentFragmentToNode, 
    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode, 
    documentFragmentToParentNode: documentFragmentToParentNode, 
    documentToEventTarget: documentToEventTarget, 
    documentToNode: documentToNode, 
    documentToNonElementParentNode: documentToNonElementParentNode, 
    documentToParentNode: documentToParentNode, 
    documentTypeToNode: documentTypeToNode, 
    elementToEventTarget: elementToEventTarget, 
    elementToNode: elementToNode, 
    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode, 
    elementToParentNode: elementToParentNode, 
    processingInstructionToNode: processingInstructionToNode, 
    textToNode: textToNode, 
    newtypeElementId: newtypeElementId, 
    eqElementId: eqElementId, 
    oOrdElementId: oOrdElementId
};

},{"../DOM.Event.Types":110,"../Data.Eq":147,"../Data.Newtype":202,"../Data.Ord":209,"../Prelude":266,"../Unsafe.Coerce":269}],124:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
module.exports = {};

},{}],125:[function(require,module,exports){
"use strict";

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],126:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Data_Maybe = require("../Data.Maybe");
var thaw = $foreign.copyImpl;
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var freeze = $foreign.copyImpl;
module.exports = {
    freeze: freeze, 
    peekSTArray: peekSTArray, 
    pushSTArray: pushSTArray, 
    thaw: thaw, 
    emptySTArray: $foreign.emptySTArray, 
    pokeSTArray: $foreign.pokeSTArray, 
    pushAllSTArray: $foreign.pushAllSTArray, 
    runSTArray: $foreign.runSTArray, 
    spliceSTArray: $foreign.spliceSTArray, 
    toAssocArray: $foreign.toAssocArray
};

},{"../Control.Monad.Eff":76,"../Control.Monad.ST":92,"../Data.Maybe":192,"./foreign":125}],127:[function(require,module,exports){
"use strict";

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = [];
    for (var i = start, n = 0; i !== end; i += step) {
      result[n++] = i;
    }
    result[n] = i;
    return result;
  };
};

exports.replicate = function (count) {
  return function (value) {
    var result = [];
    var n = 0;
    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }
    return result;
  };
};

exports.fromFoldableImpl = (function () {
  // jshint maxparams: 2
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }
  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    while (list !== emptyList) {
      result[count++] = list.head;
      list = list.tail;
    }
    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
})();

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no  = [];
    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x))
        yes.push(x);
      else
        no.push(x);
    }
    return { yes: yes, no: no };
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    // jshint maxparams: 2
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.take = function (n) {
  return function (l) {
    return n < 1 ? [] : l.slice(0, n);
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

//------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};

},{}],128:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Data_Function = require("../Data.Function");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Ord = require("../Data.Ord");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Control_Applicative = require("../Control.Applicative");
var Data_Boolean = require("../Data.Boolean");
var Data_Semiring = require("../Data.Semiring");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Bind = require("../Control.Bind");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Category = require("../Control.Category");
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unzip = $foreign["uncons'"](function (v) {
    return new Data_Tuple.Tuple([  ], [  ]);
})(function (v) {
    return function (ts) {
        var $43 = unzip(ts);
        return new Data_Tuple.Tuple($foreign.cons(v.value0)($43.value0), $foreign.cons(v.value1)($43.value1));
    };
});
var unsafeIndex = function (dictPartial) {
    return $foreign.unsafeIndexImpl;
};
var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x, 
            tail: xs
        });
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)($foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (h) {
        return function (t) {
            return new Data_Maybe.Just(new Data_Tuple.Tuple(h, t));
        };
    }));
};
var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var span = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var $49 = uncons(xs);
                if ($49 instanceof Data_Maybe.Just && p($49.value0.head)) {
                    var __tco_acc = $foreign.cons($49.value0.head)(acc);
                    acc = __tco_acc;
                    xs = $49.value0.tail;
                    continue tco;
                };
                return {
                    init: $foreign.reverse(acc), 
                    rest: xs
                };
            };
        };
    };
    return go([  ]);
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var $53 = comp(x)(y);
                if ($53 instanceof Data_Ordering.GT) {
                    return 1;
                };
                if ($53 instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if ($53 instanceof Data_Ordering.LT) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.Array line 451, column 15 - line 456, column 1: " + [ $53.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var $$null = function (xs) {
    return $foreign.length(xs) === 0;
};
var nubBy = function (eq) {
    return function (xs) {
        var $54 = uncons(xs);
        if ($54 instanceof Data_Maybe.Just) {
            return $foreign.cons($54.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return !eq($54.value0.head)(y);
            })($54.value0.tail)));
        };
        if ($54 instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match at Data.Array line 540, column 3 - line 542, column 18: " + [ $54.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var mapWithIndex = function (f) {
    return function (xs) {
        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1))(xs);
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Data_Boolean.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1)(xs));
    };
    throw new Error("Failed pattern match at Data.Array line 242, column 1 - line 244, column 55: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var last = function (xs) {
    return index(xs)($foreign.length(xs) - 1);
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
var head = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (v) {
        return new Data_Maybe.Just(x);
    };
});
var groupBy = function (op) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var $59 = uncons(xs);
                if ($59 instanceof Data_Maybe.Just) {
                    var sp = span(op($59.value0.head))($59.value0.tail);
                    var __tco_acc = $foreign.cons(new Data_NonEmpty.NonEmpty($59.value0.head, sp.init))(acc);
                    acc = __tco_acc;
                    xs = sp.rest;
                    continue tco;
                };
                if ($59 instanceof Data_Maybe.Nothing) {
                    return $foreign.reverse(acc);
                };
                throw new Error("Failed pattern match at Data.Array line 526, column 15 - line 530, column 27: " + [ $59.constructor.name ]);
            };
        };
    };
    return go([  ]);
};
var group = function (dictEq) {
    return function (xs) {
        return groupBy(Data_Eq.eq(dictEq))(xs);
    };
};
var group$prime = function (dictOrd) {
    return function ($76) {
        return group(dictOrd["__superclass_Data.Eq.Eq_0"]())(sort(dictOrd)($76));
    };
};
var fromFoldable = function (dictFoldable) {
    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};
var foldRecM = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (array) {
                var go = function (res) {
                    return function (i) {
                        if (i >= $foreign.length(array)) {
                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Done(res));
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(f(res)(Partial_Unsafe.unsafePartial(function (dictPartial) {
                                return unsafeIndex(dictPartial)(array)(i);
                            })))(function (v) {
                                return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Loop({
                                    a: v, 
                                    b: i + 1 | 0
                                }));
                            });
                        };
                        throw new Error("Failed pattern match at Data.Array line 638, column 3 - line 642, column 42: " + [ res.constructor.name, i.constructor.name ]);
                    };
                };
                return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
            };
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (v) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
            })(function (b) {
                return function (bs) {
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(a)(b))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (v) {
                return v + 1 | 0;
            })(findLastIndex(function (y) {
                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
            })(ys));
            return Partial_Unsafe.unsafePartial(function (dictPartial) {
                return Data_Maybe.fromJust(dictPartial)(insertAt(i)(x)(ys));
            });
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var filterM = function (dictMonad) {
    return function (p) {
        return $foreign["uncons'"](function (v) {
            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())([  ]);
        })(function (x) {
            return function (xs) {
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(p(x))(function (v) {
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(filterM(dictMonad)(p)(xs))(function (v1) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())((function () {
                            if (v) {
                                return $foreign.cons(x)(v1);
                            };
                            if (!v) {
                                return v1;
                            };
                            throw new Error("Failed pattern match at Data.Array line 418, column 3 - line 418, column 34: " + [ v.constructor.name ]);
                        })());
                    });
                });
            };
        });
    };
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(v2)(function (i) {
                return Partial_Unsafe.unsafePartial(function (dictPartial) {
                    return Data_Maybe.fromJust(dictPartial)(deleteAt(i)(v2));
                });
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return function (xs) {
        return function (ys) {
            if ($$null(xs)) {
                return [  ];
            };
            if (Data_Boolean.otherwise) {
                return $foreign["uncons'"](Data_Function["const"](xs))(function (z) {
                    return function (zs) {
                        return difference(dictEq)($$delete(dictEq)(z)(xs))(zs);
                    };
                })(ys);
            };
            throw new Error("Failed pattern match at Data.Array line 572, column 1 - line 574, column 67: " + [ xs.constructor.name, ys.constructor.name ]);
        };
    };
};
var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
var mapMaybe = function (f) {
    return concatMap(function ($77) {
        return Data_Maybe.maybe([  ])(singleton)(f($77));
    });
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var $74 = f(x);
                if ($74 instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if ($74 instanceof Data_Maybe.Just) {
                    return updateAt(i)($74.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array line 376, column 10 - line 378, column 32: " + [ $74.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
module.exports = {
    alterAt: alterAt, 
    catMaybes: catMaybes, 
    concatMap: concatMap, 
    "delete": $$delete, 
    deleteAt: deleteAt, 
    deleteBy: deleteBy, 
    difference: difference, 
    dropWhile: dropWhile, 
    elemIndex: elemIndex, 
    elemLastIndex: elemLastIndex, 
    filterM: filterM, 
    findIndex: findIndex, 
    findLastIndex: findLastIndex, 
    foldM: foldM, 
    foldRecM: foldRecM, 
    fromFoldable: fromFoldable, 
    group: group, 
    "group'": group$prime, 
    groupBy: groupBy, 
    head: head, 
    index: index, 
    init: init, 
    insert: insert, 
    insertAt: insertAt, 
    insertBy: insertBy, 
    intersect: intersect, 
    intersectBy: intersectBy, 
    last: last, 
    many: many, 
    mapMaybe: mapMaybe, 
    mapWithIndex: mapWithIndex, 
    modifyAt: modifyAt, 
    nub: nub, 
    nubBy: nubBy, 
    "null": $$null, 
    singleton: singleton, 
    some: some, 
    sort: sort, 
    sortBy: sortBy, 
    span: span, 
    tail: tail, 
    takeWhile: takeWhile, 
    toUnfoldable: toUnfoldable, 
    uncons: uncons, 
    union: union, 
    unionBy: unionBy, 
    unsafeIndex: unsafeIndex, 
    unzip: unzip, 
    updateAt: updateAt, 
    zip: zip, 
    zipWithA: zipWithA, 
    concat: $foreign.concat, 
    cons: $foreign.cons, 
    drop: $foreign.drop, 
    filter: $foreign.filter, 
    length: $foreign.length, 
    partition: $foreign.partition, 
    range: $foreign.range, 
    replicate: $foreign.replicate, 
    reverse: $foreign.reverse, 
    slice: $foreign.slice, 
    snoc: $foreign.snoc, 
    take: $foreign.take, 
    zipWith: $foreign.zipWith
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Lazy":54,"../Control.Monad.Rec.Class":90,"../Control.Semigroupoid":104,"../Data.Boolean":132,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Maybe":192,"../Data.NonEmpty":203,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Traversable":227,"../Data.Tuple":229,"../Data.Unfoldable":231,"../Partial.Unsafe":263,"../Prelude":266,"./foreign":127}],129:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Apply = require("../Control.Apply");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Newtype = require("../Data.Newtype");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var Control_Category = require("../Control.Category");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Function = require("../Data.Function");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($18) {
                    return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($18));
                })(function ($19) {
                    return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(g($19));
                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
            };
        };
    };
};
var bifor_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldMapDefaultR = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldr(dictBifoldable)(function ($20) {
                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f($20));
                    })(function ($21) {
                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(g($21));
                    })(Data_Monoid.mempty(dictMonoid))(p);
                };
            };
        };
    };
};
var bifoldMapDefaultL = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldl(dictBifoldable)(function (m) {
                        return function (a) {
                            return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(m)(f(a));
                        };
                    })(function (m) {
                        return function (b) {
                            return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(m)(g(b));
                        };
                    })(Data_Monoid.mempty(dictMonoid))(p);
                };
            };
        };
    };
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifoldlDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($22) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($22)));
                    })(function ($23) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($23)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($24) {
                        return Data_Monoid_Endo.Endo(f($24));
                    })(function ($25) {
                        return Data_Monoid_Endo.Endo(g($25));
                    })(p))(z);
                };
            };
        };
    };
};
var bifold = function (dictBifoldable) {
    return function (dictMonoid) {
        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var biany = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($26) {
                    return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($27) {
                        return Data_Monoid_Disj.Disj(p($27));
                    })(function ($28) {
                        return Data_Monoid_Disj.Disj(q($28));
                    })($26));
                };
            };
        };
    };
};
var biall = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($29) {
                    return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($30) {
                        return Data_Monoid_Conj.Conj(p($30));
                    })(function ($31) {
                        return Data_Monoid_Conj.Conj(q($31));
                    })($29));
                };
            };
        };
    };
};
module.exports = {
    Bifoldable: Bifoldable, 
    biall: biall, 
    biany: biany, 
    bifold: bifold, 
    bifoldMap: bifoldMap, 
    bifoldMapDefaultL: bifoldMapDefaultL, 
    bifoldMapDefaultR: bifoldMapDefaultR, 
    bifoldl: bifoldl, 
    bifoldlDefault: bifoldlDefault, 
    bifoldr: bifoldr, 
    bifoldrDefault: bifoldrDefault, 
    bifor_: bifor_, 
    bisequence_: bisequence_, 
    bitraverse_: bitraverse_
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Category":48,"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Monoid":200,"../Data.Monoid.Conj":195,"../Data.Monoid.Disj":196,"../Data.Monoid.Dual":197,"../Data.Monoid.Endo":198,"../Data.Newtype":202,"../Data.Semigroup":216,"../Data.Unit":233,"../Prelude":266}],130:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Category = require("../Control.Category");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (dictBifunctor) {
    return function (f) {
        return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
    };
};
var rmap = function (dictBifunctor) {
    return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
};
module.exports = {
    Bifunctor: Bifunctor, 
    bimap: bimap, 
    lmap: lmap, 
    rmap: rmap
};

},{"../Control.Category":48}],131:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Control_Category = require("../Control.Category");
var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var bisequenceDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn))(t);
        };
    };
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bitraverseDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable, 
    bifor: bifor, 
    bisequence: bisequence, 
    bisequenceDefault: bisequenceDefault, 
    bitraverse: bitraverse, 
    bitraverseDefault: bitraverseDefault
};

},{"../Control.Category":48,"../Data.Bifoldable":129,"../Data.Bifunctor":130,"../Prelude":266}],132:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var otherwise = true;
module.exports = {
    otherwise: otherwise
};

},{}],133:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Unit = require("../Data.Unit");
var BooleanAlgebra = function (__superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0) {
    this["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"] = __superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0;
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
    BooleanAlgebra: BooleanAlgebra, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit
};

},{"../Data.HeytingAlgebra":177,"../Data.Unit":233}],134:[function(require,module,exports){
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

},{}],135:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Ord = require("../Data.Ord");
var Data_Unit = require("../Data.Unit");
var Data_Ordering = require("../Data.Ordering");
var Bounded = function (__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
    this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
    this.bottom = bottom;
    this.top = top;
};
var top = function (dict) {
    return dict.top;
};
var boundedUnit = new Bounded(function () {
    return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedOrdering = new Bounded(function () {
    return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedInt = new Bounded(function () {
    return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
    return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
    return Data_Ord.ordBoolean;
}, false, true);
var bottom = function (dict) {
    return dict.bottom;
};
module.exports = {
    Bounded: Bounded, 
    bottom: bottom, 
    top: top, 
    boundedBoolean: boundedBoolean, 
    boundedInt: boundedInt, 
    boundedChar: boundedChar, 
    boundedOrdering: boundedOrdering, 
    boundedUnit: boundedUnit
};

},{"../Data.Ord":209,"../Data.Ordering":210,"../Data.Unit":233,"./foreign":134}],136:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_CatQueue = require("../Data.CatQueue");
var Data_Foldable = require("../Data.Foldable");
var Data_List = require("../Data.List");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_List_Types = require("../Data.List.Types");
var CatNil = (function () {
    function CatNil() {

    };
    CatNil.value = new CatNil();
    return CatNil;
})();
var CatCons = (function () {
    function CatCons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatCons.create = function (value0) {
        return function (value1) {
            return new CatCons(value0, value1);
        };
    };
    return CatCons;
})();
var showCatList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof CatNil) {
            return "CatNil";
        };
        if (v instanceof CatCons) {
            return "(CatList " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + ")")));
        };
        throw new Error("Failed pattern match at Data.CatList line 154, column 3 - line 155, column 3: " + [ v.constructor.name ]);
    });
};
var $$null = function (v) {
    if (v instanceof CatNil) {
        return true;
    };
    return false;
};
var link = function (v) {
    return function (cat) {
        if (v instanceof CatNil) {
            return cat;
        };
        if (v instanceof CatCons) {
            return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(cat));
        };
        throw new Error("Failed pattern match at Data.CatList line 111, column 1 - line 111, column 22: " + [ v.constructor.name, cat.constructor.name ]);
    };
};
var foldr = function (k) {
    return function (b) {
        return function (q) {
            var foldl = function (__copy_v) {
                return function (__copy_c) {
                    return function (__copy_v1) {
                        var v = __copy_v;
                        var c = __copy_c;
                        var v1 = __copy_v1;
                        tco: while (true) {
                            if (v1 instanceof Data_List_Types.Nil) {
                                return c;
                            };
                            if (v1 instanceof Data_List_Types.Cons) {
                                var __tco_v = v;
                                var __tco_c = v(c)(v1.value0);
                                var __tco_v1 = v1.value1;
                                v = __tco_v;
                                c = __tco_c;
                                v1 = __tco_v1;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at Data.CatList line 126, column 3 - line 126, column 22: " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                        };
                    };
                };
            };
            var go = function (__copy_xs) {
                return function (__copy_ys) {
                    var xs = __copy_xs;
                    var ys = __copy_ys;
                    tco: while (true) {
                        var $33 = Data_CatQueue.uncons(xs);
                        if ($33 instanceof Data_Maybe.Nothing) {
                            return foldl(function (x) {
                                return function (i) {
                                    return i(x);
                                };
                            })(b)(ys);
                        };
                        if ($33 instanceof Data_Maybe.Just) {
                            var __tco_ys = new Data_List_Types.Cons(k($33.value0.value0), ys);
                            xs = $33.value0.value1;
                            ys = __tco_ys;
                            continue tco;
                        };
                        throw new Error("Failed pattern match at Data.CatList line 121, column 14 - line 123, column 67: " + [ $33.constructor.name ]);
                    };
                };
            };
            return go(q)(Data_List_Types.Nil.value);
        };
    };
};
var uncons = function (v) {
    if (v instanceof CatNil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof CatCons) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
            var $38 = Data_CatQueue["null"](v.value1);
            if ($38) {
                return CatNil.value;
            };
            if (!$38) {
                return foldr(link)(CatNil.value)(v.value1);
            };
            throw new Error("Failed pattern match at Data.CatList line 103, column 39 - line 103, column 89: " + [ $38.constructor.name ]);
        })()));
    };
    throw new Error("Failed pattern match at Data.CatList line 102, column 1 - line 102, column 24: " + [ v.constructor.name ]);
};
var foldMap = function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof CatNil) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof CatCons) {
                var d = (function () {
                    var $43 = Data_CatQueue["null"](v.value1);
                    if ($43) {
                        return CatNil.value;
                    };
                    if (!$43) {
                        return foldr(link)(CatNil.value)(v.value1);
                    };
                    throw new Error("Failed pattern match at Data.CatList line 144, column 11 - line 144, column 61: " + [ $43.constructor.name ]);
                })();
                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.value0))(foldMap(dictMonoid)(f)(d));
            };
            throw new Error("Failed pattern match at Data.CatList line 142, column 1 - line 142, column 26: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
};
var foldableCatList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (l) {
            return foldMap(dictMonoid)(f)(l);
        };
    };
}, function (f) {
    return function (s) {
        return function (l) {
            return Data_Foldable.foldlDefault(foldableCatList)(f)(s)(l);
        };
    };
}, function (f) {
    return function (s) {
        return function (l) {
            return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);
        };
    };
});
var empty = CatNil.value;
var append = function (v) {
    return function (v1) {
        if (v1 instanceof CatNil) {
            return v;
        };
        if (v instanceof CatNil) {
            return v1;
        };
        return link(v)(v1);
    };
};
var cons = function (a) {
    return function (cat) {
        return append(new CatCons(a, Data_CatQueue.empty))(cat);
    };
};
var map = function (v) {
    return function (v1) {
        if (v1 instanceof CatNil) {
            return CatNil.value;
        };
        if (v1 instanceof CatCons) {
            var d = (function () {
                var $50 = Data_CatQueue["null"](v1.value1);
                if ($50) {
                    return CatNil.value;
                };
                if (!$50) {
                    return foldr(link)(CatNil.value)(v1.value1);
                };
                throw new Error("Failed pattern match at Data.CatList line 138, column 11 - line 138, column 61: " + [ $50.constructor.name ]);
            })();
            return cons(v(v1.value0))(map(v)(d));
        };
        throw new Error("Failed pattern match at Data.CatList line 136, column 1 - line 136, column 22: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var functorCatList = new Data_Functor.Functor(map);
var singleton = function (a) {
    return cons(a)(CatNil.value);
};
var traversableCatList = new Data_Traversable.Traversable(function () {
    return foldableCatList;
}, function () {
    return functorCatList;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof CatNil) {
            return Control_Applicative.pure(dictApplicative)(CatNil.value);
        };
        if (v instanceof CatCons) {
            var d = (function () {
                var $54 = Data_CatQueue["null"](v.value1);
                if ($54) {
                    return CatNil.value;
                };
                if (!$54) {
                    return foldr(link)(CatNil.value)(v.value1);
                };
                throw new Error("Failed pattern match at Data.CatList line 176, column 13 - line 176, column 63: " + [ $54.constructor.name ]);
            })();
            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));
        };
        throw new Error("Failed pattern match at Data.CatList line 174, column 3 - line 174, column 32: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof CatNil) {
                return Control_Applicative.pure(dictApplicative)(CatNil.value);
            };
            if (v1 instanceof CatCons) {
                var d = (function () {
                    var $59 = Data_CatQueue["null"](v1.value1);
                    if ($59) {
                        return CatNil.value;
                    };
                    if (!$59) {
                        return foldr(link)(CatNil.value)(v1.value1);
                    };
                    throw new Error("Failed pattern match at Data.CatList line 172, column 13 - line 172, column 63: " + [ $59.constructor.name ]);
                })();
                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));
            };
            throw new Error("Failed pattern match at Data.CatList line 170, column 3 - line 170, column 34: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var semigroupCatList = new Data_Semigroup.Semigroup(append);
var monoidCatList = new Data_Monoid.Monoid(function () {
    return semigroupCatList;
}, CatNil.value);
var monadCatList = new Control_Monad.Monad(function () {
    return applicativeCatList;
}, function () {
    return bindCatList;
});
var bindCatList = new Control_Bind.Bind(function () {
    return applyCatList;
}, Data_Function.flip(foldMap(monoidCatList)));
var applyCatList = new Control_Apply.Apply(function () {
    return functorCatList;
}, Control_Monad.ap(monadCatList));
var applicativeCatList = new Control_Applicative.Applicative(function () {
    return applyCatList;
}, singleton);
var fromFoldable = function (dictFoldable) {
    return function (f) {
        return Data_Foldable.foldMap(dictFoldable)(monoidCatList)(singleton)(f);
    };
};
var snoc = function (cat) {
    return function (a) {
        return append(cat)(new CatCons(a, Data_CatQueue.empty));
    };
};
var unfoldableCatList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function (__copy_source) {
            return function (__copy_memo) {
                var source = __copy_source;
                var memo = __copy_memo;
                tco: while (true) {
                    var $62 = f(source);
                    if ($62 instanceof Data_Maybe.Nothing) {
                        return memo;
                    };
                    if ($62 instanceof Data_Maybe.Just) {
                        var __tco_memo = snoc(memo)($62.value0.value0);
                        source = $62.value0.value1;
                        memo = __tco_memo;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.CatList line 165, column 24 - line 167, column 57: " + [ $62.constructor.name ]);
                };
            };
        };
        return go(b)(CatNil.value);
    };
});
var altCatList = new Control_Alt.Alt(function () {
    return functorCatList;
}, append);
var plusCatList = new Control_Plus.Plus(function () {
    return altCatList;
}, empty);
var alternativeCatList = new Control_Alternative.Alternative(function () {
    return applicativeCatList;
}, function () {
    return plusCatList;
});
var monadZeroCatList = new Control_MonadZero.MonadZero(function () {
    return alternativeCatList;
}, function () {
    return monadCatList;
});
var monadPlusCatList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroCatList;
});
module.exports = {
    CatNil: CatNil, 
    CatCons: CatCons, 
    append: append, 
    cons: cons, 
    empty: empty, 
    fromFoldable: fromFoldable, 
    "null": $$null, 
    snoc: snoc, 
    uncons: uncons, 
    semigroupCatList: semigroupCatList, 
    monoidCatList: monoidCatList, 
    showCatList: showCatList, 
    foldableCatList: foldableCatList, 
    unfoldableCatList: unfoldableCatList, 
    traversableCatList: traversableCatList, 
    functorCatList: functorCatList, 
    applyCatList: applyCatList, 
    applicativeCatList: applicativeCatList, 
    bindCatList: bindCatList, 
    monadCatList: monadCatList, 
    altCatList: altCatList, 
    plusCatList: plusCatList, 
    alternativeCatList: alternativeCatList, 
    monadZeroCatList: monadZeroCatList, 
    monadPlusCatList: monadPlusCatList
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Monad":98,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Plus":103,"../Data.CatQueue":137,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.List":188,"../Data.List.Types":187,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.NaturalTransformation":201,"../Data.Semigroup":216,"../Data.Show":221,"../Data.Traversable":227,"../Data.Tuple":229,"../Data.Unfoldable":231}],137:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_List = require("../Data.List");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Tuple = require("../Data.Tuple");
var Data_List_Types = require("../Data.List.Types");
var CatQueue = (function () {
    function CatQueue(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatQueue.create = function (value0) {
        return function (value1) {
            return new CatQueue(value0, value1);
        };
    };
    return CatQueue;
})();
var uncons = function (__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
            return Data_Maybe.Nothing.value;
        };
        if (v.value0 instanceof Data_List_Types.Nil) {
            var __tco_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
            v = __tco_v;
            continue tco;
        };
        if (v.value0 instanceof Data_List_Types.Cons) {
            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
        };
        throw new Error("Failed pattern match at Data.CatQueue line 51, column 1 - line 51, column 36: " + [ v.constructor.name ]);
    };
};
var snoc = function (v) {
    return function (a) {
        return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
    };
};
var showCatQueue = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(CatQueue " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value0) + (" " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value1) + ")")));
    });
};
var $$null = function (v) {
    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
        return true;
    };
    return false;
};
var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
module.exports = {
    CatQueue: CatQueue, 
    empty: empty, 
    "null": $$null, 
    snoc: snoc, 
    uncons: uncons, 
    showCatQueue: showCatQueue
};

},{"../Data.List":188,"../Data.List.Types":187,"../Data.Maybe":192,"../Data.Semigroup":216,"../Data.Show":221,"../Data.Tuple":229}],138:[function(require,module,exports){
"use strict";

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],139:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
module.exports = {
    fromCharCode: $foreign.fromCharCode, 
    toCharCode: $foreign.toCharCode, 
    toLower: $foreign.toLower, 
    toUpper: $foreign.toUpper
};

},{"./foreign":138}],140:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var CommutativeRing = function (__superclass_Data$dotRing$dotRing_0) {
    this["__superclass_Data.Ring.Ring_0"] = __superclass_Data$dotRing$dotRing_0;
};
var commutativeRingUnit = new CommutativeRing(function () {
    return Data_Ring.ringUnit;
});
var commutativeRingNumber = new CommutativeRing(function () {
    return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
    return Data_Ring.ringInt;
});
module.exports = {
    CommutativeRing: CommutativeRing, 
    commutativeRingInt: commutativeRingInt, 
    commutativeRingNumber: commutativeRingNumber, 
    commutativeRingUnit: commutativeRingUnit
};

},{"../Data.Ring":214,"../Data.Semiring":218,"../Data.Unit":233}],141:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Traversable = require("../Data.Traversable");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Semiring = require("../Data.Semiring");
var Data_Ring = require("../Data.Ring");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Field = require("../Data.Field");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Applicative = require("../Control.Applicative");
var Const = function (x) {
    return x;
};
var showConst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Const " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConst = function (dictSemiring) {
    return dictSemiring;
};
var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return v1;
    };
});
var semigroupConst = function (dictSemigroup) {
    return dictSemigroup;
};
var ringConst = function (dictRing) {
    return dictRing;
};
var ordConst = function (dictOrd) {
    return dictOrd;
};
var newtypeConst = new Data_Newtype.Newtype(function (n) {
    return n;
}, Const);
var monoidConst = function (dictMonoid) {
    return dictMonoid;
};
var heytingAlgebraConst = function (dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorConst = new Data_Functor.Functor(function (v) {
    return function (v1) {
        return v1;
    };
});
var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
var foldableConst = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return Data_Monoid.mempty(dictMonoid);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            return z;
        };
    };
});
var traversableConst = new Data_Traversable.Traversable(function () {
    return foldableConst;
}, function () {
    return functorConst;
}, function (dictApplicative) {
    return function (v) {
        return Control_Applicative.pure(dictApplicative)(v);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return Control_Applicative.pure(dictApplicative)(v1);
        };
    };
});
var fieldConst = function (dictField) {
    return dictField;
};
var euclideanRingConst = function (dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqConst = function (dictEq) {
    return dictEq;
};
var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (v) {
    return function (v1) {
        return v1;
    };
});
var commutativeRingConst = function (dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedConst = function (dictBounded) {
    return dictBounded;
};
var booleanAlgebraConst = function (dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyConst = function (dictSemigroup) {
    return new Control_Apply.Apply(function () {
        return functorConst;
    }, function (v) {
        return function (v1) {
            return Data_Semigroup.append(dictSemigroup)(v)(v1);
        };
    });
};
var bindConst = function (dictSemigroup) {
    return new Control_Bind.Bind(function () {
        return applyConst(dictSemigroup);
    }, function (v) {
        return function (v1) {
            return v;
        };
    });
};
var applicativeConst = function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
        return applyConst(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
    }, function (v) {
        return Data_Monoid.mempty(dictMonoid);
    });
};
module.exports = {
    Const: Const, 
    newtypeConst: newtypeConst, 
    eqConst: eqConst, 
    ordConst: ordConst, 
    boundedConst: boundedConst, 
    showConst: showConst, 
    semigroupoidConst: semigroupoidConst, 
    semigroupConst: semigroupConst, 
    monoidConst: monoidConst, 
    semiringConst: semiringConst, 
    ringConst: ringConst, 
    euclideanRingConst: euclideanRingConst, 
    commutativeRingConst: commutativeRingConst, 
    fieldConst: fieldConst, 
    heytingAlgebraConst: heytingAlgebraConst, 
    booleanAlgebraConst: booleanAlgebraConst, 
    functorConst: functorConst, 
    invariantConst: invariantConst, 
    contravariantConst: contravariantConst, 
    applyConst: applyConst, 
    bindConst: bindConst, 
    applicativeConst: applicativeConst, 
    foldableConst: foldableConst, 
    traversableConst: traversableConst
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Semigroupoid":104,"../Data.BooleanAlgebra":133,"../Data.Bounded":135,"../Data.CommutativeRing":140,"../Data.Eq":147,"../Data.EuclideanRing":149,"../Data.Field":151,"../Data.Foldable":153,"../Data.Functor":173,"../Data.Functor.Contravariant":168,"../Data.Functor.Invariant":171,"../Data.HeytingAlgebra":177,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Data.Traversable":227,"../Prelude":266}],142:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Category = require("../Control.Category");
var Distributive = function (__superclass_Data$dotFunctor$dotFunctor_0, collect, distribute) {
    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function () {
    return Data_Identity.functorIdentity;
}, function (dictFunctor) {
    return function (f) {
        return function ($11) {
            return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
                return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(f($12));
            })($11));
        };
    };
}, function (dictFunctor) {
    return function ($13) {
        return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))($13));
    };
});
var distribute = function (dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function () {
    return Data_Functor.functorFn;
}, function (dictFunctor) {
    return function (f) {
        return function ($14) {
            return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
        };
    };
}, function (dictFunctor) {
    return function (a) {
        return function (e) {
            return Data_Functor.map(dictFunctor)(function (v) {
                return v(e);
            })(a);
        };
    };
});
var cotraverse = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($15) {
                return Data_Functor.map(dictDistributive["__superclass_Data.Functor.Functor_0"]())(f)(distribute(dictDistributive)(dictFunctor)($15));
            };
        };
    };
};
var collectDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($16) {
                return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
            };
        };
    };
};
var collect = function (dict) {
    return dict.collect;
};
var distributeDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return collect(dictDistributive)(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Distributive: Distributive, 
    collect: collect, 
    collectDefault: collectDefault, 
    cotraverse: cotraverse, 
    distribute: distribute, 
    distributeDefault: distributeDefault, 
    distributiveIdentity: distributiveIdentity, 
    distributiveFunction: distributiveFunction
};

},{"../Control.Category":48,"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Functor":173,"../Data.Identity":178,"../Data.Newtype":202,"../Prelude":266}],143:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_Either = require("../Data.Either");
var Data_Void = require("../Data.Void");
var in9 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))))));
};
var in8 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))));
};
var in7 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))));
};
var in6 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))));
};
var in5 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))));
};
var in4 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))));
};
var in3 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)));
};
var in2 = function (v) {
    return new Data_Either.Right(new Data_Either.Left(v));
};
var in10 = function (v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))))));
};
var in1 = Data_Either.Left.create;
var either9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (y) {
                                        if (y instanceof Data_Either.Left) {
                                            return a(y.value0);
                                        };
                                        if (y instanceof Data_Either.Right) {
                                            if (y.value0 instanceof Data_Either.Left) {
                                                return b(y.value0.value0);
                                            };
                                            if (y.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0 instanceof Data_Either.Left) {
                                                    return c(y.value0.value0.value0);
                                                };
                                                if (y.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return d(y.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return e(y.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return f(y.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Either.Nested line 245, column 29 - line 247, column 40: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Either.Nested line 243, column 27 - line 247, column 40: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Either.Nested line 241, column 25 - line 247, column 40: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Either.Nested line 239, column 23 - line 247, column 40: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested line 237, column 21 - line 247, column 40: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested line 235, column 19 - line 247, column 40: " + [ y.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 233, column 17 - line 247, column 40: " + [ y.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 231, column 15 - line 247, column 40: " + [ y.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 229, column 31 - line 247, column 40: " + [ y.constructor.name ]);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var either8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (y) {
                                    if (y instanceof Data_Either.Left) {
                                        return a(y.value0);
                                    };
                                    if (y instanceof Data_Either.Right) {
                                        if (y.value0 instanceof Data_Either.Left) {
                                            return b(y.value0.value0);
                                        };
                                        if (y.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0 instanceof Data_Either.Left) {
                                                return c(y.value0.value0.value0);
                                            };
                                            if (y.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return d(y.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return e(y.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return f(y.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Either.Nested line 224, column 27 - line 226, column 38: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Either.Nested line 222, column 25 - line 226, column 38: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested line 220, column 23 - line 226, column 38: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested line 218, column 21 - line 226, column 38: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 216, column 19 - line 226, column 38: " + [ y.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 214, column 17 - line 226, column 38: " + [ y.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 212, column 15 - line 226, column 38: " + [ y.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested line 210, column 29 - line 226, column 38: " + [ y.constructor.name ]);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var either7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (y) {
                                if (y instanceof Data_Either.Left) {
                                    return a(y.value0);
                                };
                                if (y instanceof Data_Either.Right) {
                                    if (y.value0 instanceof Data_Either.Left) {
                                        return b(y.value0.value0);
                                    };
                                    if (y.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0 instanceof Data_Either.Left) {
                                            return c(y.value0.value0.value0);
                                        };
                                        if (y.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                return d(y.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return e(y.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return f(y.value0.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested line 205, column 25 - line 207, column 36: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested line 203, column 23 - line 207, column 36: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 201, column 21 - line 207, column 36: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 199, column 19 - line 207, column 36: " + [ y.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 197, column 17 - line 207, column 36: " + [ y.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested line 195, column 15 - line 207, column 36: " + [ y.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested line 193, column 27 - line 207, column 36: " + [ y.constructor.name ]);
                            };
                        };
                    };
                };
            };
        };
    };
};
var either6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (y) {
                            if (y instanceof Data_Either.Left) {
                                return a(y.value0);
                            };
                            if (y instanceof Data_Either.Right) {
                                if (y.value0 instanceof Data_Either.Left) {
                                    return b(y.value0.value0);
                                };
                                if (y.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                        return c(y.value0.value0.value0);
                                    };
                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                            return d(y.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                return e(y.value0.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 188, column 23 - line 190, column 34: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 186, column 21 - line 190, column 34: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 184, column 19 - line 190, column 34: " + [ y.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested line 182, column 17 - line 190, column 34: " + [ y.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested line 180, column 15 - line 190, column 34: " + [ y.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Either.Nested line 178, column 25 - line 190, column 34: " + [ y.constructor.name ]);
                        };
                    };
                };
            };
        };
    };
};
var either5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (y) {
                        if (y instanceof Data_Either.Left) {
                            return a(y.value0);
                        };
                        if (y instanceof Data_Either.Right) {
                            if (y.value0 instanceof Data_Either.Left) {
                                return b(y.value0.value0);
                            };
                            if (y.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0 instanceof Data_Either.Left) {
                                    return c(y.value0.value0.value0);
                                };
                                if (y.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                        return d(y.value0.value0.value0.value0);
                                    };
                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                            return e(y.value0.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                            return Data_Void.absurd(y.value0.value0.value0.value0.value0);
                                        };
                                        throw new Error("Failed pattern match at Data.Either.Nested line 173, column 21 - line 175, column 32: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Either.Nested line 171, column 19 - line 175, column 32: " + [ y.value0.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested line 169, column 17 - line 175, column 32: " + [ y.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Either.Nested line 167, column 15 - line 175, column 32: " + [ y.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Either.Nested line 165, column 23 - line 175, column 32: " + [ y.constructor.name ]);
                    };
                };
            };
        };
    };
};
var either4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (y) {
                    if (y instanceof Data_Either.Left) {
                        return a(y.value0);
                    };
                    if (y instanceof Data_Either.Right) {
                        if (y.value0 instanceof Data_Either.Left) {
                            return b(y.value0.value0);
                        };
                        if (y.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0 instanceof Data_Either.Left) {
                                return c(y.value0.value0.value0);
                            };
                            if (y.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                    return d(y.value0.value0.value0.value0);
                                };
                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                    return Data_Void.absurd(y.value0.value0.value0.value0);
                                };
                                throw new Error("Failed pattern match at Data.Either.Nested line 160, column 19 - line 162, column 30: " + [ y.value0.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Either.Nested line 158, column 17 - line 162, column 30: " + [ y.value0.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Either.Nested line 156, column 15 - line 162, column 30: " + [ y.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Either.Nested line 154, column 21 - line 162, column 30: " + [ y.constructor.name ]);
                };
            };
        };
    };
};
var either3 = function (a) {
    return function (b) {
        return function (c) {
            return function (y) {
                if (y instanceof Data_Either.Left) {
                    return a(y.value0);
                };
                if (y instanceof Data_Either.Right) {
                    if (y.value0 instanceof Data_Either.Left) {
                        return b(y.value0.value0);
                    };
                    if (y.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0 instanceof Data_Either.Left) {
                            return c(y.value0.value0.value0);
                        };
                        if (y.value0.value0 instanceof Data_Either.Right) {
                            return Data_Void.absurd(y.value0.value0.value0);
                        };
                        throw new Error("Failed pattern match at Data.Either.Nested line 149, column 17 - line 151, column 28: " + [ y.value0.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Either.Nested line 147, column 15 - line 151, column 28: " + [ y.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Either.Nested line 145, column 19 - line 151, column 28: " + [ y.constructor.name ]);
            };
        };
    };
};
var either2 = function (a) {
    return function (b) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return a(y.value0);
            };
            if (y instanceof Data_Either.Right) {
                if (y.value0 instanceof Data_Either.Left) {
                    return b(y.value0.value0);
                };
                if (y.value0 instanceof Data_Either.Right) {
                    return Data_Void.absurd(y.value0.value0);
                };
                throw new Error("Failed pattern match at Data.Either.Nested line 140, column 15 - line 142, column 26: " + [ y.value0.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Either.Nested line 138, column 17 - line 142, column 26: " + [ y.constructor.name ]);
        };
    };
};
var either10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return function (y) {
                                            if (y instanceof Data_Either.Left) {
                                                return a(y.value0);
                                            };
                                            if (y instanceof Data_Either.Right) {
                                                if (y.value0 instanceof Data_Either.Left) {
                                                    return b(y.value0.value0);
                                                };
                                                if (y.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                                        return c(y.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return d(y.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return e(y.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                            };
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                    return j(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                                };
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                    return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                                };
                                                                                throw new Error("Failed pattern match at Data.Either.Nested line 268, column 31 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                            };
                                                                            throw new Error("Failed pattern match at Data.Either.Nested line 266, column 29 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Either.Nested line 264, column 27 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Either.Nested line 262, column 25 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Either.Nested line 260, column 23 - line 270, column 41: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Either.Nested line 258, column 21 - line 270, column 41: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Either.Nested line 256, column 19 - line 270, column 41: " + [ y.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Either.Nested line 254, column 17 - line 270, column 41: " + [ y.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Either.Nested line 252, column 15 - line 270, column 41: " + [ y.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Either.Nested line 250, column 34 - line 270, column 41: " + [ y.constructor.name ]);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var either1 = function (y) {
    if (y instanceof Data_Either.Left) {
        return y.value0;
    };
    if (y instanceof Data_Either.Right) {
        return Data_Void.absurd(y.value0);
    };
    throw new Error("Failed pattern match at Data.Either.Nested line 133, column 13 - line 135, column 24: " + [ y.constructor.name ]);
};
var at9 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at8 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at7 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at6 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))) {
                return f(y.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at5 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left)))) {
                return f(y.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at4 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left))) {
                return f(y.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at3 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                return f(y.value0.value0.value0);
            };
            return b;
        };
    };
};
var at2 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                return f(y.value0.value0);
            };
            return b;
        };
    };
};
var at10 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at1 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return f(y.value0);
            };
            return b;
        };
    };
};
module.exports = {
    at1: at1, 
    at10: at10, 
    at2: at2, 
    at3: at3, 
    at4: at4, 
    at5: at5, 
    at6: at6, 
    at7: at7, 
    at8: at8, 
    at9: at9, 
    either1: either1, 
    either10: either10, 
    either2: either2, 
    either3: either3, 
    either4: either4, 
    either5: either5, 
    either6: either6, 
    either7: either7, 
    either8: either8, 
    either9: either9, 
    in1: in1, 
    in10: in10, 
    in2: in2, 
    in3: in3, 
    in4: in4, 
    in5: in5, 
    in6: in6, 
    in7: in7, 
    in8: in8, 
    in9: in9
};

},{"../Data.Either":144,"../Data.Void":234}],144:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Extend = require("../Control.Extend");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Traversable = require("../Data.Traversable");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Bounded = require("../Data.Bounded");
var Data_Semiring = require("../Data.Semiring");
var Data_Function = require("../Data.Function");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Left) {
                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Right) {
                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either line 159, column 3 - line 160, column 3: " + [ v.constructor.name ]);
        });
    };
};
var functorEither = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        if (v1 instanceof Right) {
            return new Right(v(v1.value0));
        };
        throw new Error("Failed pattern match at Data.Either line 35, column 3 - line 35, column 26: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
var fromRight = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar60) {
                return $dollar60;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Right) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 243, column 1 - line 243, column 23: " + [ v.constructor.name ]);
        })());
    };
};
var fromLeft = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar64) {
                return $dollar64;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Left) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 238, column 1 - line 238, column 22: " + [ v.constructor.name ]);
        })());
    };
};
var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 183, column 3 - line 183, column 31: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 181, column 3 - line 181, column 26: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either line 179, column 3 - line 179, column 26: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 197, column 3 - line 197, column 36: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 195, column 3 - line 195, column 39: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        return new Right(v(v1));
    };
});
var eqEither = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqEither(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
        }, function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                };
                if (x instanceof Left) {
                    return Data_Ordering.LT.value;
                };
                if (y instanceof Left) {
                    return Data_Ordering.GT.value;
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 172, column 1 - line 172, column 64: " + [ x.constructor.name, y.constructor.name ]);
            };
        });
    };
};
var either = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 224, column 1 - line 224, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
var boundedEither = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordEither(dictBounded["__superclass_Data.Ord.Ord_0"]())(dictBounded1["__superclass_Data.Ord.Ord_0"]());
        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return new Left(v(v2.value0));
            };
            if (v2 instanceof Right) {
                return new Right(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 42, column 3 - line 42, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 191, column 3 - line 191, column 31: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(z)(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(z)(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 189, column 3 - line 189, column 33: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0)(z);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either line 187, column 3 - line 187, column 33: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Left.create)(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 203, column 3 - line 203, column 35: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Left.create)(v(v2.value0));
                };
                if (v2 instanceof Right) {
                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v1(v2.value0));
                };
                throw new Error("Failed pattern match at Data.Either line 201, column 3 - line 201, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var applyEither = new Control_Apply.Apply(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map(functorEither)(v.value0)(v1);
        };
        throw new Error("Failed pattern match at Data.Either line 78, column 3 - line 78, column 28: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindEither = new Control_Bind.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (v) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
        };
    });
};
var semiringEither = function (dictSemiring) {
    return new Data_Semiring.Semiring(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.mul(dictSemiring))(x))(y);
        };
    }, new Right(Data_Semiring.one(dictSemiring)), new Right(Data_Semiring.zero(dictSemiring)));
};
var applicativeEither = new Control_Applicative.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return v1;
        };
        return v;
    };
});
module.exports = {
    Left: Left, 
    Right: Right, 
    either: either, 
    fromLeft: fromLeft, 
    fromRight: fromRight, 
    isLeft: isLeft, 
    isRight: isRight, 
    functorEither: functorEither, 
    invariantEither: invariantEither, 
    bifunctorEither: bifunctorEither, 
    applyEither: applyEither, 
    applicativeEither: applicativeEither, 
    altEither: altEither, 
    bindEither: bindEither, 
    monadEither: monadEither, 
    extendEither: extendEither, 
    showEither: showEither, 
    eqEither: eqEither, 
    ordEither: ordEither, 
    boundedEither: boundedEither, 
    foldableEither: foldableEither, 
    bifoldableEither: bifoldableEither, 
    traversableEither: traversableEither, 
    bitraversableEither: bitraversableEither, 
    semiringEither: semiringEither, 
    semigroupEither: semigroupEither
};

},{"../Control.Alt":38,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Extend":53,"../Control.Monad":98,"../Data.Bifoldable":129,"../Data.Bifunctor":130,"../Data.Bitraversable":131,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.Monoid":200,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Data.Traversable":227,"../Prelude":266}],145:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_MonadPlus = require("../Control.MonadPlus");
var Data_Char = require("../Data.Char");
var Data_Either = require("../Data.Either");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Semiring = require("../Data.Semiring");
var Data_Ring = require("../Data.Ring");
var Data_Function = require("../Data.Function");
var Data_Ordering = require("../Data.Ordering");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Category = require("../Control.Category");
var Data_Unit = require("../Data.Unit");
var Control_Applicative = require("../Control.Applicative");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Boolean = require("../Data.Boolean");
var Control_Apply = require("../Control.Apply");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Control_Bind = require("../Control.Bind");
var Control_MonadZero = require("../Control.MonadZero");
var Cardinality = function (x) {
    return x;
};
var Enum = function (__superclass_Data$dotOrd$dotOrd_0, pred, succ) {
    this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
    this.pred = pred;
    this.succ = succ;
};
var BoundedEnum = function (__superclass_Data$dotBounded$dotBounded_0, __superclass_Data$dotEnum$dotEnum_1, cardinality, fromEnum, toEnum) {
    this["__superclass_Data.Bounded.Bounded_0"] = __superclass_Data$dotBounded$dotBounded_0;
    this["__superclass_Data.Enum.Enum_1"] = __superclass_Data$dotEnum$dotEnum_1;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.toEnum = toEnum;
};
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var pred = function (dict) {
    return dict.pred;
};
var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = new Data_Newtype.Newtype(function (n) {
    return n;
}, Cardinality);
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                var $51 = e <= to;
                if ($51) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step | 0));
                };
                if (!$51) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.Enum line 124, column 13 - line 126, column 25: " + [ $51.constructor.name ]);
            })(from);
        };
    };
};
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var toEnumWithDefaults = function (dictBoundedEnum) {
    return function (b) {
        return function (t) {
            return function (x) {
                var $52 = toEnum(dictBoundedEnum)(x);
                if ($52 instanceof Data_Maybe.Just) {
                    return $52.value0;
                };
                if ($52 instanceof Data_Maybe.Nothing) {
                    var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]()));
                    if ($54) {
                        return b;
                    };
                    if (!$54) {
                        return t;
                    };
                    throw new Error("Failed pattern match at Data.Enum line 258, column 14 - line 258, column 56: " + [ $54.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Enum line 256, column 28 - line 258, column 56: " + [ $52.constructor.name ]);
            };
        };
    };
};
var eqCardinality = Data_Eq.eqInt;
var enumUnit = new Enum(function () {
    return Data_Ord.ordUnit;
}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));
var enumTuple = function (dictEnum) {
    return function (dictBoundedEnum) {
        return new Enum(function () {
            return Data_Tuple.ordTuple(dictEnum["__superclass_Data.Ord.Ord_0"]())((dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())["__superclass_Data.Ord.Ord_0"]());
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())))(pred(dictEnum)(v.value0)))(function ($98) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($98));
            })(pred(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value1));
        }, function (v) {
            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())))(succ(dictEnum)(v.value0)))(function ($99) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($99));
            })(succ(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value1));
        });
    };
};
var enumOrdering = new Enum(function () {
    return Data_Ord.ordOrdering;
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    throw new Error("Failed pattern match at Data.Enum line 74, column 3 - line 74, column 20: " + [ v.constructor.name ]);
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v instanceof Data_Ordering.EQ) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    if (v instanceof Data_Ordering.GT) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Enum line 71, column 3 - line 71, column 20: " + [ v.constructor.name ]);
});
var enumMaybe = function (dictBoundedEnum) {
    return new Enum(function () {
        return Data_Maybe.ordMaybe((dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())["__superclass_Data.Ord.Ord_0"]());
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Maybe.Just.create(pred(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 81, column 3 - line 81, column 25: " + [ v.constructor.name ]);
    }, function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())));
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 79, column 3 - line 79, column 36: " + [ v.constructor.name ]);
    });
};
var enumInt = new Enum(function () {
    return Data_Ord.ordInt;
}, function (n) {
    var $67 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);
    if ($67) {
        return new Data_Maybe.Just(n - 1);
    };
    if (!$67) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Enum line 56, column 12 - line 56, column 56: " + [ $67.constructor.name ]);
}, function (n) {
    var $68 = n < Data_Bounded.top(Data_Bounded.boundedInt);
    if ($68) {
        return new Data_Maybe.Just(n + 1 | 0);
    };
    if (!$68) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Enum line 55, column 12 - line 55, column 53: " + [ $68.constructor.name ]);
});
var enumFromTo = function (dictEnum) {
    return function (dictUnfoldable) {
        return function (from) {
            return function (to) {
                var go = function (mx) {
                    return Control_Bind.bind(Data_Maybe.bindMaybe)(mx)(function (v) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Ord.lessThanOrEq(dictEnum["__superclass_Data.Ord.Ord_0"]())(v)(to)))(function () {
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(v, succ(dictEnum)(v)));
                        });
                    });
                };
                return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_Maybe.Just(from));
            };
        };
    };
};
var enumFromThenTo = function (dictBoundedEnum) {
    return Partial_Unsafe.unsafePartial(function (dictPartial) {
        return function (a) {
            return function (b) {
                return function (c) {
                    var c$prime = fromEnum(dictBoundedEnum)(c);
                    var b$prime = fromEnum(dictBoundedEnum)(b);
                    var a$prime = fromEnum(dictBoundedEnum)(a);
                    return Data_Functor.map(Data_Functor.functorArray)(function ($100) {
                        return Data_Maybe.fromJust(dictPartial)(toEnum(dictBoundedEnum)($100));
                    })(intStepFromTo(b$prime - a$prime)(a$prime)(c$prime));
                };
            };
        };
    });
};
var enumEither = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new Enum(function () {
            return Data_Either.ordEither((dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())["__superclass_Data.Ord.Ord_0"]())((dictBoundedEnum1["__superclass_Data.Enum.Enum_1"]())["__superclass_Data.Ord.Ord_0"]());
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($101) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($101));
                })(pred(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]()))))(function ($102) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($102));
                })(pred(dictBoundedEnum1["__superclass_Data.Enum.Enum_1"]())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 87, column 3 - line 87, column 59: " + [ v.constructor.name ]);
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1["__superclass_Data.Bounded.Bounded_0"]()))))(function ($103) {
                    return Data_Maybe.Just.create(Data_Either.Left.create($103));
                })(succ(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($104) {
                    return Data_Maybe.Just.create(Data_Either.Right.create($104));
                })(succ(dictBoundedEnum1["__superclass_Data.Enum.Enum_1"]())(v.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 85, column 3 - line 85, column 71: " + [ v.constructor.name ]);
        });
    };
};
var enumBoolean = new Enum(function () {
    return Data_Ord.ordBoolean;
}, function (v) {
    if (v) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    if (!v) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
var diag = function (a) {
    return new Data_Tuple.Tuple(a, a);
};
var downFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($105) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(pred(dictEnum)($105));
        });
    };
};
var upFrom = function (dictEnum) {
    return function (dictUnfoldable) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($106) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($106));
        });
    };
};
var defaultToEnum = function (dictBounded) {
    return function (dictEnum) {
        return function (n) {
            if (n < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (n === 0) {
                return new Data_Maybe.Just(Data_Bounded.bottom(dictBounded));
            };
            if (Data_Boolean.otherwise) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)(defaultToEnum(dictBounded)(dictEnum)(n - 1))(succ(dictEnum));
            };
            throw new Error("Failed pattern match at Data.Enum line 236, column 1 - line 239, column 47: " + [ n.constructor.name ]);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) - 1);
        };
    };
};
var defaultFromEnum = function (dictEnum) {
    return function ($107) {
        return Data_Maybe.maybe(0)(function (prd) {
            return defaultFromEnum(dictEnum)(prd) + 1 | 0;
        })(pred(dictEnum)($107));
    };
};
var defaultCardinality = function (dictBounded) {
    return function (dictEnum) {
        var defaultCardinality$prime = function (i) {
            return function ($108) {
                return Data_Maybe.maybe(i)(defaultCardinality$prime(i + 1 | 0))(succ(dictEnum)($108));
            };
        };
        return Cardinality(defaultCardinality$prime(1)(Data_Bounded.bottom(dictBounded)));
    };
};
var charToEnum = function (v) {
    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(v));
    };
    return Data_Maybe.Nothing.value;
};
var enumChar = new Enum(function () {
    return Data_Ord.ordChar;
}, defaultPred(charToEnum)(Data_Char.toCharCode), defaultSucc(charToEnum)(Data_Char.toCharCode));
var cardinality = function (dict) {
    return dict.cardinality;
};
var boundedEnumUnit = new BoundedEnum(function () {
    return Data_Bounded.boundedUnit;
}, function () {
    return enumUnit;
}, 1, Data_Function["const"](0), function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Unit.unit);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumTuple = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new BoundedEnum(function () {
            return Data_Tuple.boundedTuple(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())(dictBoundedEnum1["__superclass_Data.Bounded.Bounded_0"]());
        }, function () {
            return enumTuple(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(dictBoundedEnum1);
        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) * Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), (function () {
            var from = function (v) {
                return function (v1) {
                    return (fromEnum(dictBoundedEnum)(v1.value0) * v | 0) + fromEnum(dictBoundedEnum1)(v1.value1) | 0;
                };
            };
            return from(cardinality(dictBoundedEnum1));
        })(), (function () {
            var to = function (v) {
                return function (n) {
                    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(dictBoundedEnum)(n / v | 0)))(toEnum(dictBoundedEnum1)(n % v));
                };
            };
            return to(cardinality(dictBoundedEnum1));
        })());
    };
};
var boundedEnumOrdering = new BoundedEnum(function () {
    return Data_Bounded.boundedOrdering;
}, function () {
    return enumOrdering;
}, 3, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return 0;
    };
    if (v instanceof Data_Ordering.EQ) {
        return 1;
    };
    if (v instanceof Data_Ordering.GT) {
        return 2;
    };
    throw new Error("Failed pattern match at Data.Enum line 190, column 3 - line 191, column 3: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    return Data_Maybe.Nothing.value;
});
var boundedEnumMaybe = function (dictBoundedEnum) {
    return new BoundedEnum(function () {
        return Data_Maybe.boundedMaybe(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]());
    }, function () {
        return enumMaybe(dictBoundedEnum);
    }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + 1 | 0), function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return 0;
        };
        if (v instanceof Data_Maybe.Just) {
            return fromEnum(dictBoundedEnum)(v.value0) + 1 | 0;
        };
        throw new Error("Failed pattern match at Data.Enum line 198, column 3 - line 199, column 3: " + [ v.constructor.name ]);
    }, function (v) {
        if (v === 0) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
        };
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(toEnum(dictBoundedEnum)(v - 1));
    });
};
var boundedEnumInt = new BoundedEnum(function () {
    return Data_Bounded.boundedInt;
}, function () {
    return enumInt;
}, Data_Bounded.top(Data_Bounded.boundedInt) - Data_Bounded.bottom(Data_Bounded.boundedInt), Control_Category.id(Control_Category.categoryFn), Data_Maybe.Just.create);
var boundedEnumEither = function (dictBoundedEnum) {
    return function (dictBoundedEnum1) {
        return new BoundedEnum(function () {
            return Data_Either.boundedEither(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())(dictBoundedEnum1["__superclass_Data.Bounded.Bounded_0"]());
        }, function () {
            return enumEither(dictBoundedEnum)(dictBoundedEnum1);
        }, Cardinality(Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum1)) | 0), function (v) {
            if (v instanceof Data_Either.Left) {
                return fromEnum(dictBoundedEnum)(v.value0);
            };
            if (v instanceof Data_Either.Right) {
                return fromEnum(dictBoundedEnum1)(v.value0) + Data_Newtype.unwrap(newtypeCardinality)(cardinality(dictBoundedEnum)) | 0;
            };
            throw new Error("Failed pattern match at Data.Enum line 212, column 3 - line 212, column 33: " + [ v.constructor.name ]);
        }, function (n) {
            var to = function (v) {
                if (n >= 0 && n < v) {
                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(dictBoundedEnum)(n));
                };
                if (Data_Boolean.otherwise) {
                    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(dictBoundedEnum1)(n - v));
                };
                throw new Error("Failed pattern match at Data.Enum line 209, column 5 - line 211, column 46: " + [ v.constructor.name ]);
            };
            return to(cardinality(dictBoundedEnum));
        });
    };
};
var boundedEnumChar = new BoundedEnum(function () {
    return Data_Bounded.boundedChar;
}, function () {
    return enumChar;
}, Data_Char.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - Data_Char.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)), Data_Char.toCharCode, charToEnum);
var boundedEnumBoolean = new BoundedEnum(function () {
    return Data_Bounded.boundedBoolean;
}, function () {
    return enumBoolean;
}, 2, function (v) {
    if (!v) {
        return 0;
    };
    if (v) {
        return 1;
    };
    throw new Error("Failed pattern match at Data.Enum line 165, column 3 - line 166, column 3: " + [ v.constructor.name ]);
}, function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(false);
    };
    if (v === 1) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
});
module.exports = {
    Cardinality: Cardinality, 
    BoundedEnum: BoundedEnum, 
    Enum: Enum, 
    cardinality: cardinality, 
    defaultCardinality: defaultCardinality, 
    defaultFromEnum: defaultFromEnum, 
    defaultPred: defaultPred, 
    defaultSucc: defaultSucc, 
    defaultToEnum: defaultToEnum, 
    downFrom: downFrom, 
    enumFromThenTo: enumFromThenTo, 
    enumFromTo: enumFromTo, 
    fromEnum: fromEnum, 
    pred: pred, 
    succ: succ, 
    toEnum: toEnum, 
    toEnumWithDefaults: toEnumWithDefaults, 
    upFrom: upFrom, 
    newtypeCardinality: newtypeCardinality, 
    eqCardinality: eqCardinality, 
    ordCardinality: ordCardinality, 
    enumBoolean: enumBoolean, 
    enumInt: enumInt, 
    enumChar: enumChar, 
    enumUnit: enumUnit, 
    enumOrdering: enumOrdering, 
    enumMaybe: enumMaybe, 
    enumEither: enumEither, 
    enumTuple: enumTuple, 
    boundedEnumBoolean: boundedEnumBoolean, 
    boundedEnumInt: boundedEnumInt, 
    boundedEnumChar: boundedEnumChar, 
    boundedEnumUnit: boundedEnumUnit, 
    boundedEnumOrdering: boundedEnumOrdering, 
    boundedEnumMaybe: boundedEnumMaybe, 
    boundedEnumEither: boundedEnumEither, 
    boundedEnumTuple: boundedEnumTuple
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Semigroupoid":104,"../Data.Boolean":132,"../Data.Bounded":135,"../Data.Char":139,"../Data.Either":144,"../Data.Eq":147,"../Data.EuclideanRing":149,"../Data.Function":166,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Maybe":192,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Ring":214,"../Data.Semiring":218,"../Data.Tuple":229,"../Data.Unfoldable":231,"../Data.Unit":233,"../Partial.Unsafe":263,"../Prelude":266}],146:[function(require,module,exports){
"use strict";

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

},{}],147:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Eq = function (eq) {
    this.eq = eq;
};
var eqVoid = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqString = new Eq($foreign.refEq);
var eqNumber = new Eq($foreign.refEq);
var eqInt = new Eq($foreign.refEq);
var eqChar = new Eq($foreign.refEq);
var eqBoolean = new Eq($foreign.refEq);
var eq = function (dict) {
    return dict.eq;
};
var eqArray = function (dictEq) {
    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};
var notEq = function (dictEq) {
    return function (x) {
        return function (y) {
            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
        };
    };
};
module.exports = {
    Eq: Eq, 
    eq: eq, 
    notEq: notEq, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqVoid: eqVoid, 
    eqArray: eqArray
};

},{"../Data.Unit":233,"../Data.Void":234,"./foreign":146}],148:[function(require,module,exports){
"use strict";

exports.intDegree = function (x) {
  return Math.abs(x);
};

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

},{}],149:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var EuclideanRing = function (__superclass_Data$dotCommutativeRing$dotCommutativeRing_0, degree, div, mod) {
    this["__superclass_Data.CommutativeRing.CommutativeRing_0"] = __superclass_Data$dotCommutativeRing$dotCommutativeRing_0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
};
var mod = function (dict) {
    return dict.mod;
};
var euclideanRingUnit = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingUnit;
}, function (v) {
    return 1;
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var euclideanRingNumber = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
    return 1;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var euclideanRingInt = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
var div = function (dict) {
    return dict.div;
};
var degree = function (dict) {
    return dict.degree;
};
module.exports = {
    EuclideanRing: EuclideanRing, 
    degree: degree, 
    div: div, 
    mod: mod, 
    euclideanRingInt: euclideanRingInt, 
    euclideanRingNumber: euclideanRingNumber, 
    euclideanRingUnit: euclideanRingUnit
};

},{"../Data.CommutativeRing":140,"../Data.Ring":214,"../Data.Semiring":218,"../Data.Unit":233,"./foreign":148}],150:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Unsafe_Coerce = require("../Unsafe.Coerce");
var runExists = Unsafe_Coerce.unsafeCoerce;
var mkExists = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    mkExists: mkExists, 
    runExists: runExists
};

},{"../Unsafe.Coerce":269}],151:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Field = function (__superclass_Data$dotEuclideanRing$dotEuclideanRing_0) {
    this["__superclass_Data.EuclideanRing.EuclideanRing_0"] = __superclass_Data$dotEuclideanRing$dotEuclideanRing_0;
};
var fieldUnit = new Field(function () {
    return Data_EuclideanRing.euclideanRingUnit;
});
var fieldNumber = new Field(function () {
    return Data_EuclideanRing.euclideanRingNumber;
});
module.exports = {
    Field: Field, 
    fieldNumber: fieldNumber, 
    fieldUnit: fieldUnit
};

},{"../Data.CommutativeRing":140,"../Data.EuclideanRing":149,"../Data.Ring":214,"../Data.Semiring":218,"../Data.Unit":233}],152:[function(require,module,exports){
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],153:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Plus = require("../Control.Plus");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Control_Alt = require("../Control.Alt");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var Data_Function = require("../Data.Function");
var Control_Category = require("../Control.Category");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Eq = require("../Data.Eq");
var Data_Ordering = require("../Data.Ordering");
var Data_Ord = require("../Data.Ord");
var Data_Semiring = require("../Data.Semiring");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var oneOf = function (dictFoldable) {
    return function (dictPlus) {
        return foldr(dictFoldable)(Control_Alt.alt(dictPlus["__superclass_Control.Alt.Alt_0"]()))(Control_Plus.empty(dictPlus));
    };
};
var traverse_ = function (dictApplicative) {
    return function (dictFoldable) {
        return function (f) {
            return foldr(dictFoldable)(function ($169) {
                return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($169));
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var for_ = function (dictApplicative) {
    return function (dictFoldable) {
        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function (dictApplicative) {
    return function (dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (dictFoldable) {
    return function (dictMonoid) {
        return function (sep) {
            return function (xs) {
                var go = function (v) {
                    return function (x) {
                        if (v.init) {
                            return {
                                init: false, 
                                acc: x
                            };
                        };
                        return {
                            init: false, 
                            acc: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.acc)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(sep)(x))
                        };
                    };
                };
                return (foldl(dictFoldable)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs)).acc;
            };
        };
    };
};
var maximumBy = function (dictFoldable) {
    return function (cmp) {
        var max$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $92 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                        if ($92) {
                            return v.value0;
                        };
                        if (!$92) {
                            return v1;
                        };
                        throw new Error("Failed pattern match at Data.Foldable line 291, column 27 - line 291, column 57: " + [ $92.constructor.name ]);
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 290, column 3 - line 290, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function (dictOrd) {
    return function (dictFoldable) {
        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var minimumBy = function (dictFoldable) {
    return function (cmp) {
        var min$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $96 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
                        if ($96) {
                            return v.value0;
                        };
                        if (!$96) {
                            return v1;
                        };
                        throw new Error("Failed pattern match at Data.Foldable line 304, column 27 - line 304, column 57: " + [ $96.constructor.name ]);
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 303, column 3 - line 303, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function (dictOrd) {
    return function (dictFoldable) {
        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var product = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
    };
};
var sum = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
    };
};
var foldableMultiplicative = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Data_Maybe.Just) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 126, column 3 - line 126, column 30: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 124, column 3 - line 124, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 122, column 3 - line 122, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableConj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (xs) {
                return foldr(dictFoldable)(function (x) {
                    return function (acc) {
                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(dictMonoid))(xs);
            };
        };
    };
};
var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (xs) {
                return foldl(dictFoldable)(function (acc) {
                    return function (x) {
                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(dictMonoid))(xs);
            };
        };
    };
};
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldlDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($170) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($170)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($171) {
                    return Data_Monoid_Endo.Endo(c($171));
                })(xs))(u);
            };
        };
    };
};
var fold = function (dictFoldable) {
    return function (dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
    };
};
var findMap = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return p(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var find = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing && p(v1)) {
                    return new Data_Maybe.Just(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var any = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return function (p) {
            return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)))(p);
        };
    };
};
var elem = function (dictFoldable) {
    return function (dictEq) {
        return function ($172) {
            return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($172));
        };
    };
};
var notElem = function (dictFoldable) {
    return function (dictEq) {
        return function (x) {
            return function ($173) {
                return !elem(dictFoldable)(dictEq)(x)($173);
            };
        };
    };
};
var or = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
var all = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return function (p) {
            return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)))(p);
        };
    };
};
var and = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable, 
    all: all, 
    and: and, 
    any: any, 
    elem: elem, 
    find: find, 
    findMap: findMap, 
    fold: fold, 
    foldMap: foldMap, 
    foldMapDefaultL: foldMapDefaultL, 
    foldMapDefaultR: foldMapDefaultR, 
    foldl: foldl, 
    foldlDefault: foldlDefault, 
    foldr: foldr, 
    foldrDefault: foldrDefault, 
    for_: for_, 
    intercalate: intercalate, 
    maximum: maximum, 
    maximumBy: maximumBy, 
    minimum: minimum, 
    minimumBy: minimumBy, 
    notElem: notElem, 
    oneOf: oneOf, 
    or: or, 
    product: product, 
    sequence_: sequence_, 
    sum: sum, 
    traverse_: traverse_, 
    foldableArray: foldableArray, 
    foldableMaybe: foldableMaybe, 
    foldableFirst: foldableFirst, 
    foldableLast: foldableLast, 
    foldableAdditive: foldableAdditive, 
    foldableDual: foldableDual, 
    foldableDisj: foldableDisj, 
    foldableConj: foldableConj, 
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Alt":38,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Category":48,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Eq":147,"../Data.Function":166,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Maybe":192,"../Data.Maybe.First":190,"../Data.Maybe.Last":191,"../Data.Monoid":200,"../Data.Monoid.Additive":194,"../Data.Monoid.Conj":195,"../Data.Monoid.Disj":196,"../Data.Monoid.Dual":197,"../Data.Monoid.Endo":198,"../Data.Monoid.Multiplicative":199,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Unit":233,"../Prelude":266,"./foreign":152}],154:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Monad_Except = require("../Control.Monad.Except");
var Data_Array = require("../Data.Array");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Index = require("../Data.Foreign.Index");
var Data_Foreign_Null = require("../Data.Foreign.Null");
var Data_Foreign_NullOrUndefined = require("../Data.Foreign.NullOrUndefined");
var Data_Foreign_Undefined = require("../Data.Foreign.Undefined");
var Data_Maybe = require("../Data.Maybe");
var Data_Traversable = require("../Data.Traversable");
var Control_Applicative = require("../Control.Applicative");
var Data_Functor = require("../Data.Functor");
var Data_Semiring = require("../Data.Semiring");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_List_Types = require("../Data.List.Types");
var Data_Identity = require("../Data.Identity");
var IsForeign = function (read) {
    this.read = read;
};
var AsForeign = function (write) {
    this.write = write;
};
var write = function (dict) {
    return dict.write;
};
var writeProp = function (dictAsForeign) {
    return function (k) {
        return function (v) {
            return {
                key: k, 
                value: write(dictAsForeign)(v)
            };
        };
    };
};
var undefinedAsForeign = function (dictAsForeign) {
    return new AsForeign(function (v) {
        return Data_Maybe.maybe(Data_Foreign_Undefined.writeUndefined)(write(dictAsForeign))(v);
    });
};
var stringIsForeign = new IsForeign(Data_Foreign.readString);
var stringAsForeign = new AsForeign(Data_Foreign.toForeign);
var read = function (dict) {
    return dict.read;
};
var readEitherL = function (dictIsForeign) {
    return function (dictIsForeign1) {
        return function (value) {
            return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Either.Left.create)(read(dictIsForeign)(value)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Either.Right.create)(read(dictIsForeign1)(value)));
        };
    };
};
var readEitherR = function (dictIsForeign) {
    return function (dictIsForeign1) {
        return function (value) {
            return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Either.Right.create)(read(dictIsForeign1)(value)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Either.Left.create)(read(dictIsForeign)(value)));
        };
    };
};
var readJSON = function (dictIsForeign) {
    return function (json) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign.parseJSON(json))(read(dictIsForeign));
    };
};
var readWith = function (dictIsForeign) {
    return function (f) {
        return function ($23) {
            return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(f))(read(dictIsForeign)($23));
        };
    };
};
var readProp = function (dictIsForeign) {
    return function (dictIndex) {
        return function (prop) {
            return function (value) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(dictIndex)(value)(prop))(readWith(dictIsForeign)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Foreign_Index.errorAt(dictIndex)(prop))));
            };
        };
    };
};
var undefinedIsForeign = function (dictIsForeign) {
    return new IsForeign(Data_Foreign_Undefined.readUndefined(read(dictIsForeign)));
};
var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
var numberAsForeign = new AsForeign(Data_Foreign.toForeign);
var nullOrUndefinedIsForeign = function (dictIsForeign) {
    return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(dictIsForeign)));
};
var nullIsForeign = function (dictIsForeign) {
    return new IsForeign(Data_Foreign_Null.readNull(read(dictIsForeign)));
};
var nullAsForeign = function (dictAsForeign) {
    return new AsForeign(function (v) {
        return Data_Maybe.maybe(Data_Foreign_Null.writeNull)(write(dictAsForeign))(v);
    });
};
var nullOrUndefinedAsForeign = function (dictAsForeign) {
    return new AsForeign(function (v) {
        return write(nullAsForeign(dictAsForeign))(v);
    });
};
var intIsForeign = new IsForeign(Data_Foreign.readInt);
var intAsForeign = new AsForeign(Data_Foreign.toForeign);
var foreignIsForeign = new IsForeign(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)));
var foreignAsForeign = new AsForeign(Control_Category.id(Control_Category.categoryFn));
var charIsForeign = new IsForeign(Data_Foreign.readChar);
var charAsForeign = new AsForeign(Data_Foreign.toForeign);
var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
var booleanAsForeign = new AsForeign(Data_Foreign.toForeign);
var arrayIsForeign = function (dictIsForeign) {
    return new IsForeign((function () {
        var readElement = function (i) {
            return function (value) {
                return readWith(dictIsForeign)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Foreign.ErrorAtIndex.create(i)))(value);
            };
        };
        var readElements = function (arr) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
        };
        return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign.readArray)(readElements);
    })());
};
var arrayAsForeign = function (dictAsForeign) {
    return new AsForeign(function ($24) {
        return Data_Foreign.toForeign(Data_Functor.map(Data_Functor.functorArray)(write(dictAsForeign))($24));
    });
};
module.exports = {
    AsForeign: AsForeign, 
    IsForeign: IsForeign, 
    read: read, 
    readEitherL: readEitherL, 
    readEitherR: readEitherR, 
    readJSON: readJSON, 
    readProp: readProp, 
    readWith: readWith, 
    write: write, 
    writeProp: writeProp, 
    foreignIsForeign: foreignIsForeign, 
    stringIsForeign: stringIsForeign, 
    charIsForeign: charIsForeign, 
    booleanIsForeign: booleanIsForeign, 
    numberIsForeign: numberIsForeign, 
    intIsForeign: intIsForeign, 
    arrayIsForeign: arrayIsForeign, 
    nullIsForeign: nullIsForeign, 
    undefinedIsForeign: undefinedIsForeign, 
    nullOrUndefinedIsForeign: nullOrUndefinedIsForeign, 
    foreignAsForeign: foreignAsForeign, 
    stringAsForeign: stringAsForeign, 
    charAsForeign: charAsForeign, 
    booleanAsForeign: booleanAsForeign, 
    numberAsForeign: numberAsForeign, 
    intAsForeign: intAsForeign, 
    arrayAsForeign: arrayAsForeign, 
    nullAsForeign: nullAsForeign, 
    undefinedAsForeign: undefinedAsForeign, 
    nullOrUndefinedAsForeign: nullOrUndefinedAsForeign
};

},{"../Control.Alt":38,"../Control.Applicative":41,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad.Except":79,"../Control.Monad.Except.Trans":78,"../Control.Semigroupoid":104,"../Data.Array":128,"../Data.Bifunctor":130,"../Data.Either":144,"../Data.Foreign":163,"../Data.Foreign.Index":156,"../Data.Foreign.Null":158,"../Data.Foreign.NullOrUndefined":159,"../Data.Foreign.Undefined":161,"../Data.Functor":173,"../Data.Identity":178,"../Data.List.Types":187,"../Data.Maybe":192,"../Data.Semiring":218,"../Data.Traversable":227,"../Prelude":266}],155:[function(require,module,exports){
/* global exports */
"use strict";

// jshint maxparams: 4
exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

// jshint maxparams: 2
exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],156:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Foreign = require("../Data.Foreign");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Identity = require("../Data.Identity");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Eq = require("../Data.Eq");
var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
    };
};
var prop = unsafeReadProp;
var ix = function (dict) {
    return dict.ix;
};
var index = unsafeReadProp;
var hasPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasProperty(v, value);
        };
        return false;
    };
};
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasOwnProperty(v, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(index));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(prop));
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index, 
    errorAt: errorAt, 
    hasOwnProperty: hasOwnProperty, 
    hasProperty: hasProperty, 
    index: index, 
    ix: ix, 
    prop: prop, 
    indexString: indexString, 
    indexInt: indexInt
};

},{"../Control.Applicative":41,"../Control.Monad.Except.Trans":78,"../Data.Eq":147,"../Data.Foreign":163,"../Data.Function":166,"../Data.Function.Uncurried":165,"../Data.HeytingAlgebra":177,"../Data.Identity":178,"../Prelude":266,"./foreign":155}],157:[function(require,module,exports){
/* global exports */
"use strict";

exports.writeNull = null;

},{}],158:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Foreign = require("../Data.Foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Identity = require("../Data.Identity");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Null = function (x) {
    return x;
};
var unNull = function (v) {
    return v;
};
var readNull = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
        };
        return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function ($5) {
            return Null(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    Null: Null, 
    readNull: readNull, 
    unNull: unNull, 
    writeNull: $foreign.writeNull
};

},{"../Control.Applicative":41,"../Control.Monad.Except.Trans":78,"../Control.Semigroupoid":104,"../Data.Foreign":163,"../Data.Functor":173,"../Data.Identity":178,"../Data.Maybe":192,"../Prelude":266,"./foreign":157}],159:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Foreign = require("../Data.Foreign");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Identity = require("../Data.Identity");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var NullOrUndefined = function (x) {
    return x;
};
var unNullOrUndefined = function (v) {
    return v;
};
var readNullOrUndefined = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value) || Data_Foreign.isUndefined(value)) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
        };
        return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function ($5) {
            return NullOrUndefined(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    NullOrUndefined: NullOrUndefined, 
    readNullOrUndefined: readNullOrUndefined, 
    unNullOrUndefined: unNullOrUndefined
};

},{"../Control.Applicative":41,"../Control.Monad.Except.Trans":78,"../Control.Semigroupoid":104,"../Data.Foreign":163,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Identity":178,"../Data.Maybe":192,"../Prelude":266}],160:[function(require,module,exports){
/* global exports */
"use strict";

exports.writeUndefined = undefined;

},{}],161:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Foreign = require("../Data.Foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Identity = require("../Data.Identity");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Undefined = function (x) {
    return x;
};
var unUndefined = function (v) {
    return v;
};
var readUndefined = function (v) {
    return function (value) {
        if (Data_Foreign.isUndefined(value)) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
        };
        return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function ($5) {
            return Undefined(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    Undefined: Undefined, 
    readUndefined: readUndefined, 
    unUndefined: unUndefined, 
    writeUndefined: $foreign.writeUndefined
};

},{"../Control.Applicative":41,"../Control.Monad.Except.Trans":78,"../Control.Semigroupoid":104,"../Data.Foreign":163,"../Data.Functor":173,"../Data.Identity":178,"../Data.Maybe":192,"../Prelude":266,"./foreign":160}],162:[function(require,module,exports){
/* global exports */
"use strict";

// jshint maxparams: 3
exports.parseJSONImpl = function (left, right, str) {
  try {
    return right(JSON.parse(str));
  } catch (e) {
    return left(e.toString());
  }
};
// jshint maxparams: 1

exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

exports.writeObject = function (fields) {
  var record = {};
  for (var i = 0; i < fields.length; i++) {
    record[fields[i].key] = fields[i].value;
  }
  return record;
};

},{}],163:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Except = require("../Control.Monad.Except");
var Data_Either = require("../Data.Either");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Int = require("../Data.Int");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Data_Maybe = require("../Data.Maybe");
var Data_String = require("../Data.String");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Identity = require("../Data.Identity");
var Control_Applicative = require("../Control.Applicative");
var Data_Function = require("../Data.Function");
var Data_Boolean = require("../Data.Boolean");
var Prop = function (x) {
    return x;
};
var ForeignError = (function () {
    function ForeignError(value0) {
        this.value0 = value0;
    };
    ForeignError.create = function (value0) {
        return new ForeignError(value0);
    };
    return ForeignError;
})();
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var showForeignError = new Data_Show.Show(function (v) {
    if (v instanceof ForeignError) {
        return "(ForeignError " + (v.value0 + ")");
    };
    if (v instanceof ErrorAtIndex) {
        return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof ErrorAtProperty) {
        return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof JSONError) {
        return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof TypeMismatch) {
        return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Data.Foreign line 65, column 3 - line 66, column 3: " + [ v.constructor.name ]);
});
var renderForeignError = function (v) {
    if (v instanceof ForeignError) {
        return v.value0;
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof JSONError) {
        return "JSON error: " + v.value0;
    };
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    throw new Error("Failed pattern match at Data.Foreign line 75, column 1 - line 75, column 44: " + [ v.constructor.name ]);
};
var fail = function ($112) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadErrorExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($112));
};
var parseJSON = function (json) {
    return $foreign.parseJSONImpl(function ($113) {
        return fail(JSONError.create($113));
    }, Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), json);
};
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    };
    if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    };
    throw new Error("Failed pattern match at Data.Foreign line 149, column 1 - line 151, column 58: " + [ value.constructor.name ]);
};
var unsafeReadTagged = function (tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
        };
        if (Data_Boolean.otherwise) {
            return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
        };
        throw new Error("Failed pattern match at Data.Foreign line 108, column 1 - line 110, column 54: " + [ tag.constructor.name, value.constructor.name ]);
    };
};
var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
    var fromNumber = function ($114) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($114));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};
var readString = unsafeReadTagged("String");
var readChar = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
    var fromString = function ($115) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($115));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};
var eqForeignError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return x.value0 === y.value0;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            return x.value0 === y.value0 && x.value1 === y.value1;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordForeignError = new Data_Ord.Ord(function () {
    return eqForeignError;
}, function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof ForeignError) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ForeignError) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            var $83 = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if ($83 instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if ($83 instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
        };
        if (x instanceof TypeMismatch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TypeMismatch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            var $92 = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if ($92 instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if ($92 instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtIndex) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtIndex) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            var $101 = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if ($101 instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if ($101 instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtProperty) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    ForeignError: ForeignError, 
    TypeMismatch: TypeMismatch, 
    ErrorAtIndex: ErrorAtIndex, 
    ErrorAtProperty: ErrorAtProperty, 
    JSONError: JSONError, 
    Prop: Prop, 
    fail: fail, 
    parseJSON: parseJSON, 
    readArray: readArray, 
    readBoolean: readBoolean, 
    readChar: readChar, 
    readInt: readInt, 
    readNumber: readNumber, 
    readString: readString, 
    unsafeReadTagged: unsafeReadTagged, 
    eqForeignError: eqForeignError, 
    ordForeignError: ordForeignError, 
    showForeignError: showForeignError, 
    isArray: $foreign.isArray, 
    isNull: $foreign.isNull, 
    isUndefined: $foreign.isUndefined, 
    tagOf: $foreign.tagOf, 
    toForeign: $foreign.toForeign, 
    typeOf: $foreign.typeOf, 
    unsafeFromForeign: $foreign.unsafeFromForeign, 
    writeObject: $foreign.writeObject
};

},{"../Control.Applicative":41,"../Control.Monad.Error.Class":77,"../Control.Monad.Except":79,"../Control.Monad.Except.Trans":78,"../Control.Semigroupoid":104,"../Data.Boolean":132,"../Data.Either":144,"../Data.Eq":147,"../Data.Function":166,"../Data.Function.Uncurried":165,"../Data.HeytingAlgebra":177,"../Data.Identity":178,"../Data.Int":183,"../Data.List.NonEmpty":186,"../Data.Maybe":192,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Semigroup":216,"../Data.Show":221,"../Data.String":225,"../Prelude":266,"./foreign":162}],164:[function(require,module,exports){
"use strict";

// module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],165:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var runFn1 = function (f) {
    return f;
};
var mkFn1 = function (f) {
    return f;
};
module.exports = {
    mkFn1: mkFn1, 
    runFn1: runFn1, 
    mkFn0: $foreign.mkFn0, 
    mkFn10: $foreign.mkFn10, 
    mkFn2: $foreign.mkFn2, 
    mkFn3: $foreign.mkFn3, 
    mkFn4: $foreign.mkFn4, 
    mkFn5: $foreign.mkFn5, 
    mkFn6: $foreign.mkFn6, 
    mkFn7: $foreign.mkFn7, 
    mkFn8: $foreign.mkFn8, 
    mkFn9: $foreign.mkFn9, 
    runFn0: $foreign.runFn0, 
    runFn10: $foreign.runFn10, 
    runFn2: $foreign.runFn2, 
    runFn3: $foreign.runFn3, 
    runFn4: $foreign.runFn4, 
    runFn5: $foreign.runFn5, 
    runFn6: $foreign.runFn6, 
    runFn7: $foreign.runFn7, 
    runFn8: $foreign.runFn8, 
    runFn9: $foreign.runFn9
};

},{"../Data.Unit":233,"./foreign":164}],166:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Category = require("../Control.Category");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var $$const = function (a) {
    return function (v) {
        return a;
    };
};
var applyFlipped = function (x) {
    return function (f) {
        return f(x);
    };
};
var apply = function (f) {
    return function (x) {
        return f(x);
    };
};
module.exports = {
    apply: apply, 
    applyFlipped: applyFlipped, 
    "const": $$const, 
    flip: flip, 
    on: on
};

},{"../Control.Category":48}],167:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Plus = require("../Control.Plus");
var Data_Foldable = require("../Data.Foldable");
var Data_Newtype = require("../Data.Newtype");
var Data_Traversable = require("../Data.Traversable");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Category = require("../Control.Category");
var Compose = function (x) {
    return x;
};
var showCompose = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordCompose = function (dictOrd) {
    return dictOrd;
};
var newtypeCompose = new Data_Newtype.Newtype(function (n) {
    return n;
}, Compose);
var functorCompose = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
            };
        });
    };
};
var foldableCompose = function (dictFoldable) {
    return function (dictFoldable1) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                return function (v) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f))(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldl(dictFoldable)(Data_Foldable.foldl(dictFoldable1)(f))(i)(v);
                };
            };
        }, function (f) {
            return function (i) {
                return function (v) {
                    return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(Data_Foldable.foldr(dictFoldable1)(f)))(i)(v);
                };
            };
        });
    };
};
var traversableCompose = function (dictTraversable) {
    return function (dictTraversable1) {
        return new Data_Traversable.Traversable(function () {
            return foldableCompose(dictTraversable["__superclass_Data.Foldable.Foldable_1"]())(dictTraversable1["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return functorCompose(dictTraversable["__superclass_Data.Functor.Functor_0"]())(dictTraversable1["__superclass_Data.Functor.Functor_0"]());
        }, function (dictApplicative) {
            return Data_Traversable.traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
        }, function (dictApplicative) {
            return function (f) {
                return function (v) {
                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Compose)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f))(v));
                };
            };
        });
    };
};
var eqCompose = function (dictEq) {
    return dictEq;
};
var bihoistCompose = function (dictFunctor) {
    return function (natF) {
        return function (natG) {
            return function (v) {
                return natF(Data_Functor.map(dictFunctor)(natG)(v));
            };
        };
    };
};
var applyCompose = function (dictApply) {
    return function (dictApply1) {
        return new Control_Apply.Apply(function () {
            return functorCompose(dictApply["__superclass_Data.Functor.Functor_0"]())(dictApply1["__superclass_Data.Functor.Functor_0"]());
        }, function (v) {
            return function (v1) {
                return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Control_Apply.apply(dictApply1))(v))(v1));
            };
        });
    };
};
var applicativeCompose = function (dictApplicative) {
    return function (dictApplicative1) {
        return new Control_Applicative.Applicative(function () {
            return applyCompose(dictApplicative["__superclass_Control.Apply.Apply_0"]())(dictApplicative1["__superclass_Control.Apply.Apply_0"]());
        }, function ($57) {
            return Compose(Control_Applicative.pure(dictApplicative)(Control_Applicative.pure(dictApplicative1)($57)));
        });
    };
};
var altCompose = function (dictAlt) {
    return function (dictFunctor) {
        return new Control_Alt.Alt(function () {
            return functorCompose(dictAlt["__superclass_Data.Functor.Functor_0"]())(dictFunctor);
        }, function (v) {
            return function (v1) {
                return Compose(Control_Alt.alt(dictAlt)(v)(v1));
            };
        });
    };
};
var plusCompose = function (dictPlus) {
    return function (dictFunctor) {
        return new Control_Plus.Plus(function () {
            return altCompose(dictPlus["__superclass_Control.Alt.Alt_0"]())(dictFunctor);
        }, Control_Plus.empty(dictPlus));
    };
};
var alternativeCompose = function (dictAlternative) {
    return function (dictApplicative) {
        return new Control_Alternative.Alternative(function () {
            return applicativeCompose(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(dictApplicative);
        }, function () {
            return plusCompose(dictAlternative["__superclass_Control.Plus.Plus_1"]())((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
        });
    };
};
module.exports = {
    Compose: Compose, 
    bihoistCompose: bihoistCompose, 
    newtypeCompose: newtypeCompose, 
    eqCompose: eqCompose, 
    ordCompose: ordCompose, 
    showCompose: showCompose, 
    functorCompose: functorCompose, 
    applyCompose: applyCompose, 
    applicativeCompose: applicativeCompose, 
    foldableCompose: foldableCompose, 
    traversableCompose: traversableCompose, 
    altCompose: altCompose, 
    plusCompose: plusCompose, 
    alternativeCompose: alternativeCompose
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Category":48,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Show":221,"../Data.Traversable":227,"../Prelude":266}],168:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Functor = require("../Data.Functor");
var Data_Void = require("../Data.Void");
var Contravariant = function (cmap) {
    this.cmap = cmap;
};
var cmap = function (dict) {
    return dict.cmap;
};
var cmapFlipped = function (dictContravariant) {
    return function (x) {
        return function (f) {
            return cmap(dictContravariant)(f)(x);
        };
    };
};
var coerce = function (dictContravariant) {
    return function (dictFunctor) {
        return function (a) {
            return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
        };
    };
};
module.exports = {
    Contravariant: Contravariant, 
    cmap: cmap, 
    cmapFlipped: cmapFlipped, 
    coerce: coerce
};

},{"../Data.Functor":173,"../Data.Void":234,"../Prelude":266}],169:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Const = require("../Data.Const");
var Data_Either = require("../Data.Either");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct");
var Data_Newtype = require("../Data.Newtype");
var Data_Void = require("../Data.Void");
var in9 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))))));
};
var in8 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))));
};
var in7 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))));
};
var in6 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))));
};
var in5 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))));
};
var in4 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))));
};
var in3 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)));
};
var in2 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v));
};
var in10 = function (v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))))));
};
var in1 = Data_Functor_Coproduct.left;
var coproduct9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (y) {
                                        if (y instanceof Data_Either.Left) {
                                            return a(y.value0);
                                        };
                                        if (y instanceof Data_Either.Right) {
                                            if (y.value0 instanceof Data_Either.Left) {
                                                return b(y.value0.value0);
                                            };
                                            if (y.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0 instanceof Data_Either.Left) {
                                                    return c(y.value0.value0.value0);
                                                };
                                                if (y.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return d(y.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return e(y.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return f(y.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0.value0));
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 225, column 41 - line 227, column 61: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 223, column 39 - line 227, column 61: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 221, column 37 - line 227, column 61: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 219, column 35 - line 227, column 61: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 217, column 33 - line 227, column 61: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 215, column 31 - line 227, column 61: " + [ y.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 213, column 29 - line 227, column 61: " + [ y.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 211, column 27 - line 227, column 61: " + [ y.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 209, column 34 - line 227, column 61: " + [ y.constructor.name ]);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (y) {
                                    if (y instanceof Data_Either.Left) {
                                        return a(y.value0);
                                    };
                                    if (y instanceof Data_Either.Right) {
                                        if (y.value0 instanceof Data_Either.Left) {
                                            return b(y.value0.value0);
                                        };
                                        if (y.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0 instanceof Data_Either.Left) {
                                                return c(y.value0.value0.value0);
                                            };
                                            if (y.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return d(y.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return e(y.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return f(y.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0));
                                                                };
                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 204, column 39 - line 206, column 59: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 202, column 37 - line 206, column 59: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 200, column 35 - line 206, column 59: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 198, column 33 - line 206, column 59: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 196, column 31 - line 206, column 59: " + [ y.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 194, column 29 - line 206, column 59: " + [ y.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 192, column 27 - line 206, column 59: " + [ y.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 190, column 32 - line 206, column 59: " + [ y.constructor.name ]);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (y) {
                                if (y instanceof Data_Either.Left) {
                                    return a(y.value0);
                                };
                                if (y instanceof Data_Either.Right) {
                                    if (y.value0 instanceof Data_Either.Left) {
                                        return b(y.value0.value0);
                                    };
                                    if (y.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0 instanceof Data_Either.Left) {
                                            return c(y.value0.value0.value0);
                                        };
                                        if (y.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                return d(y.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return e(y.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                        return f(y.value0.value0.value0.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0));
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 185, column 37 - line 187, column 57: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 183, column 35 - line 187, column 57: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 181, column 33 - line 187, column 57: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 179, column 31 - line 187, column 57: " + [ y.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 177, column 29 - line 187, column 57: " + [ y.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 175, column 27 - line 187, column 57: " + [ y.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 173, column 30 - line 187, column 57: " + [ y.constructor.name ]);
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (y) {
                            if (y instanceof Data_Either.Left) {
                                return a(y.value0);
                            };
                            if (y instanceof Data_Either.Right) {
                                if (y.value0 instanceof Data_Either.Left) {
                                    return b(y.value0.value0);
                                };
                                if (y.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                        return c(y.value0.value0.value0);
                                    };
                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                            return d(y.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                return e(y.value0.value0.value0.value0.value0);
                                            };
                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                };
                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0));
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 168, column 35 - line 170, column 55: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 166, column 33 - line 170, column 55: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 164, column 31 - line 170, column 55: " + [ y.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 162, column 29 - line 170, column 55: " + [ y.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 160, column 27 - line 170, column 55: " + [ y.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 158, column 28 - line 170, column 55: " + [ y.constructor.name ]);
                        };
                    };
                };
            };
        };
    };
};
var coproduct5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (y) {
                        if (y instanceof Data_Either.Left) {
                            return a(y.value0);
                        };
                        if (y instanceof Data_Either.Right) {
                            if (y.value0 instanceof Data_Either.Left) {
                                return b(y.value0.value0);
                            };
                            if (y.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0 instanceof Data_Either.Left) {
                                    return c(y.value0.value0.value0);
                                };
                                if (y.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                        return d(y.value0.value0.value0.value0);
                                    };
                                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                            return e(y.value0.value0.value0.value0.value0);
                                        };
                                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0));
                                        };
                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 153, column 33 - line 155, column 53: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                    };
                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 151, column 31 - line 155, column 53: " + [ y.value0.value0.value0.constructor.name ]);
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 149, column 29 - line 155, column 53: " + [ y.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 147, column 27 - line 155, column 53: " + [ y.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 145, column 26 - line 155, column 53: " + [ y.constructor.name ]);
                    };
                };
            };
        };
    };
};
var coproduct4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (y) {
                    if (y instanceof Data_Either.Left) {
                        return a(y.value0);
                    };
                    if (y instanceof Data_Either.Right) {
                        if (y.value0 instanceof Data_Either.Left) {
                            return b(y.value0.value0);
                        };
                        if (y.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0 instanceof Data_Either.Left) {
                                return c(y.value0.value0.value0);
                            };
                            if (y.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                    return d(y.value0.value0.value0.value0);
                                };
                                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0));
                                };
                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 140, column 31 - line 142, column 51: " + [ y.value0.value0.value0.constructor.name ]);
                            };
                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 138, column 29 - line 142, column 51: " + [ y.value0.value0.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 136, column 27 - line 142, column 51: " + [ y.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 134, column 24 - line 142, column 51: " + [ y.constructor.name ]);
                };
            };
        };
    };
};
var coproduct3 = function (a) {
    return function (b) {
        return function (c) {
            return function (y) {
                if (y instanceof Data_Either.Left) {
                    return a(y.value0);
                };
                if (y instanceof Data_Either.Right) {
                    if (y.value0 instanceof Data_Either.Left) {
                        return b(y.value0.value0);
                    };
                    if (y.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0 instanceof Data_Either.Left) {
                            return c(y.value0.value0.value0);
                        };
                        if (y.value0.value0 instanceof Data_Either.Right) {
                            return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0));
                        };
                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 129, column 29 - line 131, column 49: " + [ y.value0.value0.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 127, column 27 - line 131, column 49: " + [ y.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 125, column 22 - line 131, column 49: " + [ y.constructor.name ]);
            };
        };
    };
};
var coproduct2 = function (a) {
    return function (b) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return a(y.value0);
            };
            if (y instanceof Data_Either.Right) {
                if (y.value0 instanceof Data_Either.Left) {
                    return b(y.value0.value0);
                };
                if (y.value0 instanceof Data_Either.Right) {
                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0));
                };
                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 120, column 27 - line 122, column 47: " + [ y.value0.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 118, column 20 - line 122, column 47: " + [ y.constructor.name ]);
        };
    };
};
var coproduct10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return function (y) {
                                            if (y instanceof Data_Either.Left) {
                                                return a(y.value0);
                                            };
                                            if (y instanceof Data_Either.Right) {
                                                if (y.value0 instanceof Data_Either.Left) {
                                                    return b(y.value0.value0);
                                                };
                                                if (y.value0 instanceof Data_Either.Right) {
                                                    if (y.value0.value0 instanceof Data_Either.Left) {
                                                        return c(y.value0.value0.value0);
                                                    };
                                                    if (y.value0.value0 instanceof Data_Either.Right) {
                                                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                                                            return d(y.value0.value0.value0.value0);
                                                        };
                                                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                return e(y.value0.value0.value0.value0.value0);
                                                            };
                                                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                    return f(y.value0.value0.value0.value0.value0.value0);
                                                                };
                                                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                        return g(y.value0.value0.value0.value0.value0.value0.value0);
                                                                    };
                                                                    if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                            return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                        };
                                                                        if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                            };
                                                                            if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                                                                    return j(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                                                                };
                                                                                if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                                                                    return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0));
                                                                                };
                                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 248, column 43 - line 250, column 64: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                            };
                                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 246, column 41 - line 250, column 64: " + [ y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                        };
                                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 244, column 39 - line 250, column 64: " + [ y.value0.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                    };
                                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 242, column 37 - line 250, column 64: " + [ y.value0.value0.value0.value0.value0.value0.constructor.name ]);
                                                                };
                                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 240, column 35 - line 250, column 64: " + [ y.value0.value0.value0.value0.value0.constructor.name ]);
                                                            };
                                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 238, column 33 - line 250, column 64: " + [ y.value0.value0.value0.value0.constructor.name ]);
                                                        };
                                                        throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 236, column 31 - line 250, column 64: " + [ y.value0.value0.value0.constructor.name ]);
                                                    };
                                                    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 234, column 29 - line 250, column 64: " + [ y.value0.value0.constructor.name ]);
                                                };
                                                throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 232, column 27 - line 250, column 64: " + [ y.value0.constructor.name ]);
                                            };
                                            throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 230, column 37 - line 250, column 64: " + [ y.constructor.name ]);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var coproduct1 = function (y) {
    if (y instanceof Data_Either.Left) {
        return y.value0;
    };
    if (y instanceof Data_Either.Right) {
        return Data_Void.absurd(Data_Newtype.unwrap(Data_Const.newtypeConst)(y.value0));
    };
    throw new Error("Failed pattern match at Data.Functor.Coproduct.Nested line 113, column 16 - line 115, column 45: " + [ y.constructor.name ]);
};
var at9 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at8 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at7 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left)))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at6 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))) {
                return f(y.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at5 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left)))) {
                return f(y.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at4 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left))) {
                return f(y.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at3 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                return f(y.value0.value0.value0);
            };
            return b;
        };
    };
};
var at2 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                return f(y.value0.value0);
            };
            return b;
        };
    };
};
var at10 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && (y.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left))))))))) {
                return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
            };
            return b;
        };
    };
};
var at1 = function (b) {
    return function (f) {
        return function (y) {
            if (y instanceof Data_Either.Left) {
                return f(y.value0);
            };
            return b;
        };
    };
};
module.exports = {
    at1: at1, 
    at10: at10, 
    at2: at2, 
    at3: at3, 
    at4: at4, 
    at5: at5, 
    at6: at6, 
    at7: at7, 
    at8: at8, 
    at9: at9, 
    coproduct1: coproduct1, 
    coproduct10: coproduct10, 
    coproduct2: coproduct2, 
    coproduct3: coproduct3, 
    coproduct4: coproduct4, 
    coproduct5: coproduct5, 
    coproduct6: coproduct6, 
    coproduct7: coproduct7, 
    coproduct8: coproduct8, 
    coproduct9: coproduct9, 
    in1: in1, 
    in10: in10, 
    in2: in2, 
    in3: in3, 
    in4: in4, 
    in5: in5, 
    in6: in6, 
    in7: in7, 
    in8: in8, 
    in9: in9
};

},{"../Data.Const":141,"../Data.Either":144,"../Data.Functor.Coproduct":170,"../Data.Newtype":202,"../Data.Void":234,"../Prelude":266}],170:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Newtype = require("../Data.Newtype");
var Data_Traversable = require("../Data.Traversable");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Coproduct = function (x) {
    return x;
};
var showCoproduct = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Data_Either.Left) {
                return "(left " + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Data_Either.Right) {
                return "(right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Functor.Coproduct line 44, column 3 - line 45, column 3: " + [ v.constructor.name ]);
        });
    };
};
var right = function (ga) {
    return new Data_Either.Right(ga);
};
var newtypeCoproduct = new Data_Newtype.Newtype(function (n) {
    return n;
}, Coproduct);
var left = function (fa) {
    return new Data_Either.Left(fa);
};
var functorCoproduct = function (dictFunctor) {
    return function (dictFunctor1) {
        return new Data_Functor.Functor(function (f) {
            return function (v) {
                return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
            };
        });
    };
};
var eqCoproduct = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(Data_Either.eqEither(dictEq)(dictEq1))(x)(y);
            };
        });
    };
};
var ordCoproduct = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqCoproduct(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
        }, function (x) {
            return function (y) {
                return Data_Ord.compare(Data_Either.ordEither(dictOrd)(dictOrd1))(x)(y);
            };
        });
    };
};
var coproduct = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_Either.Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Data_Either.Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Functor.Coproduct line 25, column 1 - line 25, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var foldableCoproduct = function (dictFoldable) {
    return function (dictFoldable1) {
        return new Data_Foldable.Foldable(function (dictMonoid) {
            return function (f) {
                return coproduct(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f))(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldl(dictFoldable)(f)(z))(Data_Foldable.foldl(dictFoldable1)(f)(z));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldr(dictFoldable)(f)(z))(Data_Foldable.foldr(dictFoldable1)(f)(z));
            };
        });
    };
};
var traversableCoproduct = function (dictTraversable) {
    return function (dictTraversable1) {
        return new Data_Traversable.Traversable(function () {
            return foldableCoproduct(dictTraversable["__superclass_Data.Foldable.Foldable_1"]())(dictTraversable1["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return functorCoproduct(dictTraversable["__superclass_Data.Functor.Functor_0"]())(dictTraversable1["__superclass_Data.Functor.Functor_0"]());
        }, function (dictApplicative) {
            return coproduct(function ($49) {
                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($50) {
                    return Coproduct(Data_Either.Left.create($50));
                })(Data_Traversable.sequence(dictTraversable)(dictApplicative)($49));
            })(function ($51) {
                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($52) {
                    return Coproduct(Data_Either.Right.create($52));
                })(Data_Traversable.sequence(dictTraversable1)(dictApplicative)($51));
            });
        }, function (dictApplicative) {
            return function (f) {
                return coproduct(function ($53) {
                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($54) {
                        return Coproduct(Data_Either.Left.create($54));
                    })(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)($53));
                })(function ($55) {
                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($56) {
                        return Coproduct(Data_Either.Right.create($56));
                    })(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f)($55));
                });
            };
        });
    };
};
var bihoistCoproduct = function (natF) {
    return function (natG) {
        return function (v) {
            return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(natF)(natG)(v);
        };
    };
};
module.exports = {
    Coproduct: Coproduct, 
    bihoistCoproduct: bihoistCoproduct, 
    coproduct: coproduct, 
    left: left, 
    right: right, 
    newtypeCoproduct: newtypeCoproduct, 
    eqCoproduct: eqCoproduct, 
    ordCoproduct: ordCoproduct, 
    showCoproduct: showCoproduct, 
    functorCoproduct: functorCoproduct, 
    foldableCoproduct: foldableCoproduct, 
    traversableCoproduct: traversableCoproduct
};

},{"../Control.Semigroupoid":104,"../Data.Bifunctor":130,"../Data.Either":144,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Functor":173,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Show":221,"../Data.Traversable":227,"../Prelude":266}],171:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_Functor = require("../Data.Functor");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(f);
        };
    };
};
var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant, 
    imap: imap, 
    imapF: imapF, 
    invariantFn: invariantFn, 
    invariantArray: invariantArray
};

},{"../Data.Functor":173}],172:[function(require,module,exports){
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

},{}],173:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("../Data.Function");
var Data_Unit = require("../Data.Unit");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Functor = function (map) {
    this.map = map;
};
var map = function (dict) {
    return dict.map;
};
var mapFlipped = function (dictFunctor) {
    return function (fa) {
        return function (f) {
            return map(dictFunctor)(f)(fa);
        };
    };
};
var $$void = function (dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};
var voidLeft = function (dictFunctor) {
    return function (f) {
        return function (x) {
            return map(dictFunctor)(Data_Function["const"](x))(f);
        };
    };
};
var voidRight = function (dictFunctor) {
    return function (x) {
        return map(dictFunctor)(Data_Function["const"](x));
    };
};
var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);
var flap = function (dictFunctor) {
    return function (ff) {
        return function (x) {
            return map(dictFunctor)(function (f) {
                return f(x);
            })(ff);
        };
    };
};
module.exports = {
    Functor: Functor, 
    flap: flap, 
    map: map, 
    mapFlipped: mapFlipped, 
    "void": $$void, 
    voidLeft: voidLeft, 
    voidRight: voidRight, 
    functorFn: functorFn, 
    functorArray: functorArray
};

},{"../Control.Semigroupoid":104,"../Data.Function":166,"../Data.Unit":233,"./foreign":172}],174:[function(require,module,exports){
"use strict";

// module Data.Generic

exports.zipAll = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      for (var i = 0; i < l; i++) {
        if (!f(xs[i])(ys[i])) {
          return false;
        }
      }
      return true;
    };
  };
};

exports.zipCompare = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var o = f(xs[i])(ys[i]);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],175:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_String = require("../Data.String");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Type_Proxy = require("../Type.Proxy");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Data_Ordering = require("../Data.Ordering");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Function = require("../Data.Function");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Monoid = require("../Data.Monoid");
var Data_Ring = require("../Data.Ring");
var Data_Boolean = require("../Data.Boolean");
var SProd = (function () {
    function SProd(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SProd.create = function (value0) {
        return function (value1) {
            return new SProd(value0, value1);
        };
    };
    return SProd;
})();
var SRecord = (function () {
    function SRecord(value0) {
        this.value0 = value0;
    };
    SRecord.create = function (value0) {
        return new SRecord(value0);
    };
    return SRecord;
})();
var SNumber = (function () {
    function SNumber(value0) {
        this.value0 = value0;
    };
    SNumber.create = function (value0) {
        return new SNumber(value0);
    };
    return SNumber;
})();
var SBoolean = (function () {
    function SBoolean(value0) {
        this.value0 = value0;
    };
    SBoolean.create = function (value0) {
        return new SBoolean(value0);
    };
    return SBoolean;
})();
var SInt = (function () {
    function SInt(value0) {
        this.value0 = value0;
    };
    SInt.create = function (value0) {
        return new SInt(value0);
    };
    return SInt;
})();
var SString = (function () {
    function SString(value0) {
        this.value0 = value0;
    };
    SString.create = function (value0) {
        return new SString(value0);
    };
    return SString;
})();
var SChar = (function () {
    function SChar(value0) {
        this.value0 = value0;
    };
    SChar.create = function (value0) {
        return new SChar(value0);
    };
    return SChar;
})();
var SArray = (function () {
    function SArray(value0) {
        this.value0 = value0;
    };
    SArray.create = function (value0) {
        return new SArray(value0);
    };
    return SArray;
})();
var SUnit = (function () {
    function SUnit() {

    };
    SUnit.value = new SUnit();
    return SUnit;
})();
var SigProd = (function () {
    function SigProd(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SigProd.create = function (value0) {
        return function (value1) {
            return new SigProd(value0, value1);
        };
    };
    return SigProd;
})();
var SigRecord = (function () {
    function SigRecord(value0) {
        this.value0 = value0;
    };
    SigRecord.create = function (value0) {
        return new SigRecord(value0);
    };
    return SigRecord;
})();
var SigNumber = (function () {
    function SigNumber() {

    };
    SigNumber.value = new SigNumber();
    return SigNumber;
})();
var SigBoolean = (function () {
    function SigBoolean() {

    };
    SigBoolean.value = new SigBoolean();
    return SigBoolean;
})();
var SigInt = (function () {
    function SigInt() {

    };
    SigInt.value = new SigInt();
    return SigInt;
})();
var SigString = (function () {
    function SigString() {

    };
    SigString.value = new SigString();
    return SigString;
})();
var SigChar = (function () {
    function SigChar() {

    };
    SigChar.value = new SigChar();
    return SigChar;
})();
var SigArray = (function () {
    function SigArray(value0) {
        this.value0 = value0;
    };
    SigArray.create = function (value0) {
        return new SigArray(value0);
    };
    return SigArray;
})();
var SigUnit = (function () {
    function SigUnit() {

    };
    SigUnit.value = new SigUnit();
    return SigUnit;
})();
var Generic = function (fromSpine, toSignature, toSpine) {
    this.fromSpine = fromSpine;
    this.toSignature = toSignature;
    this.toSpine = toSpine;
};
var toSpine = function (dict) {
    return dict.toSpine;
};
var toSignature = function (dict) {
    return dict.toSignature;
};
var showArray = function (f) {
    return function (xs) {
        return "[ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(f)(xs)) + " ]");
    };
};
var orderingToInt = function (v) {
    if (v instanceof Data_Ordering.EQ) {
        return 0;
    };
    if (v instanceof Data_Ordering.LT) {
        return 1;
    };
    if (v instanceof Data_Ordering.GT) {
        return -1;
    };
    throw new Error("Failed pattern match at Data.Generic line 467, column 17 - line 470, column 10: " + [ v.constructor.name ]);
};
var genericUnit = new Generic(function (v) {
    if (v instanceof SUnit) {
        return new Data_Maybe.Just(Data_Unit.unit);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigUnit.value;
}, function (v) {
    return SUnit.value;
});
var genericString = new Generic(function (v) {
    if (v instanceof SString) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigString.value;
}, SString.create);
var genericOrdering = new Generic(function (v) {
    if (v instanceof SProd && (v.value0 === "Data.Ordering.LT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.LT.value);
    };
    if (v instanceof SProd && (v.value0 === "Data.Ordering.EQ" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.EQ.value);
    };
    if (v instanceof SProd && (v.value0 === "Data.Ordering.GT" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Data_Ordering.GT.value);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return new SigProd("Data.Ordering.Ordering", [ {
        sigConstructor: "Data.Ordering.LT", 
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Ordering.EQ", 
        sigValues: [  ]
    }, {
        sigConstructor: "Data.Ordering.GT", 
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof Data_Ordering.LT) {
        return new SProd("Data.Ordering.LT", [  ]);
    };
    if (v instanceof Data_Ordering.EQ) {
        return new SProd("Data.Ordering.EQ", [  ]);
    };
    if (v instanceof Data_Ordering.GT) {
        return new SProd("Data.Ordering.GT", [  ]);
    };
    throw new Error("Failed pattern match at Data.Generic line 168, column 13 - line 171, column 38: " + [ v.constructor.name ]);
});
var genericNumber = new Generic(function (v) {
    if (v instanceof SNumber) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigNumber.value;
}, SNumber.create);
var genericInt = new Generic(function (v) {
    if (v instanceof SInt) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigInt.value;
}, SInt.create);
var genericChar = new Generic(function (v) {
    if (v instanceof SChar) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigChar.value;
}, SChar.create);
var genericBool = new Generic(function (v) {
    if (v instanceof SBoolean) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (v) {
    return SigBoolean.value;
}, SBoolean.create);
var fromSpine = function (dict) {
    return dict.fromSpine;
};
var force = function (f) {
    return f(Data_Unit.unit);
};
var genericArray = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SArray) {
            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($272) {
                return fromSpine(dictGeneric)(force($272));
            })(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var lowerProxy = function (v) {
            return (Type_Proxy["Proxy"]).value;
        };
        return new SigArray(function (v) {
            return toSignature(dictGeneric)(lowerProxy(x));
        });
    }, function ($273) {
        return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
            return function (v) {
                return toSpine(dictGeneric)(x);
            };
        })($273));
    });
};
var genericEither = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.Either.Left" && v.value1.length === 1)) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v.value1[0])));
            };
            if (v instanceof SProd && (v.value0 === "Data.Either.Right" && v.value1.length === 1)) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v.value1[0])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var rproxy = function (v) {
                return (Type_Proxy["Proxy"]).value;
            };
            var lproxy = function (v) {
                return (Type_Proxy["Proxy"]).value;
            };
            return new SigProd("Data.Either.Either", [ {
                sigConstructor: "Data.Either.Left", 
                sigValues: [ function (v) {
                    return toSignature(dictGeneric)(lproxy(x));
                } ]
            }, {
                sigConstructor: "Data.Either.Right", 
                sigValues: [ function (v) {
                    return toSignature(dictGeneric1)(rproxy(x));
                } ]
            } ]);
        }, function (v) {
            if (v instanceof Data_Either.Left) {
                return new SProd("Data.Either.Left", [ function (v1) {
                    return toSpine(dictGeneric)(v.value0);
                } ]);
            };
            if (v instanceof Data_Either.Right) {
                return new SProd("Data.Either.Right", [ function (v1) {
                    return toSpine(dictGeneric1)(v.value0);
                } ]);
            };
            throw new Error("Failed pattern match at Data.Generic line 131, column 3 - line 131, column 64: " + [ v.constructor.name ]);
        });
    };
};
var genericIdentity = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.Identity.Identity" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Identity.Identity)(fromSpine(dictGeneric)(force(v.value1[0])));
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var iproxy = function (v) {
            return (Type_Proxy["Proxy"]).value;
        };
        return new SigProd("Data.Identity.Identity", [ {
            sigConstructor: "Data.Identity.Identity", 
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(iproxy(x));
            } ]
        } ]);
    }, function (v) {
        return new SProd("Data.Identity.Identity", [ function (v1) {
            return toSpine(dictGeneric)(v);
        } ]);
    });
};
var genericMaybe = function (dictGeneric) {
    return new Generic(function (v) {
        if (v instanceof SProd && (v.value0 === "Data.Maybe.Just" && v.value1.length === 1)) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v.value1[0])));
        };
        if (v instanceof SProd && (v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0)) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var mbProxy = function (v) {
            return (Type_Proxy["Proxy"]).value;
        };
        return new SigProd("Data.Maybe.Maybe", [ {
            sigConstructor: "Data.Maybe.Just", 
            sigValues: [ function (v) {
                return toSignature(dictGeneric)(mbProxy(x));
            } ]
        }, {
            sigConstructor: "Data.Maybe.Nothing", 
            sigValues: [  ]
        } ]);
    }, function (v) {
        if (v instanceof Data_Maybe.Just) {
            return new SProd("Data.Maybe.Just", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            } ]);
        };
        if (v instanceof Data_Maybe.Nothing) {
            return new SProd("Data.Maybe.Nothing", [  ]);
        };
        throw new Error("Failed pattern match at Data.Generic line 111, column 3 - line 111, column 63: " + [ v.constructor.name ]);
    });
};
var genericNonEmpty = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.NonEmpty.NonEmpty" && v.value1.length === 2)) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_NonEmpty.NonEmpty.create)(fromSpine(dictGeneric1)(force(v.value1[0]))))(fromSpine(dictGeneric)(force(v.value1[1])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var tailProxy = function (v) {
                return (Type_Proxy["Proxy"]).value;
            };
            var headProxy = function (v) {
                return (Type_Proxy["Proxy"]).value;
            };
            return new SigProd("Data.NonEmpty.NonEmpty", [ {
                sigConstructor: "Data.NonEmpty.NonEmpty", 
                sigValues: [ function (v) {
                    return toSignature(dictGeneric1)(headProxy(x));
                }, function (v) {
                    return toSignature(dictGeneric)(tailProxy(x));
                } ]
            } ]);
        }, function (v) {
            return new SProd("Data.NonEmpty.NonEmpty", [ function (v1) {
                return toSpine(dictGeneric1)(v.value0);
            }, function (v1) {
                return toSpine(dictGeneric)(v.value1);
            } ]);
        });
    };
};
var genericShowPrec = function (v) {
    return function (v1) {
        if (v1 instanceof SProd) {
            if (Data_Array["null"](v1.value1)) {
                return v1.value0;
            };
            if (Data_Boolean.otherwise) {
                var showParen = function (v2) {
                    return function (x) {
                        if (!v2) {
                            return x;
                        };
                        if (v2) {
                            return "(" + (x + ")");
                        };
                        throw new Error("Failed pattern match at Data.Generic line 396, column 7 - line 396, column 28: " + [ v2.constructor.name, x.constructor.name ]);
                    };
                };
                return showParen(v > 10)(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                    return genericShowPrec(11)(force(x));
                })(v1.value1))));
            };
        };
        if (v1 instanceof SRecord) {
            var showLabelPart = function (x) {
                return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
            };
            return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
        };
        if (v1 instanceof SBoolean) {
            return Data_Show.show(Data_Show.showBoolean)(v1.value0);
        };
        if (v1 instanceof SInt) {
            return Data_Show.show(Data_Show.showInt)(v1.value0);
        };
        if (v1 instanceof SNumber) {
            return Data_Show.show(Data_Show.showNumber)(v1.value0);
        };
        if (v1 instanceof SString) {
            return Data_Show.show(Data_Show.showString)(v1.value0);
        };
        if (v1 instanceof SChar) {
            return Data_Show.show(Data_Show.showChar)(v1.value0);
        };
        if (v1 instanceof SArray) {
            return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                return genericShowPrec(0)(force(x));
            })(v1.value0)) + "]");
        };
        if (v1 instanceof SUnit) {
            return "unit";
        };
        throw new Error("Failed pattern match at Data.Generic line 390, column 1 - line 398, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var gShow = function (dictGeneric) {
    return function ($274) {
        return genericShowPrec(0)(toSpine(dictGeneric)($274));
    };
};
var genericTuple = function (dictGeneric) {
    return function (dictGeneric1) {
        return new Generic(function (v) {
            if (v instanceof SProd && (v.value0 === "Data.Tuple.Tuple" && v.value1.length === 2)) {
                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v.value1[0]))))(fromSpine(dictGeneric1)(force(v.value1[1])));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var sndProxy = function (v) {
                return (Type_Proxy["Proxy"]).value;
            };
            var fstProxy = function (v) {
                return (Type_Proxy["Proxy"]).value;
            };
            return new SigProd("Data.Tuple.Tuple", [ {
                sigConstructor: "Data.Tuple.Tuple", 
                sigValues: [ function (v) {
                    return toSignature(dictGeneric)(fstProxy(x));
                }, function (v) {
                    return toSignature(dictGeneric1)(sndProxy(x));
                } ]
            } ]);
        }, function (v) {
            return new SProd("Data.Tuple.Tuple", [ function (v1) {
                return toSpine(dictGeneric)(v.value0);
            }, function (v1) {
                return toSpine(dictGeneric1)(v.value1);
            } ]);
        });
    };
};
var isValidSpine = function (v) {
    return function (v1) {
        if (v instanceof SigBoolean && v1 instanceof SBoolean) {
            return true;
        };
        if (v instanceof SigNumber && v1 instanceof SNumber) {
            return true;
        };
        if (v instanceof SigInt && v1 instanceof SInt) {
            return true;
        };
        if (v instanceof SigString && v1 instanceof SString) {
            return true;
        };
        if (v instanceof SigChar && v1 instanceof SChar) {
            return true;
        };
        if (v instanceof SigArray && v1 instanceof SArray) {
            return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($275) {
                return isValidSpine(force(v.value0))(force($275));
            })(v1.value0);
        };
        if (v instanceof SigProd && v1 instanceof SProd) {
            var $182 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
                return alt.sigConstructor === v1.value0;
            })(v.value1);
            if ($182 instanceof Data_Maybe.Nothing) {
                return false;
            };
            if ($182 instanceof Data_Maybe.Just) {
                return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                    return function (spine) {
                        return isValidSpine(force(sig))(force(spine));
                    };
                })($182.value0.sigValues)(v1.value1));
            };
            throw new Error("Failed pattern match at Data.Generic line 367, column 3 - line 373, column 15: " + [ $182.constructor.name ]);
        };
        if (v instanceof SigRecord && v1 instanceof SRecord) {
            return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                return function (val) {
                    return isValidSpine(force(sig.recValue))(force(val.recValue));
                };
            })(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
                };
            })(v.value0))(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
                };
            })(v1.value0)));
        };
        if (v instanceof SigUnit && v1 instanceof SUnit) {
            return true;
        };
        return false;
    };
};
var showSignature = function (sig) {
    var needsParen = function (s) {
        if (s instanceof SigProd) {
            return true;
        };
        if (s instanceof SigRecord) {
            return true;
        };
        if (s instanceof SigNumber) {
            return false;
        };
        if (s instanceof SigBoolean) {
            return false;
        };
        if (s instanceof SigInt) {
            return false;
        };
        if (s instanceof SigString) {
            return false;
        };
        if (s instanceof SigChar) {
            return false;
        };
        if (s instanceof SigArray) {
            return true;
        };
        if (s instanceof SigUnit) {
            return false;
        };
        throw new Error("Failed pattern match at Data.Generic line 333, column 18 - line 342, column 21: " + [ s.constructor.name ]);
    };
    var paren = function (s) {
        if (needsParen(s)) {
            return "(" + (showSignature(s) + ")");
        };
        if (Data_Boolean.otherwise) {
            return showSignature(s);
        };
        throw new Error("Failed pattern match at Data.Generic line 315, column 1 - line 342, column 21: " + [ s.constructor.name ]);
    };
    return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)((function () {
        if (sig instanceof SigProd) {
            return [ "SigProd ", Data_Show.show(Data_Show.showString)(sig.value0), " ", showArray(showDataConstructor)(sig.value1) ];
        };
        if (sig instanceof SigRecord) {
            return [ "SigRecord ", showArray(showLabel)(sig.value0) ];
        };
        if (sig instanceof SigNumber) {
            return [ "SigNumber" ];
        };
        if (sig instanceof SigBoolean) {
            return [ "SigBoolean" ];
        };
        if (sig instanceof SigInt) {
            return [ "SigInt" ];
        };
        if (sig instanceof SigString) {
            return [ "SigString" ];
        };
        if (sig instanceof SigChar) {
            return [ "SigChar" ];
        };
        if (sig instanceof SigArray) {
            return [ "SigArray ", paren(force(sig.value0)) ];
        };
        if (sig instanceof SigUnit) {
            return [ "SigUnit" ];
        };
        throw new Error("Failed pattern match at Data.Generic line 316, column 3 - line 326, column 27: " + [ sig.constructor.name ]);
    })());
};
var showLabel = function (l) {
    return "{ recLabel: " + (Data_Show.show(Data_Show.showString)(l.recLabel) + (", recValue: " + (showSignature(force(l.recValue)) + " }")));
};
var showDataConstructor = function (dc) {
    return "{ sigConstructor: " + (Data_Show.show(Data_Show.showString)(dc.sigConstructor) + (", sigValues: " + (showArray(function ($276) {
        return showSignature(force($276));
    })(dc.sigValues) + "}")));
};
var showGenericSignature = new Data_Show.Show(showSignature);
var eqThunk = function (dictEq) {
    return function (x) {
        return function (y) {
            return Data_Eq.eq(dictEq)(force(x))(force(y));
        };
    };
};
var eqRecordSigs = function (dictEq) {
    return function (arr1) {
        return function (arr2) {
            var labelCompare = function (r1) {
                return function (r2) {
                    return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
                };
            };
            var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
            var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
            var doCmp = function (x) {
                return function (y) {
                    return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
                };
            };
            return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
        };
    };
};
var eqGenericSpine = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof SProd && v1 instanceof SProd) {
            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1));
        };
        if (v instanceof SRecord && v1 instanceof SRecord) {
            return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
        };
        if (v instanceof SNumber && v1 instanceof SNumber) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SBoolean && v1 instanceof SBoolean) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SInt && v1 instanceof SInt) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SString && v1 instanceof SString) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SChar && v1 instanceof SChar) {
            return v.value0 === v1.value0;
        };
        if (v instanceof SArray && v1 instanceof SArray) {
            return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
        };
        if (v instanceof SUnit && v1 instanceof SUnit) {
            return true;
        };
        return false;
    };
});
var gEq = function (dictGeneric) {
    return function (x) {
        return function (y) {
            return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
        };
    };
};
var eqGenericSignature = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof SigProd && v1 instanceof SigProd) {
            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqDataConstructor)(v.value1)(v1.value1));
        };
        if (v instanceof SigRecord && v1 instanceof SigRecord) {
            return eqRecordSigs(eqGenericSignature)(v.value0)(v1.value0);
        };
        if (v instanceof SigNumber && v1 instanceof SigNumber) {
            return true;
        };
        if (v instanceof SigBoolean && v1 instanceof SigBoolean) {
            return true;
        };
        if (v instanceof SigInt && v1 instanceof SigInt) {
            return true;
        };
        if (v instanceof SigString && v1 instanceof SigString) {
            return true;
        };
        if (v instanceof SigChar && v1 instanceof SigChar) {
            return true;
        };
        if (v instanceof SigArray && v1 instanceof SigArray) {
            return eqThunk(eqGenericSignature)(v.value0)(v1.value0);
        };
        if (v instanceof SigUnit && v1 instanceof SigUnit) {
            return true;
        };
        return false;
    };
});
var eqDataConstructor = function (p1) {
    return function (p2) {
        return p1.sigConstructor === p2.sigConstructor && $foreign.zipAll(eqThunk(eqGenericSignature))(p1.sigValues)(p2.sigValues);
    };
};
var compareThunk = function (dictOrd) {
    return function (x) {
        return function (y) {
            return orderingToInt(Data_Ord.compare(dictOrd)(force(x))(force(y)));
        };
    };
};
var ordGenericSpine = new Data_Ord.Ord(function () {
    return eqGenericSpine;
}, function (v) {
    return function (v1) {
        if (v instanceof SProd && v1 instanceof SProd) {
            var $234 = Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
            if ($234 instanceof Data_Ordering.EQ) {
                return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value1)(v1.value1));
            };
            return $234;
        };
        if (v instanceof SProd) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SProd) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SRecord && v1 instanceof SRecord) {
            var go = function (x) {
                return function (y) {
                    var $243 = Data_Ord.compare(Data_Ord.ordString)(x.recLabel)(y.recLabel);
                    if ($243 instanceof Data_Ordering.EQ) {
                        return orderingToInt(Data_Ord.compare(ordGenericSpine)(force(x.recValue))(force(y.recValue)));
                    };
                    return orderingToInt($243);
                };
            };
            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(go)(v.value0)(v1.value0));
        };
        if (v instanceof SRecord) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SRecord) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SInt && v1 instanceof SInt) {
            return Data_Ord.compare(Data_Ord.ordInt)(v.value0)(v1.value0);
        };
        if (v instanceof SInt) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SInt) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SBoolean && v1 instanceof SBoolean) {
            return Data_Ord.compare(Data_Ord.ordBoolean)(v.value0)(v1.value0);
        };
        if (v instanceof SBoolean) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SBoolean) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SNumber && v1 instanceof SNumber) {
            return Data_Ord.compare(Data_Ord.ordNumber)(v.value0)(v1.value0);
        };
        if (v instanceof SNumber) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SNumber) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SString && v1 instanceof SString) {
            return Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
        };
        if (v instanceof SString) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SString) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SChar && v1 instanceof SChar) {
            return Data_Ord.compare(Data_Ord.ordChar)(v.value0)(v1.value0);
        };
        if (v instanceof SChar) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SChar) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SArray && v1 instanceof SArray) {
            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value0)(v1.value0));
        };
        if (v instanceof SArray) {
            return Data_Ordering.LT.value;
        };
        if (v1 instanceof SArray) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof SUnit && v1 instanceof SUnit) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Generic line 234, column 3 - line 237, column 15: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var gCompare = function (dictGeneric) {
    return function (x) {
        return function (y) {
            return Data_Ord.compare(ordGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
        };
    };
};
module.exports = {
    SigProd: SigProd, 
    SigRecord: SigRecord, 
    SigNumber: SigNumber, 
    SigBoolean: SigBoolean, 
    SigInt: SigInt, 
    SigString: SigString, 
    SigChar: SigChar, 
    SigArray: SigArray, 
    SigUnit: SigUnit, 
    SProd: SProd, 
    SRecord: SRecord, 
    SNumber: SNumber, 
    SBoolean: SBoolean, 
    SInt: SInt, 
    SString: SString, 
    SChar: SChar, 
    SArray: SArray, 
    SUnit: SUnit, 
    Generic: Generic, 
    fromSpine: fromSpine, 
    gCompare: gCompare, 
    gEq: gEq, 
    gShow: gShow, 
    isValidSpine: isValidSpine, 
    showDataConstructor: showDataConstructor, 
    showSignature: showSignature, 
    toSignature: toSignature, 
    toSpine: toSpine, 
    genericNumber: genericNumber, 
    genericInt: genericInt, 
    genericString: genericString, 
    genericChar: genericChar, 
    genericBool: genericBool, 
    genericArray: genericArray, 
    genericUnit: genericUnit, 
    genericTuple: genericTuple, 
    genericMaybe: genericMaybe, 
    genericEither: genericEither, 
    genericIdentity: genericIdentity, 
    genericOrdering: genericOrdering, 
    genericNonEmpty: genericNonEmpty, 
    eqGenericSpine: eqGenericSpine, 
    ordGenericSpine: ordGenericSpine, 
    eqGenericSignature: eqGenericSignature, 
    showGenericSignature: showGenericSignature
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Semigroupoid":104,"../Data.Array":128,"../Data.Boolean":132,"../Data.Either":144,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Identity":178,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.NonEmpty":203,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Show":221,"../Data.String":225,"../Data.Traversable":227,"../Data.Tuple":229,"../Data.Unit":233,"../Prelude":266,"../Type.Proxy":267,"./foreign":174}],176:[function(require,module,exports){
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

},{}],177:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
};
var tt = function (dict) {
    return dict.tt;
};
var not = function (dict) {
    return dict.not;
};
var implies = function (dict) {
    return dict.implies;
};
var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return Data_Unit.unit;
}, Data_Unit.unit);
var ff = function (dict) {
    return dict.ff;
};
var disj = function (dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
}, $foreign.boolNot, true);
var conj = function (dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function (dictHeytingAlgebra) {
    return new HeytingAlgebra(function (f) {
        return function (g) {
            return function (a) {
                return conj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (g) {
            return function (a) {
                return disj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (v) {
        return ff(dictHeytingAlgebra);
    }, function (f) {
        return function (g) {
            return function (a) {
                return implies(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (a) {
            return not(dictHeytingAlgebra)(f(a));
        };
    }, function (v) {
        return tt(dictHeytingAlgebra);
    });
};
module.exports = {
    HeytingAlgebra: HeytingAlgebra, 
    conj: conj, 
    disj: disj, 
    ff: ff, 
    implies: implies, 
    not: not, 
    tt: tt, 
    heytingAlgebraBoolean: heytingAlgebraBoolean, 
    heytingAlgebraUnit: heytingAlgebraUnit, 
    heytingAlgebraFunction: heytingAlgebraFunction
};

},{"../Data.Unit":233,"./foreign":176}],178:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Traversable = require("../Data.Traversable");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Field = require("../Data.Field");
var Data_Show = require("../Data.Show");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Identity = function (x) {
    return x;
};
var showIdentity = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringIdentity = function (dictSemiring) {
    return dictSemiring;
};
var semigroupIdenity = function (dictSemigroup) {
    return dictSemigroup;
};
var ringIdentity = function (dictRing) {
    return dictRing;
};
var ordIdentity = function (dictOrd) {
    return dictOrd;
};
var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
}, Identity);
var monoidIdentity = function (dictMonoid) {
    return dictMonoid;
};
var heytingAlgebraIdentity = function (dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Identity)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Identity)(f(v));
        };
    };
});
var fieldIdentity = function (dictField) {
    return dictField;
};
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var euclideanRingIdentity = function (dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqIdentity = function (dictEq) {
    return dictEq;
};
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (v) {
    return v;
});
var commutativeRingIdentity = function (dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedIdentity = function (dictBounded) {
    return dictBounded;
};
var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function () {
    return functorIdentity;
}, function (x) {
    return function (v) {
        return x;
    };
});
module.exports = {
    Identity: Identity, 
    newtypeIdentity: newtypeIdentity, 
    eqIdentity: eqIdentity, 
    ordIdentity: ordIdentity, 
    boundedIdentity: boundedIdentity, 
    heytingAlgebraIdentity: heytingAlgebraIdentity, 
    booleanAlgebraIdentity: booleanAlgebraIdentity, 
    semigroupIdenity: semigroupIdenity, 
    monoidIdentity: monoidIdentity, 
    semiringIdentity: semiringIdentity, 
    euclideanRingIdentity: euclideanRingIdentity, 
    ringIdentity: ringIdentity, 
    commutativeRingIdentity: commutativeRingIdentity, 
    fieldIdentity: fieldIdentity, 
    showIdentity: showIdentity, 
    functorIdentity: functorIdentity, 
    invariantIdentity: invariantIdentity, 
    altIdentity: altIdentity, 
    applyIdentity: applyIdentity, 
    applicativeIdentity: applicativeIdentity, 
    bindIdentity: bindIdentity, 
    monadIdentity: monadIdentity, 
    extendIdentity: extendIdentity, 
    comonadIdentity: comonadIdentity, 
    foldableIdentity: foldableIdentity, 
    traversableIdentity: traversableIdentity
};

},{"../Control.Alt":38,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Comonad":49,"../Control.Extend":53,"../Control.Monad":98,"../Data.BooleanAlgebra":133,"../Data.Bounded":135,"../Data.CommutativeRing":140,"../Data.Eq":147,"../Data.EuclideanRing":149,"../Data.Field":151,"../Data.Foldable":153,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.HeytingAlgebra":177,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Data.Traversable":227,"../Prelude":266}],179:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct");
var Data_Maybe = require("../Data.Maybe");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Inject = function (inj, prj) {
    this.inj = inj;
    this.prj = prj;
};
var prj = function (dict) {
    return dict.prj;
};
var injectReflexive = new Inject(Control_Category.id(Control_Category.categoryFn), Data_Maybe.Just.create);
var injectLeft = new Inject(function ($1) {
    return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($1));
}, Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value)));
var inj = function (dict) {
    return dict.inj;
};
var injectRight = function (dictInject) {
    return new Inject(function ($2) {
        return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create(inj(dictInject)($2)));
    }, Data_Functor_Coproduct.coproduct(Data_Function["const"](Data_Maybe.Nothing.value))(prj(dictInject)));
};
module.exports = {
    Inject: Inject, 
    inj: inj, 
    prj: prj, 
    injectReflexive: injectReflexive, 
    injectLeft: injectLeft, 
    injectRight: injectRight
};

},{"../Control.Category":48,"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Function":166,"../Data.Functor.Coproduct":170,"../Data.Maybe":192,"../Prelude":266}],180:[function(require,module,exports){
"use strict";

// module Data.Int.Bits

exports.and = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.or = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xor = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],181:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
module.exports = {
    and: $foreign.and, 
    complement: $foreign.complement, 
    or: $foreign.or, 
    shl: $foreign.shl, 
    shr: $foreign.shr, 
    xor: $foreign.xor, 
    zshr: $foreign.zshr
};

},{"./foreign":180}],182:[function(require,module,exports){
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;
      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }
      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x,y) | 0;
  };
};

},{}],183:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Boolean = require("../Data.Boolean");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var $$Math = require("../Math");
var Partial_Unsafe = require("../Partial.Unsafe");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Radix = function (x) {
    return x;
};
var radix = function (n) {
    if (n >= 2 && n <= 36) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Int line 125, column 1 - line 126, column 38: " + [ n.constructor.name ]);
};
var odd = function (x) {
    return Data_Int_Bits.and(x)(1) !== 0;
};
var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
        return Data_Bounded.top(Data_Bounded.boundedInt);
    };
    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
        return Data_Bounded.bottom(Data_Bounded.boundedInt);
    };
    if (Data_Boolean.otherwise) {
        return Partial_Unsafe.unsafePartial(function (dictPartial) {
            return Data_Maybe.fromJust(dictPartial)(fromNumber(x));
        });
    };
    throw new Error("Failed pattern match at Data.Int line 66, column 1 - line 69, column 56: " + [ x.constructor.name ]);
};
var round = function ($3) {
    return unsafeClamp($$Math.round($3));
};
var floor = function ($4) {
    return unsafeClamp($$Math.floor($4));
};
var even = function (x) {
    return Data_Int_Bits.and(x)(1) === 0;
};
var decimal = 10;
var ceil = function ($5) {
    return unsafeClamp($$Math.ceil($5));
};
var binary = 2;
var base36 = 36;
module.exports = {
    base36: base36, 
    binary: binary, 
    ceil: ceil, 
    decimal: decimal, 
    even: even, 
    floor: floor, 
    fromNumber: fromNumber, 
    fromString: fromString, 
    fromStringAs: fromStringAs, 
    hexadecimal: hexadecimal, 
    octal: octal, 
    odd: odd, 
    radix: radix, 
    round: round, 
    pow: $foreign.pow, 
    toNumber: $foreign.toNumber, 
    toStringAs: $foreign.toStringAs
};

},{"../Control.Semigroupoid":104,"../Data.Boolean":132,"../Data.BooleanAlgebra":133,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Function":166,"../Data.HeytingAlgebra":177,"../Data.Int.Bits":181,"../Data.Maybe":192,"../Data.Ord":209,"../Math":261,"../Partial.Unsafe":263,"./foreign":182}],184:[function(require,module,exports){
"use strict";

exports.defer = function () {

  function Defer(thunk) {
    if (this instanceof Defer) {
      this.thunk = thunk;
      return this;
    } else {
      return new Defer(thunk);
    }
  }

  Defer.prototype.force = function () {
    var value = this.thunk();
    this.thunk = null;
    this.force = function () {
      return value;
    };
    return value;
  };

  return Defer;

}();

exports.force = function (l) {
  return l.force();
};

},{}],185:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Semiring = require("../Data.Semiring");
var Data_Ring = require("../Data.Ring");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Field = require("../Data.Field");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Control_Monad = require("../Control.Monad");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var showLazy = function (dictShow) {
    return new Data_Show.Show(function (x) {
        return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
    });
};
var semiringLazy = function (dictSemiring) {
    return new Data_Semiring.Semiring(function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Semiring.add(dictSemiring)($foreign.force(a))($foreign.force(b));
            });
        };
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Semiring.mul(dictSemiring)($foreign.force(a))($foreign.force(b));
            });
        };
    }, $foreign.defer(function (v) {
        return Data_Semiring.one(dictSemiring);
    }), $foreign.defer(function (v) {
        return Data_Semiring.zero(dictSemiring);
    }));
};
var semigroupLazy = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Semigroup.append(dictSemigroup)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var ringLazy = function (dictRing) {
    return new Data_Ring.Ring(function () {
        return semiringLazy(dictRing["__superclass_Data.Semiring.Semiring_0"]());
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_Ring.sub(dictRing)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var monoidLazy = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupLazy(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
    }, $foreign.defer(function (v) {
        return Data_Monoid.mempty(dictMonoid);
    }));
};
var lazyLazy = new Control_Lazy.Lazy(function (f) {
    return $foreign.defer(function (v) {
        return $foreign.force(f(Data_Unit.unit));
    });
});
var functorLazy = new Data_Functor.Functor(function (f) {
    return function (l) {
        return $foreign.defer(function (v) {
            return f($foreign.force(l));
        });
    };
});
var extendLazy = new Control_Extend.Extend(function () {
    return functorLazy;
}, function (f) {
    return function (x) {
        return $foreign.defer(function (v) {
            return f(x);
        });
    };
});
var eqLazy = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
        };
    });
};
var ordLazy = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqLazy(dictOrd["__superclass_Data.Eq.Eq_0"]());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
        };
    });
};
var comonadLazy = new Control_Comonad.Comonad(function () {
    return extendLazy;
}, $foreign.force);
var commutativeRingLazy = function (dictCommutativeRing) {
    return new Data_CommutativeRing.CommutativeRing(function () {
        return ringLazy(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]());
    });
};
var euclideanRingLazy = function (dictEuclideanRing) {
    return new Data_EuclideanRing.EuclideanRing(function () {
        return commutativeRingLazy(dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]());
    }, function ($51) {
        return Data_EuclideanRing.degree(dictEuclideanRing)($foreign.force($51));
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_EuclideanRing.div(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
            });
        };
    }, function (a) {
        return function (b) {
            return $foreign.defer(function (v) {
                return Data_EuclideanRing.mod(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
            });
        };
    });
};
var fieldLazy = function (dictField) {
    return new Data_Field.Field(function () {
        return euclideanRingLazy(dictField["__superclass_Data.EuclideanRing.EuclideanRing_0"]());
    });
};
var boundedLazy = function (dictBounded) {
    return new Data_Bounded.Bounded(function () {
        return ordLazy(dictBounded["__superclass_Data.Ord.Ord_0"]());
    }, $foreign.defer(function (v) {
        return Data_Bounded.bottom(dictBounded);
    }), $foreign.defer(function (v) {
        return Data_Bounded.top(dictBounded);
    }));
};
var applyLazy = new Control_Apply.Apply(function () {
    return functorLazy;
}, function (f) {
    return function (x) {
        return $foreign.defer(function (v) {
            return $foreign.force(f)($foreign.force(x));
        });
    };
});
var bindLazy = new Control_Bind.Bind(function () {
    return applyLazy;
}, function (l) {
    return function (f) {
        return $foreign.defer(function (v) {
            return $foreign.force(f($foreign.force(l)));
        });
    };
});
var heytingAlgebraLazy = function (dictHeytingAlgebra) {
    return new Data_HeytingAlgebra.HeytingAlgebra(function (a) {
        return function (b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.conj(dictHeytingAlgebra))(a))(b);
        };
    }, function (a) {
        return function (b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.disj(dictHeytingAlgebra))(a))(b);
        };
    }, $foreign.defer(function (v) {
        return Data_HeytingAlgebra.ff(dictHeytingAlgebra);
    }), function (a) {
        return function (b) {
            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.implies(dictHeytingAlgebra))(a))(b);
        };
    }, function (a) {
        return Data_Functor.map(functorLazy)(Data_HeytingAlgebra.not(dictHeytingAlgebra))(a);
    }, $foreign.defer(function (v) {
        return Data_HeytingAlgebra.tt(dictHeytingAlgebra);
    }));
};
var booleanAlgebraLazy = function (dictBooleanAlgebra) {
    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
        return heytingAlgebraLazy(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
    });
};
var applicativeLazy = new Control_Applicative.Applicative(function () {
    return applyLazy;
}, function (a) {
    return $foreign.defer(function (v) {
        return a;
    });
});
var monadLazy = new Control_Monad.Monad(function () {
    return applicativeLazy;
}, function () {
    return bindLazy;
});
module.exports = {
    semiringLazy: semiringLazy, 
    ringLazy: ringLazy, 
    commutativeRingLazy: commutativeRingLazy, 
    euclideanRingLazy: euclideanRingLazy, 
    fieldLazy: fieldLazy, 
    eqLazy: eqLazy, 
    ordLazy: ordLazy, 
    boundedLazy: boundedLazy, 
    semigroupLazy: semigroupLazy, 
    monoidLazy: monoidLazy, 
    heytingAlgebraLazy: heytingAlgebraLazy, 
    booleanAlgebraLazy: booleanAlgebraLazy, 
    functorLazy: functorLazy, 
    applyLazy: applyLazy, 
    applicativeLazy: applicativeLazy, 
    bindLazy: bindLazy, 
    monadLazy: monadLazy, 
    extendLazy: extendLazy, 
    comonadLazy: comonadLazy, 
    showLazy: showLazy, 
    lazyLazy: lazyLazy, 
    defer: $foreign.defer, 
    force: $foreign.force
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Comonad":49,"../Control.Extend":53,"../Control.Lazy":54,"../Control.Monad":98,"../Control.Semigroupoid":104,"../Data.BooleanAlgebra":133,"../Data.Bounded":135,"../Data.CommutativeRing":140,"../Data.Eq":147,"../Data.EuclideanRing":149,"../Data.Field":151,"../Data.Function":166,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Monoid":200,"../Data.Ord":209,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Data.Unit":233,"../Prelude":266,"./foreign":184}],186:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Foldable = require("../Data.Foldable");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Semiring = require("../Data.Semiring");
var Data_Function = require("../Data.Function");
var Control_Bind = require("../Control.Bind");
var uncons = function (v) {
    return {
        head: v.value0, 
        tail: v.value1
    };
};
var toList = function (v) {
    return new Data_List_Types.Cons(v.value0, v.value1);
};
var toUnfoldable = function (dictUnfoldable) {
    return function ($35) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
                return new Data_Tuple.Tuple(rec.head, rec.tail);
            })(Data_List.uncons(xs));
        })(toList($35));
    };
};
var tail = function (v) {
    return v.value1;
};
var singleton = function ($36) {
    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($36));
};
var length = function (v) {
    return 1 + Data_List.length(v.value1) | 0;
};
var last = function (v) {
    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};
var init = function (v) {
    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
        return new Data_List_Types.Cons(v.value0, v1);
    })(Data_List.init(v.value1));
};
var head = function (v) {
    return v.value0;
};
var fromList = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty line 36, column 1 - line 36, column 25: " + [ v.constructor.name ]);
};
var fromFoldable = function (dictFoldable) {
    return function ($37) {
        return fromList(Data_List.fromFoldable(dictFoldable)($37));
    };
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));
module.exports = {
    concatMap: concatMap, 
    fromFoldable: fromFoldable, 
    fromList: fromList, 
    head: head, 
    init: init, 
    length: length, 
    singleton: singleton, 
    tail: tail, 
    toList: toList, 
    toUnfoldable: toUnfoldable, 
    uncons: uncons
};

},{"../Control.Bind":47,"../Control.Semigroupoid":104,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.List":188,"../Data.List.Types":187,"../Data.Maybe":192,"../Data.NonEmpty":203,"../Data.Semiring":218,"../Data.Tuple":229,"../Data.Unfoldable":231,"../Prelude":266}],187:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Apply = require("../Control.Apply");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Foldable = require("../Data.Foldable");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Functor = require("../Data.Functor");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Applicative = require("../Control.Applicative");
var Control_Category = require("../Control.Category");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var NonEmptyList = function (x) {
    return x;
};
var toList = function (v) {
    return new Cons(v.value0, v.value1);
};
var semigroupList = new Data_Semigroup.Semigroup(function (v) {
    return function (ys) {
        if (v instanceof Nil) {
            return ys;
        };
        if (v instanceof Cons) {
            return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
        };
        throw new Error("Failed pattern match at Data.List.Types line 53, column 3 - line 53, column 21: " + [ v.constructor.name, ys.constructor.name ]);
    };
});
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
    return function (as$prime) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
    };
});
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
    return n;
}, NonEmptyList);
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var genericList = function (dictGeneric) {
    return new Data_Generic.Generic(function (v) {
        if (v instanceof Data_Generic.SProd && (v.value0 === "Data.List.Types.Nil" && v.value1.length === 0)) {
            return new Data_Maybe.Just(Nil.value);
        };
        if (v instanceof Data_Generic.SProd && (v.value0 === "Data.List.Types.Cons" && v.value1.length === 2)) {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Cons.create))(Data_Generic.fromSpine(dictGeneric)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(genericList(dictGeneric))(v.value1[1](Data_Unit.unit)));
        };
        return Data_Maybe.Nothing.value;
    }, function ($dollarq) {
        return new Data_Generic.SigProd("Data.List.Types.List", [ {
            sigConstructor: "Data.List.Types.Nil", 
            sigValues: [  ]
        }, {
            sigConstructor: "Data.List.Types.Cons", 
            sigValues: [ function ($dollarq1) {
                return Data_Generic.toSignature(dictGeneric)(Data_Generic.anyProxy);
            }, function ($dollarq1) {
                return Data_Generic.toSignature(genericList(dictGeneric))(Data_Generic.anyProxy);
            } ]
        } ]);
    }, function (v) {
        if (v instanceof Nil) {
            return new Data_Generic.SProd("Data.List.Types.Nil", [  ]);
        };
        if (v instanceof Cons) {
            return new Data_Generic.SProd("Data.List.Types.Cons", [ function ($dollarq) {
                return Data_Generic.toSpine(dictGeneric)(v.value0);
            }, function ($dollarq) {
                return Data_Generic.toSpine(genericList(dictGeneric))(v.value1);
            } ]);
        };
        throw new Error("Failed pattern match: " + [ v.constructor.name ]);
    });
};
var genericEmptyList = function (dictGeneric) {
    return Data_Generic.genericNonEmpty(genericList(dictGeneric))(dictGeneric);
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function ($133) {
                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($133));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    var go = function (__copy_b) {
        return function (__copy_v) {
            var b = __copy_b;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return b;
                };
                if (v instanceof Cons) {
                    var __tco_b = f(b)(v.value0);
                    var __tco_v = v.value1;
                    b = __tco_b;
                    v = __tco_v;
                    continue tco;
                };
                throw new Error("Failed pattern match at Data.List.Types line 67, column 3 - line 70, column 34: " + [ b.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go;
}, function (f) {
    return function (b) {
        return function (as) {
            var rev = function (__copy_acc) {
                return function (__copy_v) {
                    var acc = __copy_acc;
                    var v = __copy_v;
                    tco: while (true) {
                        if (v instanceof Nil) {
                            return acc;
                        };
                        if (v instanceof Cons) {
                            var __tco_acc = new Cons(v.value0, acc);
                            var __tco_v = v.value1;
                            acc = __tco_acc;
                            v = __tco_v;
                            continue tco;
                        };
                        throw new Error("Failed pattern match at Data.List.Types line 63, column 3 - line 66, column 40: " + [ acc.constructor.name, v.constructor.name ]);
                    };
                };
            };
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)(as));
        };
    };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var functorList = new Data_Functor.Functor(function (f) {
    return Data_Foldable.foldr(foldableList)(function (x) {
        return function (acc) {
            return new Cons(f(x), acc);
        };
    })(Nil.value);
});
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var showList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Nil) {
            return "Nil";
        };
        return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
    });
};
var showNonEmptyList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
    });
};
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return function ($134) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($135) {
                    return Control_Apply.lift2(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Function.flip(Cons.create))(acc)(f($135));
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($134));
        };
    };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function (__copy_source) {
            return function (__copy_memo) {
                var source = __copy_source;
                var memo = __copy_memo;
                tco: while (true) {
                    var $75 = f(source);
                    if ($75 instanceof Data_Maybe.Nothing) {
                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                    };
                    if ($75 instanceof Data_Maybe.Just) {
                        var __tco_memo = new Cons($75.value0.value0, memo);
                        source = $75.value0.value1;
                        memo = __tco_memo;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List.Types line 76, column 24 - line 78, column 54: " + [ $75.constructor.name ]);
                };
            };
        };
        return go(b)(Nil.value);
    };
});
var extendNonEmptyList = new Control_Extend.Extend(function () {
    return functorNonEmptyList;
}, function (f) {
    return function (v) {
        var go = function (a) {
            return function (v1) {
                return {
                    val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val), 
                    acc: new Cons(a, v1.acc)
                };
            };
        };
        return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
            val: Nil.value, 
            acc: Nil.value
        })(v.value1)).val);
    };
});
var extendList = new Control_Extend.Extend(function () {
    return functorList;
}, function (f) {
    return function (v) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            var go = function (a$prime) {
                return function (v1) {
                    var acc$prime = new Cons(a$prime, v1.acc);
                    return {
                        val: new Cons(f(acc$prime), v1.val), 
                        acc: acc$prime
                    };
                };
            };
            return new Cons(f(v), (Data_Foldable.foldr(foldableList)(go)({
                val: Nil.value, 
                acc: Nil.value
            })(v.value1)).val);
        };
        throw new Error("Failed pattern match at Data.List.Types line 110, column 3 - line 110, column 21: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var eqList = function (dictEq) {
    return new Data_Eq.Eq(function (xs) {
        return function (ys) {
            var go = function (__copy_v) {
                return function (__copy_v1) {
                    return function (__copy_v2) {
                        var v = __copy_v;
                        var v1 = __copy_v1;
                        var v2 = __copy_v2;
                        tco: while (true) {
                            if (!v2) {
                                return false;
                            };
                            if (v instanceof Nil && v1 instanceof Nil) {
                                return v2;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                var __tco_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                v = __tco_v;
                                v1 = __tco_v1;
                                v2 = __tco_v2;
                                continue tco;
                            };
                            return false;
                        };
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    });
};
var eqNonEmptyList = function (dictEq) {
    return Data_NonEmpty.eqNonEmpty(dictEq)(eqList(dictEq));
};
var ordList = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqList(dictOrd["__superclass_Data.Eq.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            var go = function (__copy_v) {
                return function (__copy_v1) {
                    var v = __copy_v;
                    var v1 = __copy_v1;
                    tco: while (true) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            return Data_Ordering.EQ.value;
                        };
                        if (v instanceof Nil) {
                            return Data_Ordering.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            return Data_Ordering.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var $104 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if ($104 instanceof Data_Ordering.EQ) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                v = __tco_v;
                                v1 = __tco_v1;
                                continue tco;
                            };
                            return $104;
                        };
                        throw new Error("Failed pattern match at Data.List.Types line 42, column 3 - line 50, column 23: " + [ v.constructor.name, v1.constructor.name ]);
                    };
                };
            };
            return go(xs)(ys);
        };
    });
};
var ordNonEmptyList = function (dictOrd) {
    return Data_NonEmpty.ordNonEmpty(dictOrd)(ordList(dictOrd));
};
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
    return extendNonEmptyList;
}, function (v) {
    return v.value0;
});
var applyList = new Control_Apply.Apply(function () {
    return functorList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 85, column 3 - line 85, column 20: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
}, function (v) {
    return function (v1) {
        return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
});
var bindList = new Control_Bind.Bind(function () {
    return applyList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 92, column 3 - line 92, column 19: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
    return applyNonEmptyList;
}, function (v) {
    return function (f) {
        var $128 = f(v.value0);
        return new Data_NonEmpty.NonEmpty($128.value0, Data_Semigroup.append(semigroupList)($128.value1)(Control_Bind.bind(bindList)(v.value1)(function ($136) {
            return toList(f($136));
        })));
    };
});
var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function () {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return applicativeList;
}, function () {
    return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
    return alternativeList;
}, function () {
    return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
}, function ($137) {
    return NonEmptyList(Data_NonEmpty.singleton(plusList)($137));
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
    return applicativeNonEmptyList;
}, function () {
    return bindNonEmptyList;
});
module.exports = {
    Nil: Nil, 
    Cons: Cons, 
    NonEmptyList: NonEmptyList, 
    toList: toList, 
    genericList: genericList, 
    showList: showList, 
    eqList: eqList, 
    ordList: ordList, 
    semigroupList: semigroupList, 
    monoidList: monoidList, 
    functorList: functorList, 
    foldableList: foldableList, 
    unfoldableList: unfoldableList, 
    traversableList: traversableList, 
    applyList: applyList, 
    applicativeList: applicativeList, 
    bindList: bindList, 
    monadList: monadList, 
    altList: altList, 
    plusList: plusList, 
    alternativeList: alternativeList, 
    monadZeroList: monadZeroList, 
    monadPlusList: monadPlusList, 
    extendList: extendList, 
    newtypeNonEmptyList: newtypeNonEmptyList, 
    eqNonEmptyList: eqNonEmptyList, 
    ordNonEmptyList: ordNonEmptyList, 
    genericEmptyList: genericEmptyList, 
    showNonEmptyList: showNonEmptyList, 
    functorNonEmptyList: functorNonEmptyList, 
    applyNonEmptyList: applyNonEmptyList, 
    applicativeNonEmptyList: applicativeNonEmptyList, 
    bindNonEmptyList: bindNonEmptyList, 
    monadNonEmptyList: monadNonEmptyList, 
    altNonEmptyList: altNonEmptyList, 
    extendNonEmptyList: extendNonEmptyList, 
    comonadNonEmptyList: comonadNonEmptyList, 
    semigroupNonEmptyList: semigroupNonEmptyList, 
    foldableNonEmptyList: foldableNonEmptyList, 
    traversableNonEmptyList: traversableNonEmptyList
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Comonad":49,"../Control.Extend":53,"../Control.Monad":98,"../Control.MonadPlus":99,"../Control.MonadZero":100,"../Control.Plus":103,"../Control.Semigroupoid":104,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.Generic":175,"../Data.HeytingAlgebra":177,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.NonEmpty":203,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Semigroup":216,"../Data.Show":221,"../Data.Traversable":227,"../Data.Tuple":229,"../Data.Unfoldable":231,"../Data.Unit":233,"../Prelude":266}],188:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Foldable = require("../Data.Foldable");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Functor = require("../Data.Functor");
var Data_Ring = require("../Data.Ring");
var Data_Eq = require("../Data.Eq");
var Data_Ordering = require("../Data.Ordering");
var Data_Boolean = require("../Data.Boolean");
var Data_Function = require("../Data.Function");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Ord = require("../Data.Ord");
var Data_Semiring = require("../Data.Semiring");
var Control_Bind = require("../Control.Bind");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var Control_Apply = require("../Control.Apply");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Category = require("../Control.Category");
var updateAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(updateAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
var uncons = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just({
            head: v.value0, 
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 257, column 1 - line 257, column 21: " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value1);
    };
    throw new Error("Failed pattern match at Data.List line 238, column 1 - line 238, column 19: " + [ v.constructor.name ]);
};
var span = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
            var $124 = span(v)(v1.value1);
            return {
                init: new Data_List_Types.Cons(v1.value0, $124.init), 
                rest: $124.rest
            };
        };
        return {
            init: Data_List_Types.Nil.value, 
            rest: v1
        };
    };
};
var singleton = function (a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (v) {
        return function (v1) {
            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
                };
                if (Data_Boolean.otherwise) {
                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
                };
            };
            if (v instanceof Data_List_Types.Nil) {
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return v;
            };
            throw new Error("Failed pattern match at Data.List line 461, column 3 - line 463, column 41: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var mergePairs = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        };
        return v;
    };
    var mergeAll = function (__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                return v.value0;
            };
            var __tco_v = mergePairs(v);
            v = __tco_v;
            continue tco;
        };
    };
    var sequences = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            };
            if (Data_Boolean.otherwise) {
                return ascending(v.value1.value0)(function (v1) {
                    return new Data_List_Types.Cons(v.value0, v1);
                })(v.value1.value1);
            };
        };
        return singleton(v);
    };
    var descending = function (__copy_a) {
        return function (__copy_as) {
            return function (__copy_v) {
                var a = __copy_a;
                var as = __copy_as;
                var v = __copy_v;
                tco: while (true) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        var __tco_a = v.value0;
                        var __tco_as = new Data_List_Types.Cons(a, as);
                        var __tco_v = v.value1;
                        a = __tco_a;
                        as = __tco_as;
                        v = __tco_v;
                        continue tco;
                    };
                    return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
                };
            };
        };
    };
    var ascending = function (a) {
        return function (as) {
            return function (v) {
                if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                    return ascending(v.value0)(function (ys) {
                        return as(new Data_List_Types.Cons(a, ys));
                    })(v.value1);
                };
                return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
            };
        };
    };
    return function ($303) {
        return mergeAll(sequences($303));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var reverse = (function () {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Data_List_Types.Nil) {
                    return acc;
                };
                if (v instanceof Data_List_Types.Cons) {
                    var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                    var __tco_v = v.value1;
                    acc = __tco_acc;
                    v = __tco_v;
                    continue tco;
                };
                throw new Error("Failed pattern match at Data.List line 352, column 1 - line 355, column 36: " + [ acc.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var snoc = function (xs) {
    return function (x) {
        return reverse(new Data_List_Types.Cons(x, reverse(xs)));
    };
};
var take = (function () {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            return function (__copy_v1) {
                var acc = __copy_acc;
                var v = __copy_v;
                var v1 = __copy_v1;
                tco: while (true) {
                    if (v === 0) {
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Nil) {
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Cons) {
                        var __tco_acc = new Data_List_Types.Cons(v1.value0, acc);
                        var __tco_v = v - 1;
                        var __tco_v1 = v1.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 479, column 1 - line 483, column 46: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                };
            };
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var takeWhile = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                    var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                    var __tco_v = v.value1;
                    acc = __tco_acc;
                    v = __tco_v;
                    continue tco;
                };
                return reverse(acc);
            };
        };
    };
    return go(Data_List_Types.Nil.value);
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function (__copy_v) {
                return function (__copy_v1) {
                    return function (__copy_acc) {
                        var v = __copy_v;
                        var v1 = __copy_v1;
                        var acc = __copy_acc;
                        tco: while (true) {
                            if (v instanceof Data_List_Types.Nil) {
                                return acc;
                            };
                            if (v1 instanceof Data_List_Types.Nil) {
                                return acc;
                            };
                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                var __tco_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                v = __tco_v;
                                v1 = __tco_v1;
                                acc = __tco_acc;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at Data.List line 643, column 1 - line 647, column 52: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                        };
                    };
                };
            };
            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Data_Boolean.otherwise) {
            var go = function (__copy_s) {
                return function (__copy_e) {
                    return function (__copy_step) {
                        return function (__copy_rest) {
                            var s = __copy_s;
                            var e = __copy_e;
                            var step = __copy_step;
                            var rest = __copy_rest;
                            tco: while (true) {
                                if (s === e) {
                                    return new Data_List_Types.Cons(s, rest);
                                };
                                if (Data_Boolean.otherwise) {
                                    var __tco_s = s + step | 0;
                                    var __tco_e = e;
                                    var __tco_step = step;
                                    var __tco_rest = new Data_List_Types.Cons(s, rest);
                                    s = __tco_s;
                                    e = __tco_e;
                                    step = __tco_step;
                                    rest = __tco_rest;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match at Data.List line 137, column 1 - line 141, column 65: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var $184 = start > end;
                if ($184) {
                    return 1;
                };
                if (!$184) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.List line 138, column 45 - line 138, column 74: " + [ $184.constructor.name ]);
            })())(Data_List_Types.Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 137, column 1 - line 141, column 65: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var $$null = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return true;
    };
    return false;
};
var mapWithIndex = function (f) {
    return function (lst) {
        var go = function (__copy_v) {
            return function (__copy_v1) {
                return function (__copy_acc) {
                    var v = __copy_v;
                    var v1 = __copy_v1;
                    var acc = __copy_acc;
                    tco: while (true) {
                        if (v1 instanceof Data_List_Types.Nil) {
                            return acc;
                        };
                        if (v1 instanceof Data_List_Types.Cons) {
                            var __tco_v = v + 1 | 0;
                            var __tco_v1 = v1.value1;
                            var __tco_acc = new Data_List_Types.Cons(f(v1.value0)(v), acc);
                            v = __tco_v;
                            v1 = __tco_v1;
                            acc = __tco_acc;
                            continue tco;
                        };
                        throw new Error("Failed pattern match at Data.List line 417, column 1 - line 420, column 48: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                    };
                };
            };
        };
        return reverse(go(0)(lst)(Data_List_Types.Nil.value));
    };
};
var mapMaybe = function (f) {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Data_List_Types.Nil) {
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    var $193 = f(v.value0);
                    if ($193 instanceof Data_Maybe.Nothing) {
                        var __tco_acc = acc;
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    if ($193 instanceof Data_Maybe.Just) {
                        var __tco_acc = new Data_List_Types.Cons($193.value0, acc);
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 405, column 5 - line 407, column 32: " + [ $193.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List line 401, column 1 - line 407, column 32: " + [ acc.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go(Data_List_Types.Nil.value);
};
var manyRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (p) {
            var go = function (acc) {
                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
                    return Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                        return new Data_List_Types.Cons(v1, acc);
                    })(function (v1) {
                        return reverse(acc);
                    })(v));
                });
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
        };
    };
};
var someRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (v) {
            return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
        };
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(Data_List_Types.Nil.value));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
    return function (v) {
        return acc + 1 | 0;
    };
})(0);
var last = function (__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
            return new Data_Maybe.Just(v.value0);
        };
        if (v instanceof Data_List_Types.Cons) {
            var __tco_v = v.value1;
            v = __tco_v;
            continue tco;
        };
        return Data_Maybe.Nothing.value;
    };
};
var insertBy = function (v) {
    return function (x) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return singleton(x);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                var $209 = v(x)(v1.value0);
                if ($209 instanceof Data_Ordering.GT) {
                    return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
                };
                return new Data_List_Types.Cons(x, v1);
            };
            throw new Error("Failed pattern match at Data.List line 209, column 1 - line 209, column 31: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
        };
    };
};
var insertAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(insertAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var init = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    var go = function (__copy_v1) {
        return function (__copy_acc) {
            var v1 = __copy_v1;
            var acc = __copy_acc;
            tco: while (true) {
                if (v1 instanceof Data_List_Types.Cons && v1.value1 instanceof Data_List_Types.Nil) {
                    return acc;
                };
                if (v1 instanceof Data_List_Types.Cons) {
                    var __tco_v1 = v1.value1;
                    var __tco_acc = new Data_List_Types.Cons(v1.value0, acc);
                    v1 = __tco_v1;
                    acc = __tco_acc;
                    continue tco;
                };
                return acc;
            };
        };
    };
    return Data_Maybe.Just.create(reverse(go(v)(Data_List_Types.Nil.value)));
};
var index = function (__copy_v) {
    return function (__copy_v1) {
        var v = __copy_v;
        var v1 = __copy_v1;
        tco: while (true) {
            if (v instanceof Data_List_Types.Nil) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Data_List_Types.Cons && v1 === 0) {
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Data_List_Types.Cons) {
                var __tco_v = v.value1;
                var __tco_v1 = v1 - 1;
                v = __tco_v;
                v1 = __tco_v1;
                continue tco;
            };
            throw new Error("Failed pattern match at Data.List line 268, column 1 - line 268, column 22: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var head = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.List line 223, column 1 - line 223, column 19: " + [ v.constructor.name ]);
};
var transpose = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
        return transpose(v.value1);
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
    };
    throw new Error("Failed pattern match at Data.List line 680, column 1 - line 680, column 20: " + [ v.constructor.name ]);
};
var groupBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            var $242 = span(v(v1.value0))(v1.value1);
            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, $242.init), groupBy(v)($242.rest));
        };
        throw new Error("Failed pattern match at Data.List line 553, column 1 - line 553, column 20: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var group = function (dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var group$prime = function (dictOrd) {
    return function ($304) {
        return group(dictOrd["__superclass_Data.Eq.Eq_0"]())(sort(dictOrd)($304));
    };
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};
var foldM = function (dictMonad) {
    return function (v) {
        return function (a) {
            return function (v1) {
                if (v1 instanceof Data_List_Types.Nil) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
                };
                if (v1 instanceof Data_List_Types.Cons) {
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(a)(v1.value0))(function (a$prime) {
                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
                    });
                };
                throw new Error("Failed pattern match at Data.List line 691, column 1 - line 691, column 23: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function (__copy_v) {
        return function (__copy_v1) {
            var v = __copy_v;
            var v1 = __copy_v1;
            tco: while (true) {
                if (v1 instanceof Data_List_Types.Cons) {
                    if (fn(v1.value0)) {
                        return new Data_Maybe.Just(v);
                    };
                    if (Data_Boolean.otherwise) {
                        var __tco_v = v + 1 | 0;
                        var __tco_v1 = v1.value1;
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                };
                if (v1 instanceof Data_List_Types.Nil) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 288, column 3 - line 289, column 44: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
            return length(xs) - 1 - v;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_List_Types.Nil.value);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(v1.value0))(function (v2) {
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())((function () {
                            if (v2) {
                                return new Data_List_Types.Cons(v1.value0, v3);
                            };
                            if (!v2) {
                                return v3;
                            };
                            throw new Error("Failed pattern match at Data.List line 394, column 3 - line 394, column 34: " + [ v2.constructor.name ]);
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List line 390, column 1 - line 390, column 25: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Data_List_Types.Nil) {
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (p(v.value0)) {
                        var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    if (Data_Boolean.otherwise) {
                        var __tco_acc = acc;
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 374, column 1 - line 379, column 28: " + [ acc.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go(Data_List_Types.Nil.value);
};
var intersectBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
                return !v(v1.value0)(y);
            })(v1.value1)));
        };
        throw new Error("Failed pattern match at Data.List line 572, column 1 - line 572, column 22: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function (__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                var __tco_v = v.value1;
                v = __tco_v;
                continue tco;
            };
            return v;
        };
    };
    return go;
};
var drop = function (__copy_v) {
    return function (__copy_v1) {
        var v = __copy_v;
        var v1 = __copy_v1;
        tco: while (true) {
            if (v === 0) {
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v1 instanceof Data_List_Types.Cons) {
                var __tco_v = v - 1;
                var __tco_v1 = v1.value1;
                v = __tco_v;
                v1 = __tco_v1;
                continue tco;
            };
            throw new Error("Failed pattern match at Data.List line 498, column 1 - line 498, column 15: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start)(drop(start)(xs));
        };
    };
};
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
                return v2.value1;
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            };
            throw new Error("Failed pattern match at Data.List line 599, column 1 - line 599, column 23: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function (v) {
    return function (v1) {
        if (v === 0 && v1 instanceof Data_List_Types.Cons) {
            return new Data_Maybe.Just(v1.value1);
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                return new Data_List_Types.Cons(v1.value0, v2);
            })(deleteAt(v - 1)(v1.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return Data_Maybe.Just.create((function () {
                    var $297 = v1(v2.value0);
                    if ($297 instanceof Data_Maybe.Nothing) {
                        return v2.value1;
                    };
                    if ($297 instanceof Data_Maybe.Just) {
                        return new Data_List_Types.Cons($297.value0, v2.value1);
                    };
                    throw new Error("Failed pattern match at Data.List line 337, column 24 - line 340, column 23: " + [ $297.constructor.name ]);
                })());
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(alterAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($305) {
            return Data_Maybe.Just.create(f($305));
        });
    };
};
module.exports = {
    alterAt: alterAt, 
    catMaybes: catMaybes, 
    concat: concat, 
    concatMap: concatMap, 
    "delete": $$delete, 
    deleteAt: deleteAt, 
    deleteBy: deleteBy, 
    difference: difference, 
    drop: drop, 
    dropWhile: dropWhile, 
    elemIndex: elemIndex, 
    elemLastIndex: elemLastIndex, 
    filter: filter, 
    filterM: filterM, 
    findIndex: findIndex, 
    findLastIndex: findLastIndex, 
    foldM: foldM, 
    fromFoldable: fromFoldable, 
    group: group, 
    "group'": group$prime, 
    groupBy: groupBy, 
    head: head, 
    index: index, 
    init: init, 
    insert: insert, 
    insertAt: insertAt, 
    insertBy: insertBy, 
    intersect: intersect, 
    intersectBy: intersectBy, 
    last: last, 
    length: length, 
    many: many, 
    manyRec: manyRec, 
    mapMaybe: mapMaybe, 
    mapWithIndex: mapWithIndex, 
    modifyAt: modifyAt, 
    nub: nub, 
    nubBy: nubBy, 
    "null": $$null, 
    range: range, 
    reverse: reverse, 
    singleton: singleton, 
    slice: slice, 
    snoc: snoc, 
    some: some, 
    someRec: someRec, 
    sort: sort, 
    sortBy: sortBy, 
    span: span, 
    tail: tail, 
    take: take, 
    takeWhile: takeWhile, 
    toUnfoldable: toUnfoldable, 
    transpose: transpose, 
    uncons: uncons, 
    union: union, 
    unionBy: unionBy, 
    unzip: unzip, 
    updateAt: updateAt, 
    zip: zip, 
    zipWith: zipWith, 
    zipWithA: zipWithA
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Lazy":54,"../Control.Monad.Rec.Class":90,"../Control.Semigroupoid":104,"../Data.Bifunctor":130,"../Data.Boolean":132,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.List.Types":187,"../Data.Maybe":192,"../Data.NonEmpty":203,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Traversable":227,"../Data.Tuple":229,"../Data.Unfoldable":231,"../Data.Unit":233,"../Prelude":266}],189:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Foldable = require("../Data.Foldable");
var Data_List = require("../Data.List");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Category = require("../Control.Category");
var Data_List_Types = require("../Data.List.Types");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Ordering = require("../Data.Ordering");
var Data_Function = require("../Data.Function");
var Data_Semiring = require("../Data.Semiring");
var Leaf = (function () {
    function Leaf() {

    };
    Leaf.value = new Leaf();
    return Leaf;
})();
var Two = (function () {
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    return Two;
})();
var Three = (function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return Three;
})();
var TwoLeft = (function () {
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    return TwoLeft;
})();
var TwoRight = (function () {
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    return TwoRight;
})();
var ThreeLeft = (function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeLeft;
})();
var ThreeMiddle = (function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeMiddle;
})();
var ThreeRight = (function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeRight;
})();
var KickUp = (function () {
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    return KickUp;
})();
var values = function (v) {
    if (v instanceof Leaf) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Two) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
    };
    if (v instanceof Three) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
    };
    throw new Error("Failed pattern match at Data.Map line 391, column 1 - line 391, column 18: " + [ v.constructor.name ]);
};
var toList = function (v) {
    if (v instanceof Leaf) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Two) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(toList(v.value0))(new Data_List_Types.Cons(new Data_Tuple.Tuple(v.value1, v.value2), toList(v.value3)));
    };
    if (v instanceof Three) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(toList(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(new Data_List_Types.Cons(new Data_Tuple.Tuple(v.value1, v.value2), toList(v.value3)))(new Data_List_Types.Cons(new Data_Tuple.Tuple(v.value4, v.value5), toList(v.value6))));
    };
    throw new Error("Failed pattern match at Data.Map line 370, column 1 - line 370, column 18: " + [ v.constructor.name ]);
};
var size = function ($620) {
    return Data_List.length(values($620));
};
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (dictShow) {
    return function (dictShow1) {
        return function (v) {
            if (v instanceof Leaf) {
                return "Leaf";
            };
            if (v instanceof Two) {
                return "Two (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + ")")))))));
            };
            if (v instanceof Three) {
                return "Three (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + (") (" + (Data_Show.show(dictShow)(v.value4) + (") (" + (Data_Show.show(dictShow1)(v.value5) + (") (" + (showTree(dictShow)(dictShow1)(v.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match at Data.Map line 86, column 1 - line 87, column 1: " + [ v.constructor.name ]);
        };
    };
};
var showMap = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (m) {
            return "(fromList " + (Data_Show.show(Data_List_Types.showList(Data_Tuple.showTuple(dictShow)(dictShow1)))(toList(m)) + ")");
        });
    };
};
var mapWithKey = function (v) {
    return function (v1) {
        if (v1 instanceof Leaf) {
            return Leaf.value;
        };
        if (v1 instanceof Two) {
            return new Two(mapWithKey(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), mapWithKey(v)(v1.value3));
        };
        if (v1 instanceof Three) {
            return new Three(mapWithKey(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), mapWithKey(v)(v1.value3), v1.value4, v(v1.value4)(v1.value5), mapWithKey(v)(v1.value6));
        };
        throw new Error("Failed pattern match at Data.Map line 417, column 1 - line 417, column 25: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var lookupLE = function (dictOrd) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v1 instanceof Two) {
                var $133 = Data_Ord.compare(dictOrd)(v)(v1.value1);
                if ($133 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v1.value1, 
                        value: v1.value2
                    });
                };
                if ($133 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v1.value1, 
                        value: v1.value2
                    })(lookupLE(dictOrd)(v)(v1.value3)));
                };
                if ($133 instanceof Data_Ordering.LT) {
                    return lookupLE(dictOrd)(v)(v1.value0);
                };
                throw new Error("Failed pattern match at Data.Map line 153, column 37 - line 156, column 24: " + [ $133.constructor.name ]);
            };
            if (v1 instanceof Three) {
                var $138 = Data_Ord.compare(dictOrd)(v)(v1.value4);
                if ($138 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v1.value4, 
                        value: v1.value5
                    });
                };
                if ($138 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v1.value4, 
                        value: v1.value5
                    })(lookupLE(dictOrd)(v)(v1.value6)));
                };
                if ($138 instanceof Data_Ordering.LT) {
                    return lookupLE(dictOrd)(v)(new Two(v1.value0, v1.value1, v1.value2, v1.value3));
                };
                throw new Error("Failed pattern match at Data.Map line 157, column 49 - line 160, column 40: " + [ $138.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map line 152, column 1 - line 152, column 26: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var lookupGE = function (dictOrd) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v1 instanceof Two) {
                var $148 = Data_Ord.compare(dictOrd)(v)(v1.value1);
                if ($148 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v1.value1, 
                        value: v1.value2
                    });
                };
                if ($148 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v1.value1, 
                        value: v1.value2
                    })(lookupGE(dictOrd)(v)(v1.value0)));
                };
                if ($148 instanceof Data_Ordering.GT) {
                    return lookupGE(dictOrd)(v)(v1.value3);
                };
                throw new Error("Failed pattern match at Data.Map line 177, column 37 - line 180, column 25: " + [ $148.constructor.name ]);
            };
            if (v1 instanceof Three) {
                var $153 = Data_Ord.compare(dictOrd)(v)(v1.value1);
                if ($153 instanceof Data_Ordering.EQ) {
                    return new Data_Maybe.Just({
                        key: v1.value1, 
                        value: v1.value2
                    });
                };
                if ($153 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v1.value1, 
                        value: v1.value2
                    })(lookupGE(dictOrd)(v)(v1.value0)));
                };
                if ($153 instanceof Data_Ordering.GT) {
                    return lookupGE(dictOrd)(v)(new Two(v1.value3, v1.value4, v1.value5, v1.value6));
                };
                throw new Error("Failed pattern match at Data.Map line 181, column 49 - line 184, column 41: " + [ $153.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map line 176, column 1 - line 176, column 26: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var lookup = function (dictOrd) {
    return Partial_Unsafe.unsafePartial(function (dictPartial) {
        return function (k) {
            return function (tree) {
                if (tree instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                var comp = Data_Ord.compare(dictOrd);
                var __unused = function (dictPartial1) {
                    return function ($dollar38) {
                        return $dollar38;
                    };
                };
                return __unused(dictPartial)((function () {
                    if (tree instanceof Two) {
                        var $163 = comp(k)(tree.value1);
                        if ($163 instanceof Data_Ordering.EQ) {
                            return new Data_Maybe.Just(tree.value2);
                        };
                        if ($163 instanceof Data_Ordering.LT) {
                            return lookup(dictOrd)(k)(tree.value0);
                        };
                        return lookup(dictOrd)(k)(tree.value3);
                    };
                    if (tree instanceof Three) {
                        var $168 = comp(k)(tree.value1);
                        if ($168 instanceof Data_Ordering.EQ) {
                            return new Data_Maybe.Just(tree.value2);
                        };
                        var $170 = comp(k)(tree.value4);
                        if ($170 instanceof Data_Ordering.EQ) {
                            return new Data_Maybe.Just(tree.value5);
                        };
                        if ($168 instanceof Data_Ordering.LT) {
                            return lookup(dictOrd)(k)(tree.value0);
                        };
                        if ($170 instanceof Data_Ordering.GT) {
                            return lookup(dictOrd)(k)(tree.value6);
                        };
                        return lookup(dictOrd)(k)(tree.value3);
                    };
                    throw new Error("Failed pattern match at Data.Map line 133, column 10 - line 147, column 39: " + [ tree.constructor.name ]);
                })());
            };
        };
    });
};
var member = function (dictOrd) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
        };
    };
};
var keys = function (v) {
    if (v instanceof Leaf) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Two) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
    };
    if (v instanceof Three) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
    };
    throw new Error("Failed pattern match at Data.Map line 385, column 1 - line 385, column 16: " + [ v.constructor.name ]);
};
var isEmpty = function (v) {
    if (v instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Leaf) {
            return Leaf.value;
        };
        if (v1 instanceof Two) {
            return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
        };
        if (v1 instanceof Three) {
            return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
        };
        throw new Error("Failed pattern match at Data.Map line 71, column 3 - line 71, column 20: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var fromZipper = function (__copy_dictOrd) {
    return function (__copy_v) {
        return function (__copy_tree) {
            var dictOrd = __copy_dictOrd;
            var v = __copy_v;
            var tree = __copy_tree;
            tco: while (true) {
                if (v instanceof Data_List_Types.Nil) {
                    return tree;
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof TwoLeft) {
                        var __tco_dictOrd = dictOrd;
                        var __tco_v = v.value1;
                        var __tco_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                        dictOrd = __tco_dictOrd;
                        v = __tco_v;
                        tree = __tco_tree;
                        continue tco;
                    };
                    if (v.value0 instanceof TwoRight) {
                        var __tco_dictOrd = dictOrd;
                        var __tco_v = v.value1;
                        var __tco_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                        dictOrd = __tco_dictOrd;
                        v = __tco_v;
                        tree = __tco_tree;
                        continue tco;
                    };
                    if (v.value0 instanceof ThreeLeft) {
                        var __tco_dictOrd = dictOrd;
                        var __tco_v = v.value1;
                        var __tco_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                        dictOrd = __tco_dictOrd;
                        v = __tco_v;
                        tree = __tco_tree;
                        continue tco;
                    };
                    if (v.value0 instanceof ThreeMiddle) {
                        var __tco_dictOrd = dictOrd;
                        var __tco_v = v.value1;
                        var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                        dictOrd = __tco_dictOrd;
                        v = __tco_v;
                        tree = __tco_tree;
                        continue tco;
                    };
                    if (v.value0 instanceof ThreeRight) {
                        var __tco_dictOrd = dictOrd;
                        var __tco_v = v.value1;
                        var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                        dictOrd = __tco_dictOrd;
                        v = __tco_v;
                        tree = __tco_tree;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.Map line 224, column 3 - line 229, column 88: " + [ v.value0.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Map line 222, column 1 - line 222, column 27: " + [ v.constructor.name, tree.constructor.name ]);
            };
        };
    };
};
var insert = function (dictOrd) {
    var up = function (__copy_v) {
        return function (__copy_v1) {
            var v = __copy_v;
            var v1 = __copy_v1;
            tco: while (true) {
                if (v instanceof Data_List_Types.Nil) {
                    return new Two(v1.value0, v1.value1, v1.value2, v1.value3);
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (v.value0 instanceof TwoLeft) {
                        return fromZipper(dictOrd)(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, v.value0.value0, v.value0.value1, v.value0.value2));
                    };
                    if (v.value0 instanceof TwoRight) {
                        return fromZipper(dictOrd)(v.value1)(new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0, v1.value1, v1.value2, v1.value3));
                    };
                    if (v.value0 instanceof ThreeLeft) {
                        var __tco_v = v.value1;
                        var __tco_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2, v1.value3), v.value0.value0, v.value0.value1, new Two(v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5));
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    if (v.value0 instanceof ThreeMiddle) {
                        var __tco_v = v.value1;
                        var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0), v1.value1, v1.value2, new Two(v1.value3, v.value0.value3, v.value0.value4, v.value0.value5));
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    if (v.value0 instanceof ThreeRight) {
                        var __tco_v = v.value1;
                        var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3), v.value0.value4, v.value0.value5, new Two(v1.value0, v1.value1, v1.value2, v1.value3));
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.Map line 260, column 5 - line 265, column 104: " + [ v.value0.constructor.name, v1.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.Map line 258, column 3 - line 258, column 54: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
    };
    var comp = Data_Ord.compare(dictOrd);
    var down = function (__copy_ctx) {
        return function (__copy_k) {
            return function (__copy_v) {
                return function (__copy_v1) {
                    var ctx = __copy_ctx;
                    var k = __copy_k;
                    var v = __copy_v;
                    var v1 = __copy_v1;
                    tco: while (true) {
                        if (v1 instanceof Leaf) {
                            return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                        };
                        if (v1 instanceof Two) {
                            var $291 = comp(k)(v1.value1);
                            if ($291 instanceof Data_Ordering.EQ) {
                                return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                            };
                            if ($291 instanceof Data_Ordering.LT) {
                                var __tco_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco_v1 = v1.value0;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                v1 = __tco_v1;
                                continue tco;
                            };
                            var __tco_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                            var __tco_k = k;
                            var __tco_v = v;
                            var __tco_v1 = v1.value3;
                            ctx = __tco_ctx;
                            k = __tco_k;
                            v = __tco_v;
                            v1 = __tco_v1;
                            continue tco;
                        };
                        if (v1 instanceof Three) {
                            var $296 = comp(k)(v1.value1);
                            if ($296 instanceof Data_Ordering.EQ) {
                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                            };
                            var $298 = comp(k)(v1.value4);
                            if ($298 instanceof Data_Ordering.EQ) {
                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                            };
                            if ($296 instanceof Data_Ordering.LT) {
                                var __tco_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco_v1 = v1.value0;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                v1 = __tco_v1;
                                continue tco;
                            };
                            if ($296 instanceof Data_Ordering.GT && $298 instanceof Data_Ordering.LT) {
                                var __tco_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco_v1 = v1.value3;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                v1 = __tco_v1;
                                continue tco;
                            };
                            var __tco_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                            var __tco_k = k;
                            var __tco_v = v;
                            var __tco_v1 = v1.value6;
                            ctx = __tco_ctx;
                            k = __tco_k;
                            v = __tco_v;
                            v1 = __tco_v1;
                            continue tco;
                        };
                        throw new Error("Failed pattern match at Data.Map line 241, column 3 - line 241, column 52: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, v1.constructor.name ]);
                    };
                };
            };
        };
    };
    return down(Data_List_Types.Nil.value);
};
var pop = function (dictOrd) {
    var up = Partial_Unsafe.unsafePartial(function (dictPartial) {
        return function (ctxs) {
            return function (tree) {
                if (ctxs instanceof Data_List_Types.Nil) {
                    return tree;
                };
                if (ctxs instanceof Data_List_Types.Cons) {
                    var __unused = function (dictPartial1) {
                        return function ($dollar48) {
                            return $dollar48;
                        };
                    };
                    return __unused(dictPartial)((function () {
                        if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                        };
                        if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                        };
                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                            return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
                        };
                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                            return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
                        };
                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                        };
                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                        };
                        if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                        };
                        if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                        };
                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                        };
                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                        };
                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                        };
                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                        };
                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                        };
                        throw new Error("Failed pattern match at Data.Map line 310, column 9 - line 327, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                    })());
                };
                throw new Error("Failed pattern match at Data.Map line 307, column 5 - line 327, column 136: " + [ ctxs.constructor.name ]);
            };
        };
    });
    var removeMaxNode = Partial_Unsafe.unsafePartial(function (dictPartial) {
        return function (ctx) {
            return function (m) {
                var __unused = function (dictPartial1) {
                    return function ($dollar50) {
                        return $dollar50;
                    };
                };
                return __unused(dictPartial)((function () {
                    if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                        return up(ctx)(Leaf.value);
                    };
                    if (m instanceof Two) {
                        return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
                    };
                    if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                        return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                    };
                    if (m instanceof Three) {
                        return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
                    };
                    throw new Error("Failed pattern match at Data.Map line 339, column 5 - line 343, column 107: " + [ m.constructor.name ]);
                })());
            };
        };
    });
    var maxNode = Partial_Unsafe.unsafePartial(function (dictPartial) {
        return function (m) {
            var __unused = function (dictPartial1) {
                return function ($dollar52) {
                    return $dollar52;
                };
            };
            return __unused(dictPartial)((function () {
                if (m instanceof Two && m.value3 instanceof Leaf) {
                    return {
                        key: m.value1, 
                        value: m.value2
                    };
                };
                if (m instanceof Two) {
                    return maxNode(m.value3);
                };
                if (m instanceof Three && m.value6 instanceof Leaf) {
                    return {
                        key: m.value4, 
                        value: m.value5
                    };
                };
                if (m instanceof Three) {
                    return maxNode(m.value6);
                };
                throw new Error("Failed pattern match at Data.Map line 330, column 33 - line 334, column 45: " + [ m.constructor.name ]);
            })());
        };
    });
    var comp = Data_Ord.compare(dictOrd);
    var down = Partial_Unsafe.unsafePartial(function (dictPartial) {
        return function (ctx) {
            return function (k) {
                return function (m) {
                    if (m instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (m instanceof Two) {
                        var $509 = comp(k)(m.value1);
                        if (m.value3 instanceof Leaf && $509 instanceof Data_Ordering.EQ) {
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                        };
                        if ($509 instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value0);
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                        };
                        if ($509 instanceof Data_Ordering.LT) {
                            return down(new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx))(k)(m.value0);
                        };
                        return down(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(k)(m.value3);
                    };
                    if (m instanceof Three) {
                        var leaves = (function () {
                            if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                return true;
                            };
                            return false;
                        })();
                        var $518 = comp(k)(m.value1);
                        var $519 = comp(k)(m.value4);
                        if (leaves && $518 instanceof Data_Ordering.EQ) {
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                        };
                        if (leaves && $519 instanceof Data_Ordering.EQ) {
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                        };
                        if ($518 instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value0);
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                        };
                        if ($519 instanceof Data_Ordering.EQ) {
                            var max = maxNode(m.value3);
                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                        };
                        if ($518 instanceof Data_Ordering.LT) {
                            return down(new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx))(k)(m.value0);
                        };
                        if ($518 instanceof Data_Ordering.GT && $519 instanceof Data_Ordering.LT) {
                            return down(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx))(k)(m.value3);
                        };
                        return down(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(k)(m.value6);
                    };
                    throw new Error("Failed pattern match at Data.Map line 280, column 36 - line 303, column 82: " + [ m.constructor.name ]);
                };
            };
        };
    });
    return down(Data_List_Types.Nil.value);
};
var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
        };
    };
});
var findMin = function (v) {
    if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Two) {
        return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1, 
            value: v.value2
        })(findMin(v.value0)));
    };
    if (v instanceof Three) {
        return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1, 
            value: v.value2
        })(findMin(v.value0)));
    };
    throw new Error("Failed pattern match at Data.Map line 206, column 1 - line 206, column 23: " + [ v.constructor.name ]);
};
var lookupGT = function (dictOrd) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v1 instanceof Two) {
                var $541 = Data_Ord.compare(dictOrd)(v)(v1.value1);
                if ($541 instanceof Data_Ordering.EQ) {
                    return findMin(v1.value3);
                };
                if ($541 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v1.value1, 
                        value: v1.value2
                    })(lookupGT(dictOrd)(v)(v1.value0)));
                };
                if ($541 instanceof Data_Ordering.GT) {
                    return lookupGT(dictOrd)(v)(v1.value3);
                };
                throw new Error("Failed pattern match at Data.Map line 189, column 37 - line 192, column 25: " + [ $541.constructor.name ]);
            };
            if (v1 instanceof Three) {
                var $546 = Data_Ord.compare(dictOrd)(v)(v1.value1);
                if ($546 instanceof Data_Ordering.EQ) {
                    return findMin(new Two(v1.value3, v1.value4, v1.value5, v1.value6));
                };
                if ($546 instanceof Data_Ordering.LT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v1.value1, 
                        value: v1.value2
                    })(lookupGT(dictOrd)(v)(v1.value0)));
                };
                if ($546 instanceof Data_Ordering.GT) {
                    return lookupGT(dictOrd)(v)(new Two(v1.value3, v1.value4, v1.value5, v1.value6));
                };
                throw new Error("Failed pattern match at Data.Map line 193, column 49 - line 196, column 41: " + [ $546.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map line 188, column 1 - line 188, column 26: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var findMax = function (v) {
    if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Two) {
        return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1, 
            value: v.value2
        })(findMax(v.value3)));
    };
    if (v instanceof Three) {
        return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value4, 
            value: v.value5
        })(findMax(v.value6)));
    };
    throw new Error("Failed pattern match at Data.Map line 200, column 1 - line 200, column 23: " + [ v.constructor.name ]);
};
var lookupLT = function (dictOrd) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v1 instanceof Two) {
                var $568 = Data_Ord.compare(dictOrd)(v)(v1.value1);
                if ($568 instanceof Data_Ordering.EQ) {
                    return findMax(v1.value0);
                };
                if ($568 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v1.value1, 
                        value: v1.value2
                    })(lookupLT(dictOrd)(v)(v1.value3)));
                };
                if ($568 instanceof Data_Ordering.LT) {
                    return lookupLT(dictOrd)(v)(v1.value0);
                };
                throw new Error("Failed pattern match at Data.Map line 165, column 37 - line 168, column 24: " + [ $568.constructor.name ]);
            };
            if (v1 instanceof Three) {
                var $573 = Data_Ord.compare(dictOrd)(v)(v1.value4);
                if ($573 instanceof Data_Ordering.EQ) {
                    return findMax(new Two(v1.value0, v1.value1, v1.value2, v1.value3));
                };
                if ($573 instanceof Data_Ordering.GT) {
                    return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
                        key: v1.value4, 
                        value: v1.value5
                    })(lookupLT(dictOrd)(v)(v1.value6)));
                };
                if ($573 instanceof Data_Ordering.LT) {
                    return lookupLT(dictOrd)(v)(new Two(v1.value0, v1.value1, v1.value2, v1.value3));
                };
                throw new Error("Failed pattern match at Data.Map line 169, column 49 - line 172, column 40: " + [ $573.constructor.name ]);
            };
            throw new Error("Failed pattern match at Data.Map line 164, column 1 - line 164, column 26: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var eqMap = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (m1) {
            return function (m2) {
                return Data_Eq.eq(Data_List_Types.eqList(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toList(m1))(toList(m2));
            };
        });
    };
};
var ordMap = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqMap(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
        }, function (m1) {
            return function (m2) {
                return Data_Ord.compare(Data_List_Types.ordList(Data_Tuple.ordTuple(dictOrd)(dictOrd1)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromFoldable = function (dictOrd) {
    return function (dictFoldable) {
        return Data_Foldable.foldl(dictFoldable)(function (m) {
            return function (v) {
                return insert(dictOrd)(v.value0)(v.value1)(m);
            };
        })(empty);
    };
};
var $$delete = function (dictOrd) {
    return function (k) {
        return function (m) {
            return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
        };
    };
};
var checkValid = function (tree) {
    var allHeights = function (v) {
        if (v instanceof Leaf) {
            return Control_Applicative.pure(Data_List_Types.applicativeList)(0);
        };
        if (v instanceof Two) {
            return Data_Functor.map(Data_List_Types.functorList)(function (n) {
                return n + 1 | 0;
            })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(allHeights(v.value3)));
        };
        if (v instanceof Three) {
            return Data_Functor.map(Data_List_Types.functorList)(function (n) {
                return n + 1 | 0;
            })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value3))(allHeights(v.value6))));
        };
        throw new Error("Failed pattern match at Data.Map line 121, column 3 - line 121, column 30: " + [ v.constructor.name ]);
    };
    return Data_List.length(Data_List.nub(Data_Eq.eqInt)(allHeights(tree))) === 1;
};
var alter = function (dictOrd) {
    return function (f) {
        return function (k) {
            return function (m) {
                var $596 = f(lookup(dictOrd)(k)(m));
                if ($596 instanceof Data_Maybe.Nothing) {
                    return $$delete(dictOrd)(k)(m);
                };
                if ($596 instanceof Data_Maybe.Just) {
                    return insert(dictOrd)(k)($596.value0)(m);
                };
                throw new Error("Failed pattern match at Data.Map line 348, column 15 - line 350, column 25: " + [ $596.constructor.name ]);
            };
        };
    };
};
var fromFoldableWith = function (dictOrd) {
    return function (dictFoldable) {
        return function (f) {
            var combine = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_Maybe.Just) {
                        return Data_Maybe.Just.create(f(v)(v1.value0));
                    };
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return new Data_Maybe.Just(v);
                    };
                    throw new Error("Failed pattern match at Data.Map line 365, column 3 - line 365, column 38: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Foldable.foldl(dictFoldable)(function (m) {
                return function (v) {
                    return alter(dictOrd)(combine(v.value1))(v.value0)(m);
                };
            })(empty);
        };
    };
};
var unionWith = function (dictOrd) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (m) {
                    return function (v) {
                        return alter(dictOrd)(function ($621) {
                            return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($621));
                        })(v.value0)(m);
                    };
                };
                return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (dictOrd) {
    return unionWith(dictOrd)(Data_Function["const"]);
};
var semigroupMap = function (dictOrd) {
    return new Data_Semigroup.Semigroup(union(dictOrd));
};
var monoidMap = function (dictOrd) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(dictOrd);
    }, empty);
};
var toUnfoldable = function (dictOrd) {
    return function (dictUnfoldable) {
        var go = function (v) {
            if (v instanceof Leaf) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Two) {
                return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value1, v.value2), Data_Semigroup.append(semigroupMap(dictOrd))(v.value0)(v.value3)));
            };
            if (v instanceof Three) {
                return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value1, v.value2), insert(dictOrd)(v.value4)(v.value5)(Data_Semigroup.append(semigroupMap(dictOrd))(v.value0)(Data_Semigroup.append(semigroupMap(dictOrd))(v.value3)(v.value6)))));
            };
            throw new Error("Failed pattern match at Data.Map line 379, column 3 - line 379, column 20: " + [ v.constructor.name ]);
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(go);
    };
};
var traversableMap = function (dictOrd) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (dictApplicative) {
        return Data_Traversable.traverse(traversableMap(dictOrd))(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
    }, function (dictApplicative) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_List_Types.foldableList)(function (x) {
                    return function (acc) {
                        return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(union(dictOrd))(x))(acc);
                    };
                })(Control_Applicative.pure(dictApplicative)(empty))(Data_Functor.map(Data_List_Types.functorList)(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Data_Functor.map(Data_List_Types.functorList)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(dictApplicative)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (dictOrd) {
    return function (dictFoldable) {
        return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
    };
};
var update = function (dictOrd) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    alter: alter, 
    checkValid: checkValid, 
    "delete": $$delete, 
    empty: empty, 
    findMax: findMax, 
    findMin: findMin, 
    fromFoldable: fromFoldable, 
    fromFoldableWith: fromFoldableWith, 
    insert: insert, 
    isEmpty: isEmpty, 
    keys: keys, 
    lookup: lookup, 
    lookupGE: lookupGE, 
    lookupGT: lookupGT, 
    lookupLE: lookupLE, 
    lookupLT: lookupLT, 
    mapWithKey: mapWithKey, 
    member: member, 
    pop: pop, 
    showTree: showTree, 
    singleton: singleton, 
    size: size, 
    toList: toList, 
    toUnfoldable: toUnfoldable, 
    union: union, 
    unionWith: unionWith, 
    unions: unions, 
    update: update, 
    values: values, 
    eqMap: eqMap, 
    ordMap: ordMap, 
    showMap: showMap, 
    semigroupMap: semigroupMap, 
    monoidMap: monoidMap, 
    functorMap: functorMap, 
    foldableMap: foldableMap, 
    traversableMap: traversableMap
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Category":48,"../Control.Semigroupoid":104,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.List":188,"../Data.List.Types":187,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Data.Traversable":227,"../Data.Tuple":229,"../Data.Unfoldable":231,"../Partial.Unsafe":263,"../Prelude":266}],190:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var First = function (x) {
    return x;
};
var showFirst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just) {
            return v;
        };
        return v1;
    };
});
var ordFirst = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var newtypeFirst = new Data_Newtype.Newtype(function (n) {
    return n;
}, First);
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;
var eqFirst = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var boundedFirst = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
module.exports = {
    First: First, 
    newtypeFirst: newtypeFirst, 
    eqFirst: eqFirst, 
    ordFirst: ordFirst, 
    boundedFirst: boundedFirst, 
    functorFirst: functorFirst, 
    invariantFirst: invariantFirst, 
    applyFirst: applyFirst, 
    applicativeFirst: applicativeFirst, 
    bindFirst: bindFirst, 
    monadFirst: monadFirst, 
    extendFirst: extendFirst, 
    showFirst: showFirst, 
    semigroupFirst: semigroupFirst, 
    monoidFirst: monoidFirst
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Extend":53,"../Control.Monad":98,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Show":221,"../Prelude":266}],191:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Last = function (x) {
    return x;
};
var showLast = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return v1;
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return v;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 48, column 3 - line 48, column 39: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordLast = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var newtypeLast = new Data_Newtype.Newtype(function (n) {
    return n;
}, Last);
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;
var eqLast = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var boundedLast = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
module.exports = {
    Last: Last, 
    newtypeLast: newtypeLast, 
    eqLast: eqLast, 
    ordLast: ordLast, 
    boundedLast: boundedLast, 
    functorLast: functorLast, 
    invariantLast: invariantLast, 
    applyLast: applyLast, 
    applicativeLast: applicativeLast, 
    bindLast: bindLast, 
    monadLast: monadLast, 
    extendLast: extendLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Extend":53,"../Control.Monad":98,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Show":221,"../Prelude":266}],192:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Extend = require("../Control.Extend");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Bounded = require("../Data.Bounded");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Data_Function = require("../Data.Function");
var Control_Category = require("../Control.Category");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Just) {
            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
        };
        if (v instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 202, column 3 - line 203, column 3: " + [ v.constructor.name ]);
    });
};
var semigroupMaybe = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            if (v instanceof Nothing) {
                return v1;
            };
            if (v1 instanceof Nothing) {
                return v;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 175, column 3 - line 175, column 23: " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var monoidMaybe = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v(Data_Unit.unit);
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 227, column 1 - line 227, column 28: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var maybe = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v;
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 214, column 1 - line 214, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var functorMaybe = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Just) {
            return new Just(v(v1.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromJust = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar33) {
                return $dollar33;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Just) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Maybe line 265, column 1 - line 265, column 21: " + [ v.constructor.name ]);
        })());
    };
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(v(v1));
    };
});
var eqMaybe = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return true;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqMaybe(dictOrd["__superclass_Data.Eq.Eq_0"]());
    }, function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Nothing) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Nothing) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 192, column 1 - line 192, column 51: " + [ x.constructor.name, y.constructor.name ]);
        };
    });
};
var boundedMaybe = function (dictBounded) {
    return new Data_Bounded.Bounded(function () {
        return ordMaybe(dictBounded["__superclass_Data.Ord.Ord_0"]());
    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};
var applyMaybe = new Control_Apply.Apply(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return Data_Functor.map(functorMaybe)(v.value0)(v1);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 67, column 3 - line 67, column 31: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindMaybe = new Control_Bind.Bind(function () {
    return applyMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return v1(v.value0);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 126, column 3 - line 126, column 24: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applicativeMaybe = new Control_Applicative.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Nothing) {
            return v1;
        };
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return applicativeMaybe;
}, function () {
    return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing, 
    Just: Just, 
    fromJust: fromJust, 
    fromMaybe: fromMaybe, 
    "fromMaybe'": fromMaybe$prime, 
    isJust: isJust, 
    isNothing: isNothing, 
    maybe: maybe, 
    "maybe'": maybe$prime, 
    functorMaybe: functorMaybe, 
    applyMaybe: applyMaybe, 
    applicativeMaybe: applicativeMaybe, 
    altMaybe: altMaybe, 
    plusMaybe: plusMaybe, 
    alternativeMaybe: alternativeMaybe, 
    bindMaybe: bindMaybe, 
    monadMaybe: monadMaybe, 
    monadZeroMaybe: monadZeroMaybe, 
    extendMaybe: extendMaybe, 
    invariantMaybe: invariantMaybe, 
    semigroupMaybe: semigroupMaybe, 
    monoidMaybe: monoidMaybe, 
    eqMaybe: eqMaybe, 
    ordMaybe: ordMaybe, 
    boundedMaybe: boundedMaybe, 
    showMaybe: showMaybe
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Extend":53,"../Control.Monad":98,"../Control.MonadZero":100,"../Control.Plus":103,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Function":166,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.Monoid":200,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Semigroup":216,"../Data.Show":221,"../Data.Unit":233,"../Prelude":266}],193:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Generic = require("../Data.Generic");
var Data_Newtype = require("../Data.Newtype");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Control_Apply = require("../Control.Apply");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var MediaType = function (x) {
    return x;
};
var showMediaType = new Data_Show.Show(function (v) {
    return "(MediaType " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
    return n;
}, MediaType);
var genericMediaType = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.MediaType.MediaType" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(MediaType))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.MediaType.MediaType", [ {
        sigConstructor: "Data.MediaType.MediaType", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.MediaType.MediaType", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var eqMediaType = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordMediaType = new Data_Ord.Ord(function () {
    return eqMediaType;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
module.exports = {
    MediaType: MediaType, 
    newtypeMediaType: newtypeMediaType, 
    eqMediaType: eqMediaType, 
    ordMediaType: ordMediaType, 
    genericMediaType: genericMediaType, 
    showMediaType: showMediaType
};

},{"../Control.Apply":43,"../Data.Eq":147,"../Data.Generic":175,"../Data.Maybe":192,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Show":221,"../Data.Unit":233,"../Prelude":266}],194:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Additive = function (x) {
    return x;
};
var showAdditive = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.add(dictSemiring)(v)(v1);
        };
    });
};
var ordAdditive = function (dictOrd) {
    return dictOrd;
};
var newtypeAdditive = new Data_Newtype.Newtype(function (n) {
    return n;
}, Additive);
var monoidAdditive = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(dictSemiring);
    }, Data_Semiring.zero(dictSemiring));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorAdditive = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (dictEq) {
    return dictEq;
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, Data_Newtype.unwrap(newtypeAdditive));
var boundedAdditive = function (dictBounded) {
    return dictBounded;
};
var applyAdditive = new Control_Apply.Apply(function () {
    return functorAdditive;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindAdditive = new Control_Bind.Bind(function () {
    return applyAdditive;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeAdditive = new Control_Applicative.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive, 
    newtypeAdditive: newtypeAdditive, 
    eqAdditive: eqAdditive, 
    ordAdditive: ordAdditive, 
    boundedAdditive: boundedAdditive, 
    functorAdditive: functorAdditive, 
    invariantAdditive: invariantAdditive, 
    applyAdditive: applyAdditive, 
    applicativeAdditive: applicativeAdditive, 
    bindAdditive: bindAdditive, 
    monadAdditive: monadAdditive, 
    extendAdditive: extendAdditive, 
    comonadAdditive: comonadAdditive, 
    showAdditive: showAdditive, 
    semigroupAdditive: semigroupAdditive, 
    monoidAdditive: monoidAdditive
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Comonad":49,"../Control.Extend":53,"../Control.Monad":98,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Prelude":266}],195:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Conj = function (x) {
    return x;
};
var showConj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var semigroupConj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordConj = function (dictOrd) {
    return dictOrd;
};
var newtypeConj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Conj);
var monoidConj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var invariantConj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorConj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (dictEq) {
    return dictEq;
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, Data_Newtype.unwrap(newtypeConj));
var boundedConj = function (dictBounded) {
    return dictBounded;
};
var applyConj = new Control_Apply.Apply(function () {
    return functorConj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindConj = new Control_Bind.Bind(function () {
    return applyConj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeConj = new Control_Applicative.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj, 
    newtypeConj: newtypeConj, 
    eqConj: eqConj, 
    ordConj: ordConj, 
    boundedConj: boundedConj, 
    functorConj: functorConj, 
    invariantConj: invariantConj, 
    applyConj: applyConj, 
    applicativeConj: applicativeConj, 
    bindConj: bindConj, 
    monadConj: monadConj, 
    extendConj: extendConj, 
    comonadConj: comonadConj, 
    showConj: showConj, 
    semigroupConj: semigroupConj, 
    monoidConj: monoidConj, 
    semiringConj: semiringConj
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Comonad":49,"../Control.Extend":53,"../Control.Monad":98,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.HeytingAlgebra":177,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Prelude":266}],196:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Disj = function (x) {
    return x;
};
var showDisj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var semigroupDisj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordDisj = function (dictOrd) {
    return dictOrd;
};
var newtypeDisj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Disj);
var monoidDisj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var invariantDisj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDisj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (dictEq) {
    return dictEq;
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, Data_Newtype.unwrap(newtypeDisj));
var boundedDisj = function (dictBounded) {
    return dictBounded;
};
var applyDisj = new Control_Apply.Apply(function () {
    return functorDisj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDisj = new Control_Bind.Bind(function () {
    return applyDisj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDisj = new Control_Applicative.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj, 
    newtypeDisj: newtypeDisj, 
    eqDisj: eqDisj, 
    ordDisj: ordDisj, 
    boundedDisj: boundedDisj, 
    functorDisj: functorDisj, 
    invariantDisj: invariantDisj, 
    applyDisj: applyDisj, 
    applicativeDisj: applicativeDisj, 
    bindDisj: bindDisj, 
    monadDisj: monadDisj, 
    extendDisj: extendDisj, 
    comonadDisj: comonadDisj, 
    showDisj: showDisj, 
    semigroupDisj: semigroupDisj, 
    monoidDisj: monoidDisj, 
    semiringDisj: semiringDisj
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Comonad":49,"../Control.Extend":53,"../Control.Monad":98,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.HeytingAlgebra":177,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Prelude":266}],197:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Dual = function (x) {
    return x;
};
var showDual = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semigroup.append(dictSemigroup)(v1)(v);
        };
    });
};
var ordDual = function (dictOrd) {
    return dictOrd;
};
var newtypeDual = new Data_Newtype.Newtype(function (n) {
    return n;
}, Dual);
var monoidDual = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
    }, Data_Monoid.mempty(dictMonoid));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDual = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (dictEq) {
    return dictEq;
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, Data_Newtype.unwrap(newtypeDual));
var boundedDual = function (dictBounded) {
    return dictBounded;
};
var applyDual = new Control_Apply.Apply(function () {
    return functorDual;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDual = new Control_Bind.Bind(function () {
    return applyDual;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDual = new Control_Applicative.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual, 
    newtypeDual: newtypeDual, 
    eqDual: eqDual, 
    ordDual: ordDual, 
    boundedDual: boundedDual, 
    functorDual: functorDual, 
    invariantDual: invariantDual, 
    applyDual: applyDual, 
    applicativeDual: applicativeDual, 
    bindDual: bindDual, 
    monadDual: monadDual, 
    extendDual: extendDual, 
    comonadDual: comonadDual, 
    showDual: showDual, 
    semigroupDual: semigroupDual, 
    monoidDual: monoidDual
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Comonad":49,"../Control.Extend":53,"../Control.Monad":98,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Show":221,"../Prelude":266}],198:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Category = require("../Control.Category");
var Endo = function (x) {
    return x;
};
var semigroupEndo = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function ($11) {
            return v(v1($11));
        };
    };
});
var newtypeEndo = new Data_Newtype.Newtype(function (n) {
    return n;
}, Endo);
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Control_Category.id(Control_Category.categoryFn));
var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
    return function (ba) {
        return function (v) {
            return function ($12) {
                return ab(v(ba($12)));
            };
        };
    };
});
module.exports = {
    Endo: Endo, 
    newtypeEndo: newtypeEndo, 
    invariantEndo: invariantEndo, 
    semigroupEndo: semigroupEndo, 
    monoidEndo: monoidEndo
};

},{"../Control.Category":48,"../Control.Semigroupoid":104,"../Data.Functor.Invariant":171,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Semigroup":216,"../Prelude":266}],199:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Bounded = require("../Data.Bounded");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.mul(dictSemiring)(v)(v1);
        };
    });
};
var ordMultiplicative = function (dictOrd) {
    return dictOrd;
};
var newtypeMultiplicative = new Data_Newtype.Newtype(function (n) {
    return n;
}, Multiplicative);
var monoidMultiplicative = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(dictSemiring);
    }, Data_Semiring.one(dictSemiring));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorMultiplicative = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (dictEq) {
    return dictEq;
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, Data_Newtype.unwrap(newtypeMultiplicative));
var boundedMultiplicative = function (dictBounded) {
    return dictBounded;
};
var applyMultiplicative = new Control_Apply.Apply(function () {
    return functorMultiplicative;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Control_Bind.Bind(function () {
    return applyMultiplicative;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative, 
    newtypeMultiplicative: newtypeMultiplicative, 
    eqMultiplicative: eqMultiplicative, 
    ordMultiplicative: ordMultiplicative, 
    boundedMultiplicative: boundedMultiplicative, 
    functorMultiplicative: functorMultiplicative, 
    invariantMultiplicative: invariantMultiplicative, 
    applyMultiplicative: applyMultiplicative, 
    applicativeMultiplicative: applicativeMultiplicative, 
    bindMultiplicative: bindMultiplicative, 
    monadMultiplicative: monadMultiplicative, 
    extendMultiplicative: extendMultiplicative, 
    comonadMultiplicative: comonadMultiplicative, 
    showMultiplicative: showMultiplicative, 
    semigroupMultiplicative: semigroupMultiplicative, 
    monoidMultiplicative: monoidMultiplicative
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Comonad":49,"../Control.Extend":53,"../Control.Monad":98,"../Data.Bounded":135,"../Data.Eq":147,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Prelude":266}],200:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Data_Function = require("../Data.Function");
var Data_Ord = require("../Data.Ord");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Boolean = require("../Data.Boolean");
var Monoid = function (__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
    this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
    return Data_Semigroup.semigroupString;
}, "");
var monoidArray = new Monoid(function () {
    return Data_Semigroup.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (dictMonoid) {
    return new Monoid(function () {
        return Data_Semigroup.semigroupFn(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
    }, Data_Function["const"](mempty(dictMonoid)));
};
var power = function (dictMonoid) {
    return function (x) {
        var go = function (p) {
            if (p <= 0) {
                return mempty(dictMonoid);
            };
            if (p === 1) {
                return x;
            };
            if (p % 2 === 0) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(x$prime)(x$prime);
            };
            if (Data_Boolean.otherwise) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(x$prime)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(x$prime)(x));
            };
            throw new Error("Failed pattern match at Data.Monoid line 49, column 3 - line 53, column 57: " + [ p.constructor.name ]);
        };
        return go;
    };
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    power: power, 
    monoidUnit: monoidUnit, 
    monoidFn: monoidFn, 
    monoidString: monoidString, 
    monoidArray: monoidArray
};

},{"../Data.Boolean":132,"../Data.Eq":147,"../Data.EuclideanRing":149,"../Data.Function":166,"../Data.Ord":209,"../Data.Semigroup":216,"../Data.Unit":233,"../Prelude":266}],201:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"dup":124}],202:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Newtype = function (unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
};
var wrap = function (dict) {
    return dict.wrap;
};
var unwrap = function (dict) {
    return dict.unwrap;
};
var underF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($28) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($28)));
                        };
                    };
                };
            };
        };
    };
};
var under = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($29) {
                    return unwrap(dictNewtype1)(f(wrap(dictNewtype)($29)));
                };
            };
        };
    };
};
var un = function (dictNewtype) {
    return function (v) {
        return unwrap(dictNewtype);
    };
};
var overF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($30) {
                            return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($30)));
                        };
                    };
                };
            };
        };
    };
};
var over = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($31) {
                    return wrap(dictNewtype1)(f(unwrap(dictNewtype)($31)));
                };
            };
        };
    };
};
var op = function (dictNewtype) {
    return un(dictNewtype);
};
var alaF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($32) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($32)));
                        };
                    };
                };
            };
        };
    };
};
var ala = function (dictFunctor) {
    return function (dictNewtype) {
        return function (dictNewtype1) {
            return function (v) {
                return function (f) {
                    return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
                };
            };
        };
    };
};
module.exports = {
    Newtype: Newtype, 
    ala: ala, 
    alaF: alaF, 
    op: op, 
    over: over, 
    overF: overF, 
    un: un, 
    under: under, 
    underF: underF, 
    unwrap: unwrap, 
    wrap: wrap
};

},{"../Control.Semigroupoid":104,"../Data.Functor":173,"../Prelude":266}],203:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Plus = require("../Control.Plus");
var Data_Foldable = require("../Data.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Category = require("../Control.Category");
var NonEmpty = (function () {
    function NonEmpty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    NonEmpty.create = function (value0) {
        return function (value1) {
            return new NonEmpty(value0, value1);
        };
    };
    return NonEmpty;
})();
var tail = function (v) {
    return v.value1;
};
var singleton = function (dictPlus) {
    return function (a) {
        return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
};
var showNonEmpty = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var oneOf = function (dictAlternative) {
    return function (v) {
        return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(v.value0))(v.value1);
    };
};
var head = function (v) {
    return v.value0;
};
var functorNonEmpty = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
        };
    });
};
var fromNonEmpty = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var foldl1 = function (dictFoldable) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
        };
    };
};
var foldableNonEmpty = function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
            };
        };
    });
};
var traversableNonEmpty = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableNonEmpty(dictTraversable["__superclass_Data.Foldable.Foldable_1"]());
    }, function () {
        return functorNonEmpty(dictTraversable["__superclass_Data.Functor.Functor_0"]());
    }, function (dictApplicative) {
        return function (v) {
            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
        };
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
            };
        };
    });
};
var foldMap1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return function (f) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(function (s) {
                    return function (a1) {
                        return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
                    };
                })(f(v.value0))(v.value1);
            };
        };
    };
};
var fold1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return foldMap1(dictSemigroup)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var eqNonEmpty = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordNonEmpty = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqNonEmpty(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
        }, function (x) {
            return function (y) {
                var $101 = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if ($101 instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if ($101 instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
module.exports = {
    NonEmpty: NonEmpty, 
    fold1: fold1, 
    foldMap1: foldMap1, 
    foldl1: foldl1, 
    fromNonEmpty: fromNonEmpty, 
    head: head, 
    oneOf: oneOf, 
    singleton: singleton, 
    tail: tail, 
    showNonEmpty: showNonEmpty, 
    eqNonEmpty: eqNonEmpty, 
    ordNonEmpty: ordNonEmpty, 
    functorNonEmpty: functorNonEmpty, 
    foldableNonEmpty: foldableNonEmpty, 
    traversableNonEmpty: traversableNonEmpty
};

},{"../Control.Alt":38,"../Control.Alternative":39,"../Control.Applicative":41,"../Control.Apply":43,"../Control.Category":48,"../Control.Plus":103,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Semigroup":216,"../Data.Show":221,"../Data.Traversable":227,"../Prelude":266}],204:[function(require,module,exports){
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};

},{}],205:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Show = require("../Data.Show");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function (n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function (dictShow) {
    return new Data_Show.Show(function ($3) {
        return Data_Maybe.maybe("null")(Data_Show.show(dictShow))(toMaybe($3));
    });
};
var eqNullable = function (dictEq) {
    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};
var ordNullable = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqNullable(dictOrd["__superclass_Data.Eq.Eq_0"]());
    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};
module.exports = {
    toMaybe: toMaybe, 
    toNullable: toNullable, 
    showNullable: showNullable, 
    eqNullable: eqNullable, 
    ordNullable: ordNullable
};

},{"../Control.Semigroupoid":104,"../Data.Eq":147,"../Data.Function":166,"../Data.Function.Uncurried":165,"../Data.Maybe":192,"../Data.Ord":209,"../Data.Show":221,"../Prelude":266,"./foreign":204}],206:[function(require,module,exports){
"use strict";

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

},{}],207:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Ordering = require("../Data.Ordering");
var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
    unsafeCompare: unsafeCompare
};

},{"../Data.Ordering":210,"./foreign":206}],208:[function(require,module,exports){
"use strict";

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],209:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Ord_Unsafe = require("../Data.Ord.Unsafe");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Data_Semiring = require("../Data.Semiring");
var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
    this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
    this.compare = compare;
};
var ordVoid = new Ord(function () {
    return Data_Eq.eqVoid;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordUnit = new Ord(function () {
    return Data_Eq.eqUnit;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordString = new Ord(function () {
    return Data_Eq.eqString;
}, Data_Ord_Unsafe.unsafeCompare);
var ordOrdering = new Ord(function () {
    return Data_Ordering.eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        throw new Error("Failed pattern match at Data.Ord line 68, column 3 - line 68, column 21: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordNumber = new Ord(function () {
    return Data_Eq.eqNumber;
}, Data_Ord_Unsafe.unsafeCompare);
var ordInt = new Ord(function () {
    return Data_Eq.eqInt;
}, Data_Ord_Unsafe.unsafeCompare);
var ordChar = new Ord(function () {
    return Data_Eq.eqChar;
}, Data_Ord_Unsafe.unsafeCompare);
var ordBoolean = new Ord(function () {
    return Data_Eq.eqBoolean;
}, Data_Ord_Unsafe.unsafeCompare);
var compare = function (dict) {
    return dict.compare;
};
var comparing = function (dictOrd) {
    return function (f) {
        return Data_Function.on(compare(dictOrd))(f);
    };
};
var greaterThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $22 = compare(dictOrd)(a1)(a2);
            if ($22 instanceof Data_Ordering.GT) {
                return true;
            };
            return false;
        };
    };
};
var greaterThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $23 = compare(dictOrd)(a1)(a2);
            if ($23 instanceof Data_Ordering.LT) {
                return false;
            };
            return true;
        };
    };
};
var signum = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $24 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
            if ($24) {
                return Data_Semiring.one(dictRing["__superclass_Data.Semiring.Semiring_0"]());
            };
            if (!$24) {
                return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
            };
            throw new Error("Failed pattern match at Data.Ord line 163, column 12 - line 163, column 46: " + [ $24.constructor.name ]);
        };
    };
};
var lessThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $25 = compare(dictOrd)(a1)(a2);
            if ($25 instanceof Data_Ordering.LT) {
                return true;
            };
            return false;
        };
    };
};
var lessThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $26 = compare(dictOrd)(a1)(a2);
            if ($26 instanceof Data_Ordering.GT) {
                return false;
            };
            return true;
        };
    };
};
var max = function (dictOrd) {
    return function (x) {
        return function (y) {
            var $27 = compare(dictOrd)(x)(y);
            if ($27 instanceof Data_Ordering.LT) {
                return y;
            };
            if ($27 instanceof Data_Ordering.EQ) {
                return x;
            };
            if ($27 instanceof Data_Ordering.GT) {
                return x;
            };
            throw new Error("Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: " + [ $27.constructor.name ]);
        };
    };
};
var min = function (dictOrd) {
    return function (x) {
        return function (y) {
            var $28 = compare(dictOrd)(x)(y);
            if ($28 instanceof Data_Ordering.LT) {
                return x;
            };
            if ($28 instanceof Data_Ordering.EQ) {
                return x;
            };
            if ($28 instanceof Data_Ordering.GT) {
                return y;
            };
            throw new Error("Failed pattern match at Data.Ord line 113, column 3 - line 116, column 12: " + [ $28.constructor.name ]);
        };
    };
};
var ordArray = function (dictOrd) {
    return new Ord(function () {
        return Data_Eq.eqArray(dictOrd["__superclass_Data.Eq.Eq_0"]());
    }, (function () {
        var toDelta = function (x) {
            return function (y) {
                var $29 = compare(dictOrd)(x)(y);
                if ($29 instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if ($29 instanceof Data_Ordering.LT) {
                    return 1;
                };
                if ($29 instanceof Data_Ordering.GT) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.Ord line 60, column 7 - line 65, column 1: " + [ $29.constructor.name ]);
            };
        };
        return function (xs) {
            return function (ys) {
                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
            };
        };
    })());
};
var clamp = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
            };
        };
    };
};
var between = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                if (lessThan(dictOrd)(x)(low)) {
                    return false;
                };
                if (greaterThan(dictOrd)(x)(hi)) {
                    return false;
                };
                if (true) {
                    return true;
                };
                throw new Error("Failed pattern match at Data.Ord line 150, column 1 - line 153, column 16: " + [ low.constructor.name, hi.constructor.name, x.constructor.name ]);
            };
        };
    };
};
var abs = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
            if ($33) {
                return x;
            };
            if (!$33) {
                return Data_Ring.negate(dictRing)(x);
            };
            throw new Error("Failed pattern match at Data.Ord line 158, column 9 - line 158, column 42: " + [ $33.constructor.name ]);
        };
    };
};
module.exports = {
    Ord: Ord, 
    abs: abs, 
    between: between, 
    clamp: clamp, 
    compare: compare, 
    comparing: comparing, 
    greaterThan: greaterThan, 
    greaterThanOrEq: greaterThanOrEq, 
    lessThan: lessThan, 
    lessThanOrEq: lessThanOrEq, 
    max: max, 
    min: min, 
    signum: signum, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordVoid: ordVoid, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering
};

},{"../Data.Eq":147,"../Data.Function":166,"../Data.Ord.Unsafe":207,"../Data.Ordering":210,"../Data.Ring":214,"../Data.Semiring":218,"../Data.Unit":233,"../Data.Void":234,"./foreign":208}],210:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var showOrdering = new Data_Show.Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Data.Ordering line 27, column 3 - line 28, column 3: " + [ v.constructor.name ]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Data.Ordering line 22, column 3 - line 22, column 19: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invert = function (v) {
    if (v instanceof GT) {
        return LT.value;
    };
    if (v instanceof EQ) {
        return EQ.value;
    };
    if (v instanceof LT) {
        return GT.value;
    };
    throw new Error("Failed pattern match at Data.Ordering line 34, column 1 - line 34, column 15: " + [ v.constructor.name ]);
};
var eqOrdering = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    invert: invert, 
    eqOrdering: eqOrdering, 
    semigroupOrdering: semigroupOrdering, 
    showOrdering: showOrdering
};

},{"../Data.Eq":147,"../Data.Semigroup":216,"../Data.Show":221}],211:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Category = require("../Control.Category");
var Choice = function (__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
    this.left = left;
    this.right = right;
};
var right = function (dict) {
    return dict.right;
};
var left = function (dict) {
    return dict.left;
};
var splitChoice = function (dictCategory) {
    return function (dictChoice) {
        return function (l) {
            return function (r) {
                return Control_Semigroupoid.composeFlipped(dictCategory["__superclass_Control.Semigroupoid.Semigroupoid_0"]())(left(dictChoice)(l))(right(dictChoice)(r));
            };
        };
    };
};
var fanin = function (dictCategory) {
    return function (dictChoice) {
        return function (l) {
            return function (r) {
                var join = Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(dictCategory));
                return Control_Semigroupoid.composeFlipped(dictCategory["__superclass_Control.Semigroupoid.Semigroupoid_0"]())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
            };
        };
    };
};
var choiceFn = new Choice(function () {
    return Data_Profunctor.profunctorFn;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Data_Either.Left) {
            return Data_Either.Left.create(v(v1.value0));
        };
        if (v1 instanceof Data_Either.Right) {
            return new Data_Either.Right(v1.value0);
        };
        throw new Error("Failed pattern match at Data.Profunctor.Choice line 33, column 3 - line 33, column 36: " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Data_Functor.map(Data_Either.functorEither));
module.exports = {
    Choice: Choice, 
    fanin: fanin, 
    left: left, 
    right: right, 
    splitChoice: splitChoice, 
    choiceFn: choiceFn
};

},{"../Control.Category":48,"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Function":166,"../Data.Functor":173,"../Data.Profunctor":212,"../Prelude":266}],212:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Newtype = require("../Data.Newtype");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Category = require("../Control.Category");
var Profunctor = function (dimap) {
    this.dimap = dimap;
};
var profunctorFn = new Profunctor(function (a2b) {
    return function (c2d) {
        return function (b2c) {
            return function ($9) {
                return c2d(b2c(a2b($9)));
            };
        };
    };
});
var dimap = function (dict) {
    return dict.dimap;
};
var lmap = function (dictProfunctor) {
    return function (a2b) {
        return dimap(dictProfunctor)(a2b)(Control_Category.id(Control_Category.categoryFn));
    };
};
var rmap = function (dictProfunctor) {
    return function (b2c) {
        return dimap(dictProfunctor)(Control_Category.id(Control_Category.categoryFn))(b2c);
    };
};
var unwrapIso = function (dictProfunctor) {
    return function (dictNewtype) {
        return dimap(dictProfunctor)(Data_Newtype.wrap(dictNewtype))(Data_Newtype.unwrap(dictNewtype));
    };
};
var wrapIso = function (dictProfunctor) {
    return function (dictNewtype) {
        return function (v) {
            return dimap(dictProfunctor)(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype));
        };
    };
};
var arr = function (dictCategory) {
    return function (dictProfunctor) {
        return function (f) {
            return rmap(dictProfunctor)(f)(Control_Category.id(dictCategory));
        };
    };
};
module.exports = {
    Profunctor: Profunctor, 
    arr: arr, 
    dimap: dimap, 
    lmap: lmap, 
    rmap: rmap, 
    unwrapIso: unwrapIso, 
    wrapIso: wrapIso, 
    profunctorFn: profunctorFn
};

},{"../Control.Category":48,"../Control.Semigroupoid":104,"../Data.Newtype":202,"../Prelude":266}],213:[function(require,module,exports){
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

},{}],214:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Ring = function (__superclass_Data$dotSemiring$dotSemiring_0, sub) {
    this["__superclass_Data.Semiring.Semiring_0"] = __superclass_Data$dotSemiring$dotSemiring_0;
    this.sub = sub;
};
var sub = function (dict) {
    return dict.sub;
};
var ringUnit = new Ring(function () {
    return Data_Semiring.semiringUnit;
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var ringNumber = new Ring(function () {
    return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return Data_Semiring.semiringInt;
}, $foreign.intSub);
var negate = function (dictRing) {
    return function (a) {
        return sub(dictRing)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()))(a);
    };
};
module.exports = {
    Ring: Ring, 
    negate: negate, 
    sub: sub, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit
};

},{"../Data.Semiring":218,"../Data.Unit":233,"./foreign":213}],215:[function(require,module,exports){
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};

},{}],216:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Semigroup = function (append) {
    this.append = append;
};
var semigroupVoid = new Semigroup(function (v) {
    return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupArray = new Semigroup($foreign.concatArray);
var append = function (dict) {
    return dict.append;
};
var semigroupFn = function (dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return append(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
module.exports = {
    Semigroup: Semigroup, 
    append: append, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupVoid: semigroupVoid, 
    semigroupFn: semigroupFn, 
    semigroupArray: semigroupArray
};

},{"../Data.Unit":233,"../Data.Void":234,"./foreign":215}],217:[function(require,module,exports){
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

},{}],218:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var zero = function (dict) {
    return dict.zero;
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, Data_Unit.unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var one = function (dict) {
    return dict.one;
};
var mul = function (dict) {
    return dict.mul;
};
var add = function (dict) {
    return dict.add;
};
module.exports = {
    Semiring: Semiring, 
    add: add, 
    mul: mul, 
    one: one, 
    zero: zero, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringUnit: semiringUnit
};

},{"../Data.Unit":233,"./foreign":217}],219:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_ST = require("../Control.Monad.ST");
var Data_Array = require("../Data.Array");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Foldable = require("../Data.Foldable");
var Data_List = require("../Data.List");
var Data_Map = require("../Data.Map");
var Data_Monoid = require("../Data.Monoid");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Data_Eq = require("../Data.Eq");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Ord = require("../Data.Ord");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Unit = require("../Data.Unit");
var Data_List_Types = require("../Data.List.Types");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ordering = require("../Data.Ordering");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Data_Semiring = require("../Data.Semiring");
var $$Set = (function () {
    function Set(value0) {
        this.value0 = value0;
    };
    Set.create = function (value0) {
        return new Set(value0);
    };
    return Set;
})();
var union = function (dictOrd) {
    return function (v) {
        return function (v1) {
            return new $$Set(Data_Map.union(dictOrd)(v.value0)(v1.value0));
        };
    };
};
var toList = function (v) {
    return Data_Map.keys(v.value0);
};
var toUnfoldable = function (dictUnfoldable) {
    return function ($59) {
        return Data_List.toUnfoldable(dictUnfoldable)(toList($59));
    };
};
var size = function (v) {
    return Data_Map.size(v.value0);
};
var singleton = function (a) {
    return new $$Set(Data_Map.singleton(a)(Data_Unit.unit));
};
var showSet = function (dictShow) {
    return new Data_Show.Show(function (s) {
        return "(fromFoldable " + (Data_Show.show(Data_List_Types.showList(dictShow))(toList(s)) + ")");
    });
};
var semigroupSet = function (dictOrd) {
    return new Data_Semigroup.Semigroup(union(dictOrd));
};
var member = function (dictOrd) {
    return function (a) {
        return function (v) {
            return Data_Map.member(dictOrd)(a)(v.value0);
        };
    };
};
var isEmpty = function (v) {
    return Data_Map.isEmpty(v.value0);
};
var insert = function (dictOrd) {
    return function (a) {
        return function (v) {
            return new $$Set(Data_Map.insert(dictOrd)(a)(Data_Unit.unit)(v.value0));
        };
    };
};
var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function ($60) {
            return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(toList($60));
        };
    };
}, function (f) {
    return function (x) {
        return function ($61) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x)(toList($61));
        };
    };
}, function (f) {
    return function (x) {
        return function ($62) {
            return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x)(toList($62));
        };
    };
});
var eqSet = function (dictEq) {
    return new Data_Eq.Eq(function (v) {
        return function (v1) {
            return Data_Eq.eq(Data_Map.eqMap(dictEq)(Data_Eq.eqUnit))(v.value0)(v1.value0);
        };
    });
};
var ordSet = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqSet(dictOrd["__superclass_Data.Eq.Eq_0"]());
    }, function (s1) {
        return function (s2) {
            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(toList(s1))(toList(s2));
        };
    });
};
var empty = new $$Set(Data_Map.empty);
var fromFoldable = function (dictFoldable) {
    return function (dictOrd) {
        return Data_Foldable.foldl(dictFoldable)(function (m) {
            return function (a) {
                return insert(dictOrd)(a)(m);
            };
        })(empty);
    };
};
var intersection = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            var toArray = function ($63) {
                return Data_Array.fromFoldable(Data_List_Types.foldableList)(toList($63));
            };
            var rs = toArray(s2);
            var rl = Data_Array.length(rs);
            var ls = toArray(s1);
            var ll = Data_Array.length(ls);
            var intersect = function (acc) {
                var go = Partial_Unsafe.unsafePartial(function (dictPartial) {
                    return function (l) {
                        return function (r) {
                            var $52 = l < ll && r < rl;
                            if ($52) {
                                var $53 = Data_Ord.compare(dictOrd)(Data_Array.unsafeIndex(dictPartial)(ls)(l))(Data_Array.unsafeIndex(dictPartial)(rs)(r));
                                if ($53 instanceof Data_Ordering.EQ) {
                                    return function __do() {
                                        Data_Array_ST.pushSTArray(acc)(Data_Array.unsafeIndex(dictPartial)(ls)(l))();
                                        return new Control_Monad_Rec_Class.Loop({
                                            a: l + 1 | 0, 
                                            b: r + 1 | 0
                                        });
                                    };
                                };
                                if ($53 instanceof Data_Ordering.LT) {
                                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Control_Monad_Rec_Class.Loop({
                                        a: l + 1 | 0, 
                                        b: r
                                    }));
                                };
                                if ($53 instanceof Data_Ordering.GT) {
                                    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Control_Monad_Rec_Class.Loop({
                                        a: l, 
                                        b: r + 1 | 0
                                    }));
                                };
                                throw new Error("Failed pattern match at Data.Set line 158, column 12 - line 163, column 43: " + [ $53.constructor.name ]);
                            };
                            if (!$52) {
                                return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Control_Monad_Rec_Class.Done(acc));
                            };
                            throw new Error("Failed pattern match at Data.Set line 157, column 7 - line 164, column 24: " + [ $52.constructor.name ]);
                        };
                    };
                });
                return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecEff)(go)(0)(0);
            };
            return fromFoldable(Data_Foldable.foldableArray)(dictOrd)(Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(Control_Bind.bind(Control_Monad_Eff.bindEff)(Data_Array_ST.emptySTArray)(intersect))));
        };
    };
};
var map = function (dictOrd) {
    return function (f) {
        return Data_Foldable.foldl(foldableSet)(function (m) {
            return function (a) {
                return insert(dictOrd)(f(a))(m);
            };
        })(empty);
    };
};
var monoidSet = function (dictOrd) {
    return new Data_Monoid.Monoid(function () {
        return semigroupSet(dictOrd);
    }, empty);
};
var unions = function (dictFoldable) {
    return function (dictOrd) {
        return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
    };
};
var $$delete = function (dictOrd) {
    return function (a) {
        return function (v) {
            return new $$Set(Data_Map["delete"](dictOrd)(a)(v.value0));
        };
    };
};
var difference = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(s1)(toList(s2));
        };
    };
};
var subset = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            return isEmpty(difference(dictOrd)(s1)(s2));
        };
    };
};
var properSubset = function (dictOrd) {
    return function (s1) {
        return function (s2) {
            return subset(dictOrd)(s1)(s2) && Data_Eq.notEq(eqSet(dictOrd["__superclass_Data.Eq.Eq_0"]()))(s1)(s2);
        };
    };
};
var checkValid = function (v) {
    return Data_Map.checkValid(v.value0);
};
module.exports = {
    checkValid: checkValid, 
    "delete": $$delete, 
    difference: difference, 
    empty: empty, 
    fromFoldable: fromFoldable, 
    insert: insert, 
    intersection: intersection, 
    isEmpty: isEmpty, 
    map: map, 
    member: member, 
    properSubset: properSubset, 
    singleton: singleton, 
    size: size, 
    subset: subset, 
    toUnfoldable: toUnfoldable, 
    union: union, 
    unions: unions, 
    eqSet: eqSet, 
    showSet: showSet, 
    ordSet: ordSet, 
    monoidSet: monoidSet, 
    semigroupSet: semigroupSet, 
    foldableSet: foldableSet
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Control.Monad.Eff":76,"../Control.Monad.Rec.Class":90,"../Control.Monad.ST":92,"../Control.Semigroupoid":104,"../Data.Array":128,"../Data.Array.ST":126,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.HeytingAlgebra":177,"../Data.List":188,"../Data.List.Types":187,"../Data.Map":189,"../Data.Monoid":200,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Data.Unfoldable":231,"../Data.Unit":233,"../Partial.Unsafe":263,"../Prelude":266}],220:[function(require,module,exports){
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g,
    function (c, i) { // jshint ignore:line
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\x07": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],221:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Show = function (show) {
    this.show = show;
};
var showString = new Show($foreign.showStringImpl);
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Data.Show line 13, column 3 - line 14, column 3: " + [ v.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
module.exports = {
    Show: Show, 
    show: show, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showArray: showArray
};

},{"./foreign":220}],222:[function(require,module,exports){
"use strict";

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],223:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
module.exports = {
    "char": $foreign["char"], 
    charAt: $foreign.charAt, 
    charCodeAt: $foreign.charCodeAt
};

},{"./foreign":222}],224:[function(require,module,exports){
"use strict";

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports.singleton = function (c) {
  return c;
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports.count = function (p) {
  return function (s) {
    for (var i = 0; i < s.length && p(s.charAt(i)); i++); {}
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports._splitAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ?
               just([s.substring(0, i), s.substring(i)]) : nothing;
      };
    };
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],225:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_String_Unsafe = require("../Data.String.Unsafe");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Function = require("../Data.Function");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Replacement = function (x) {
    return x;
};
var Pattern = function (x) {
    return x;
};
var uncons = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v), 
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var splitAt = $foreign._splitAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showReplacement = new Data_Show.Show(function (v) {
    return "(Replacement " + (v + ")");
});
var showPattern = new Data_Show.Show(function (v) {
    return "(Pattern " + (v + ")");
});
var $$null = function (s) {
    return s === "";
};
var newtypeReplacement = new Data_Newtype.Newtype(function (n) {
    return n;
}, Replacement);
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var localeCompare = $foreign._localeCompare(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (v) {
    return function (str) {
        var $32 = lastIndexOf(v)(str);
        if ($32 instanceof Data_Maybe.Just && $32.value0 === $foreign.length(str) - $foreign.length(v)) {
            return Data_Maybe.Just.create($foreign.take($32.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (v) {
    return function (str) {
        var $36 = indexOf(v)(str);
        if ($36 instanceof Data_Maybe.Just && $36.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var eqReplacement = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordReplacement = new Data_Ord.Ord(function () {
    return eqReplacement;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqPattern = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordPattern = new Data_Ord.Ord(function () {
    return eqPattern;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var contains = function (pat) {
    return function ($46) {
        return Data_Maybe.isJust(indexOf(pat)($46));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    Pattern: Pattern, 
    Replacement: Replacement, 
    charAt: charAt, 
    charCodeAt: charCodeAt, 
    contains: contains, 
    dropWhile: dropWhile, 
    indexOf: indexOf, 
    "indexOf'": indexOf$prime, 
    lastIndexOf: lastIndexOf, 
    "lastIndexOf'": lastIndexOf$prime, 
    localeCompare: localeCompare, 
    "null": $$null, 
    splitAt: splitAt, 
    stripPrefix: stripPrefix, 
    stripSuffix: stripSuffix, 
    takeWhile: takeWhile, 
    toChar: toChar, 
    uncons: uncons, 
    eqPattern: eqPattern, 
    ordPattern: ordPattern, 
    newtypePattern: newtypePattern, 
    showPattern: showPattern, 
    eqReplacement: eqReplacement, 
    ordReplacement: ordReplacement, 
    newtypeReplacement: newtypeReplacement, 
    showReplacement: showReplacement, 
    count: $foreign.count, 
    drop: $foreign.drop, 
    fromCharArray: $foreign.fromCharArray, 
    joinWith: $foreign.joinWith, 
    length: $foreign.length, 
    replace: $foreign.replace, 
    replaceAll: $foreign.replaceAll, 
    singleton: $foreign.singleton, 
    split: $foreign.split, 
    take: $foreign.take, 
    toCharArray: $foreign.toCharArray, 
    toLower: $foreign.toLower, 
    toUpper: $foreign.toUpper, 
    trim: $foreign.trim
};

},{"../Control.Semigroupoid":104,"../Data.Eq":147,"../Data.Function":166,"../Data.Maybe":192,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Data.String.Unsafe":223,"../Prelude":266,"./foreign":224}],226:[function(require,module,exports){
"use strict";

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    while (list !== emptyList) {
      arr.push(list.head);
      list = list.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],227:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Control_Applicative = require("../Control.Applicative");
var Control_Category = require("../Control.Category");
var StateL = function (x) {
    return x;
};
var StateR = function (x) {
    return x;
};
var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Data$dotFunctor$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 85, column 3 - line 85, column 35: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 83, column 3 - line 83, column 37: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Dual.Dual)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Disj.Disj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Conj.Conj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Additive.Additive)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var stateR = function (v) {
    return v;
};
var stateL = function (v) {
    return v;
};
var sequenceDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (tma) {
            return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(tma);
        };
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Data_Functor.functorArray;
}, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]()))(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Control_Applicative.pure(dictApplicative));
});
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traverseDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (ta) {
                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable["__superclass_Data.Functor.Functor_0"]())(f)(ta));
            };
        };
    };
};
var functorStateR = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var $75 = stateR(k)(s);
            return {
                accum: $75.accum, 
                value: f($75.value)
            };
        };
    };
});
var functorStateL = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var $78 = stateL(k)(s);
            return {
                accum: $78.accum, 
                value: f($78.value)
            };
        };
    };
});
var $$for = function (dictApplicative) {
    return function (dictTraversable) {
        return function (x) {
            return function (f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
var applyStateR = new Control_Apply.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var $81 = stateR(x)(s);
            var $82 = stateR(f)($81.accum);
            return {
                accum: $82.accum, 
                value: $82.value($81.value)
            };
        };
    };
});
var applyStateL = new Control_Apply.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var $87 = stateL(f)(s);
            var $88 = stateL(x)($87.accum);
            return {
                accum: $88.accum, 
                value: $87.value($88.value)
            };
        };
    };
});
var applicativeStateR = new Control_Applicative.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumR = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(dictTraversable)(applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var applicativeStateL = new Control_Applicative.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumL = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(dictTraversable)(applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    "for": $$for, 
    mapAccumL: mapAccumL, 
    mapAccumR: mapAccumR, 
    scanl: scanl, 
    scanr: scanr, 
    sequence: sequence, 
    sequenceDefault: sequenceDefault, 
    traverse: traverse, 
    traverseDefault: traverseDefault, 
    traversableArray: traversableArray, 
    traversableMaybe: traversableMaybe, 
    traversableFirst: traversableFirst, 
    traversableLast: traversableLast, 
    traversableAdditive: traversableAdditive, 
    traversableDual: traversableDual, 
    traversableConj: traversableConj, 
    traversableDisj: traversableDisj, 
    traversableMultiplicative: traversableMultiplicative
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Category":48,"../Data.Foldable":153,"../Data.Functor":173,"../Data.Maybe":192,"../Data.Maybe.First":190,"../Data.Maybe.Last":191,"../Data.Monoid.Additive":194,"../Data.Monoid.Conj":195,"../Data.Monoid.Disj":196,"../Data.Monoid.Dual":197,"../Data.Monoid.Multiplicative":199,"../Prelude":266,"./foreign":226}],228:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var uncurry9 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry8 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry7 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry6 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry5 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0);
    };
};
var uncurry4 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0);
    };
};
var uncurry3 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0);
    };
};
var uncurry2 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0);
    };
};
var uncurry10 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry1 = function (f) {
    return function (v) {
        return f(v.value0);
    };
};
var tuple9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, Data_Unit.unit)))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, Data_Unit.unit))))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, Data_Unit.unit)))))));
                        };
                    };
                };
            };
        };
    };
};
var tuple6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, Data_Unit.unit))))));
                    };
                };
            };
        };
    };
};
var tuple5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, Data_Unit.unit)))));
                };
            };
        };
    };
};
var tuple4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, Data_Unit.unit))));
            };
        };
    };
};
var tuple3 = function (a) {
    return function (b) {
        return function (c) {
            return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, Data_Unit.unit)));
        };
    };
};
var tuple2 = function (a) {
    return function (b) {
        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, Data_Unit.unit));
    };
};
var tuple10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, new Data_Tuple.Tuple(j, Data_Unit.unit))))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple1 = function (a) {
    return new Data_Tuple.Tuple(a, Data_Unit.unit);
};
var over9 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1)))))))));
    };
};
var over8 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1))))))));
    };
};
var over7 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1)))))));
    };
};
var over6 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1))))));
    };
};
var over5 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1)))));
    };
};
var over4 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value0), v.value1.value1.value1.value1))));
    };
};
var over3 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value0), v.value1.value1.value1)));
    };
};
var over2 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(o(v.value1.value0), v.value1.value1));
    };
};
var over10 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value1))))))))));
    };
};
var over1 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(o(v.value0), v.value1);
    };
};
var get9 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get8 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get7 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value0;
};
var get6 = function (v) {
    return v.value1.value1.value1.value1.value1.value0;
};
var get5 = function (v) {
    return v.value1.value1.value1.value1.value0;
};
var get4 = function (v) {
    return v.value1.value1.value1.value0;
};
var get3 = function (v) {
    return v.value1.value1.value0;
};
var get2 = function (v) {
    return v.value1.value0;
};
var get10 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get1 = function (v) {
    return v.value0;
};
var curry9 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return function (i) {
                                            return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, z))))))))));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry8 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, z)))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry7 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, z))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry6 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, z)))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry5 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, z))))));
                        };
                    };
                };
            };
        };
    };
};
var curry4 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, z)))));
                    };
                };
            };
        };
    };
};
var curry3 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, z))));
                };
            };
        };
    };
};
var curry2 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, z)));
            };
        };
    };
};
var curry10 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return function (i) {
                                            return function (j) {
                                                return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, new Data_Tuple.Tuple(j, z)))))))))));
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry1 = function (z) {
    return function (f) {
        return function (a) {
            return f(new Data_Tuple.Tuple(a, z));
        };
    };
};
module.exports = {
    curry1: curry1, 
    curry10: curry10, 
    curry2: curry2, 
    curry3: curry3, 
    curry4: curry4, 
    curry5: curry5, 
    curry6: curry6, 
    curry7: curry7, 
    curry8: curry8, 
    curry9: curry9, 
    get1: get1, 
    get10: get10, 
    get2: get2, 
    get3: get3, 
    get4: get4, 
    get5: get5, 
    get6: get6, 
    get7: get7, 
    get8: get8, 
    get9: get9, 
    over1: over1, 
    over10: over10, 
    over2: over2, 
    over3: over3, 
    over4: over4, 
    over5: over5, 
    over6: over6, 
    over7: over7, 
    over8: over8, 
    over9: over9, 
    tuple1: tuple1, 
    tuple10: tuple10, 
    tuple2: tuple2, 
    tuple3: tuple3, 
    tuple4: tuple4, 
    tuple5: tuple5, 
    tuple6: tuple6, 
    tuple7: tuple7, 
    tuple8: tuple8, 
    tuple9: tuple9, 
    uncurry1: uncurry1, 
    uncurry10: uncurry10, 
    uncurry2: uncurry2, 
    uncurry3: uncurry3, 
    uncurry4: uncurry4, 
    uncurry5: uncurry5, 
    uncurry6: uncurry6, 
    uncurry7: uncurry7, 
    uncurry8: uncurry8, 
    uncurry9: uncurry9
};

},{"../Data.Tuple":229,"../Data.Unit":233,"../Prelude":266}],229:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Traversable = require("../Data.Traversable");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Bounded = require("../Data.Bounded");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Semiring = require("../Data.Semiring");
var Data_Ring = require("../Data.Ring");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Functor = require("../Data.Functor");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Function = require("../Data.Function");
var Data_Unit = require("../Data.Unit");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function (v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function (v) {
    return v.value1;
};
var showTuple = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function (dictSemiring) {
    return function (dictSemiring1) {
        return new Data_Semiring.Semiring(function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function (dictSemigroup) {
    return function (dictSemigroup1) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function (dictRing) {
    return function (dictRing1) {
        return new Data_Ring.Ring(function () {
            return semiringTuple(dictRing["__superclass_Data.Semiring.Semiring_0"]())(dictRing1["__superclass_Data.Semiring.Semiring_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function (dictMonoid) {
    return function (dictMonoid1) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonoid1["__superclass_Data.Semigroup.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var lookup = function (dictFoldable) {
    return function (dictEq) {
        return function (a) {
            return function ($255) {
                return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                    var $135 = Data_Eq.eq(dictEq)(a)(v.value0);
                    if ($135) {
                        return new Data_Maybe.Just(v.value1);
                    };
                    if (!$135) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at Data.Tuple line 170, column 55 - line 170, column 90: " + [ $135.constructor.name ]);
                })($255));
            };
        };
    };
};
var heytingAlgebraTuple = function (dictHeytingAlgebra) {
    return function (dictHeytingAlgebra1) {
        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
    };
};
var functorTuple = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (v) {
    return v.value0;
};
var lazyTuple = function (dictLazy) {
    return function (dictLazy1) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
                return fst(f(Data_Unit.unit));
            }), Control_Lazy.defer(dictLazy1)(function (v) {
                return snd(f(Data_Unit.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordTuple = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqTuple(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
        }, function (x) {
            return function (y) {
                var $201 = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if ($201 instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if ($201 instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var commutativeRingTuple = function (dictCommutativeRing) {
    return function (dictCommutativeRing1) {
        return new Data_CommutativeRing.CommutativeRing(function () {
            return ringTuple(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]())(dictCommutativeRing1["__superclass_Data.Ring.Ring_0"]());
        });
    };
};
var boundedTuple = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordTuple(dictBounded["__superclass_Data.Ord.Ord_0"]())(dictBounded1["__superclass_Data.Ord.Ord_0"]());
        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
    };
};
var booleanAlgebraTuple = function (dictBooleanAlgebra) {
    return function (dictBooleanAlgebra1) {
        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
            return heytingAlgebraTuple(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]())(dictBooleanAlgebra1["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.value0))(g(v.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return g(f(z)(v.value0))(v.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return f(v.value0)(g(v.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create)(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (v) {
    return function (v1) {
        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (dictSemigroup) {
    return new Control_Apply.Apply(function () {
        return functorTuple;
    }, function (v) {
        return function (v1) {
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function (dictSemigroup) {
    return new Control_Bind.Bind(function () {
        return applyTuple(dictSemigroup);
    }, function (v) {
        return function (f) {
            var $250 = f(v.value1);
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)($250.value0), $250.value1);
        };
    });
};
var applicativeTuple = function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
        return applyTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function (dictMonoid) {
    return new Control_Monad.Monad(function () {
        return applicativeTuple(dictMonoid);
    }, function () {
        return bindTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple, 
    curry: curry, 
    fst: fst, 
    lookup: lookup, 
    snd: snd, 
    swap: swap, 
    uncurry: uncurry, 
    showTuple: showTuple, 
    eqTuple: eqTuple, 
    ordTuple: ordTuple, 
    boundedTuple: boundedTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    semigroupTuple: semigroupTuple, 
    monoidTuple: monoidTuple, 
    semiringTuple: semiringTuple, 
    ringTuple: ringTuple, 
    commutativeRingTuple: commutativeRingTuple, 
    heytingAlgebraTuple: heytingAlgebraTuple, 
    booleanAlgebraTuple: booleanAlgebraTuple, 
    functorTuple: functorTuple, 
    invariantTuple: invariantTuple, 
    bifunctorTuple: bifunctorTuple, 
    applyTuple: applyTuple, 
    biapplyTuple: biapplyTuple, 
    applicativeTuple: applicativeTuple, 
    biapplicativeTuple: biapplicativeTuple, 
    bindTuple: bindTuple, 
    monadTuple: monadTuple, 
    extendTuple: extendTuple, 
    comonadTuple: comonadTuple, 
    lazyTuple: lazyTuple, 
    foldableTuple: foldableTuple, 
    bifoldableTuple: bifoldableTuple, 
    traversableTuple: traversableTuple, 
    bitraversableTuple: bitraversableTuple
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Biapplicative":44,"../Control.Biapply":45,"../Control.Bind":47,"../Control.Comonad":49,"../Control.Extend":53,"../Control.Lazy":54,"../Control.Monad":98,"../Control.Semigroupoid":104,"../Data.Bifoldable":129,"../Data.Bifunctor":130,"../Data.Bitraversable":131,"../Data.BooleanAlgebra":133,"../Data.Bounded":135,"../Data.CommutativeRing":140,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.Functor.Invariant":171,"../Data.HeytingAlgebra":177,"../Data.Maybe":192,"../Data.Maybe.First":190,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Data.Traversable":227,"../Data.Unit":233,"../Prelude":266}],230:[function(require,module,exports){
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            while (true) {
              var maybe = f(b);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              b = snd(tuple);
            }
          };
        };
      };
    };
  };
};

},{}],231:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Partial_Unsafe = require("../Partial.Unsafe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Function = require("../Data.Function");
var Data_Unit = require("../Data.Unit");
var Data_Functor = require("../Data.Functor");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Partial_Unsafe.unsafePartial(function (dictPartial) {
    return Data_Maybe.fromJust(dictPartial);
}))(Data_Tuple.fst)(Data_Tuple.snd));
var replicate = function (dictUnfoldable) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var $8 = i <= 0;
                if ($8) {
                    return Data_Maybe.Nothing.value;
                };
                if (!$8) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1));
                };
                throw new Error("Failed pattern match at Data.Unfoldable line 59, column 7 - line 60, column 34: " + [ $8.constructor.name ]);
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function (dictApplicative) {
    return function (dictUnfoldable) {
        return function (dictTraversable) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable) {
    return replicate(dictUnfoldable)(1);
};
var none = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};
var fromMaybe = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function (b) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
    });
};
module.exports = {
    Unfoldable: Unfoldable, 
    fromMaybe: fromMaybe, 
    none: none, 
    replicate: replicate, 
    replicateA: replicateA, 
    singleton: singleton, 
    unfoldr: unfoldr, 
    unfoldableArray: unfoldableArray
};

},{"../Data.Function":166,"../Data.Functor":173,"../Data.Maybe":192,"../Data.Ord":209,"../Data.Ring":214,"../Data.Traversable":227,"../Data.Tuple":229,"../Data.Unit":233,"../Partial.Unsafe":263,"../Prelude":266,"./foreign":230}],232:[function(require,module,exports){
"use strict";

exports.unit = {};

},{}],233:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Data_Show = require("../Data.Show");
var showUnit = new Data_Show.Show(function (v) {
    return "unit";
});
module.exports = {
    showUnit: showUnit, 
    unit: $foreign.unit
};

},{"../Data.Show":221,"./foreign":232}],234:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Data_Show = require("../Data.Show");
var Void = function (x) {
    return x;
};
var absurd = function (a) {
    var spin = function (__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            var __tco_v = v;
            v = __tco_v;
            continue tco;
        };
    };
    return spin(a);
};
var showVoid = new Data_Show.Show(absurd);
module.exports = {
    absurd: absurd, 
    showVoid: showVoid
};

},{"../Data.Show":221}],235:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Data_List = require("../Data.List");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox");
var Halogen_Effects = require("../Halogen.Effects");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Show = require("../Data.Show");
var Control_Bind = require("../Control.Bind");
var Data_Functor = require("../Data.Functor");
var Data_List_Types = require("../Data.List.Types");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Root = (function () {
    function Root() {

    };
    Root.value = new Root();
    return Root;
})();
var Child = (function () {
    function Child() {

    };
    Child.value = new Child();
    return Child;
})();
var DriverState = function (x) {
    return x;
};
var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
var showComponentType = new Data_Show.Show(function (v) {
    if (v instanceof Root) {
        return "Root";
    };
    if (v instanceof Child) {
        return "Child";
    };
    throw new Error("Failed pattern match at Halogen.Aff.Driver.State line 33, column 3 - line 34, column 3: " + [ v.constructor.name ]);
});
var mkDriverStateXVar = Unsafe_Coerce.unsafeCoerce;
var initDriverState = function (component) {
    return function (componentType) {
        return function (handler) {
            return function (keyId) {
                return function (fresh) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v) {
                        var ds = {
                            component: component, 
                            componentType: componentType, 
                            state: component.initialState, 
                            children: Data_Map.empty, 
                            mkOrdBox: component.mkOrdBox, 
                            selfRef: v, 
                            keyId: keyId, 
                            fresh: fresh, 
                            handler: handler, 
                            pendingIn: Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value), 
                            pendingOut: Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value), 
                            rendering: Data_Maybe.Nothing.value
                        };
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v)(ds))(function () {
                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(mkDriverStateXVar(v));
                        });
                    });
                };
            };
        };
    };
};
var eqComponentType = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Root && y instanceof Root) {
            return true;
        };
        if (x instanceof Child && y instanceof Child) {
            return true;
        };
        return false;
    };
});
var ordComponentType = new Data_Ord.Ord(function () {
    return eqComponentType;
}, function (x) {
    return function (y) {
        if (x instanceof Root && y instanceof Root) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Root) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Root) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Child && y instanceof Child) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Halogen.Aff.Driver.State line 30, column 1 - line 30, column 54: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    Root: Root, 
    Child: Child, 
    DriverState: DriverState, 
    initDriverState: initDriverState, 
    unDriverStateX: unDriverStateX, 
    eqComponentType: eqComponentType, 
    ordComponentType: ordComponentType, 
    showComponentType: showComponentType
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Control.Monad.Aff":61,"../Control.Monad.Aff.AVar":55,"../Control.Monad.Eff.Ref":70,"../Data.Eq":147,"../Data.Function":166,"../Data.Functor":173,"../Data.List":188,"../Data.List.Types":187,"../Data.Map":189,"../Data.Maybe":192,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Show":221,"../Halogen.Component":240,"../Halogen.Data.OrdBox":242,"../Halogen.Effects":243,"../Prelude":266,"../Unsafe.Coerce":269}],236:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Applicative_Free = require("../Control.Applicative.Free");
var Control_Coroutine = require("../Control.Coroutine");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Unsafe = require("../Control.Monad.Aff.Unsafe");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Free = require("../Control.Monad.Free");
var Control_Monad_Fork = require("../Control.Monad.Fork");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Parallel = require("../Control.Parallel");
var Data_Lazy = require("../Data.Lazy");
var Data_List = require("../Data.List");
var Data_Either = require("../Data.Either");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Halogen = require("../Halogen");
var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox");
var Halogen_Effects = require("../Halogen.Effects");
var Halogen_Query_ChildQuery = require("../Halogen.Query.ChildQuery");
var Halogen_Query_ForkF = require("../Halogen.Query.ForkF");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource");
var Control_Bind = require("../Control.Bind");
var Control_Applicative = require("../Control.Applicative");
var Data_Function = require("../Data.Function");
var Data_List_Types = require("../Data.List.Types");
var Data_Foldable = require("../Data.Foldable");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Data_Semiring = require("../Data.Semiring");
var Data_Ord = require("../Data.Ord");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans");
var Data_Eq = require("../Data.Eq");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class");
var peekVar = function (v) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v))(function (v1) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v)(v1))(function () {
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1);
        });
    });
};
var handleLifecycle = function (f) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef({
        initializers: Data_List_Types.Nil.value, 
        finalizers: Data_List_Types.Nil.value
    })))(function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(f(v))(function (v1) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v)))(function (v2) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAll(Data_List_Types.foldableList)(v2.finalizers))(function () {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Foldable.sequence_(Control_Monad_Aff.applicativeAff)(Data_List_Types.foldableList)(v2.initializers))(function () {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1);
                    });
                });
            });
        });
    });
};
var handleAff = function ($138) {
    return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($138));
};
var runUI = function (renderSpec) {
    return function (component) {
        var subscribe = function (fresh) {
            return function (ref) {
                return function (consumer) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                            var v1 = Control_Monad_Eff_Ref.readRef(fresh)();
                            Control_Monad_Eff_Ref.modifyRef(fresh)(function (v2) {
                                return v2 + 1 | 0;
                            })();
                            Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map.insert(Data_Ord.ordInt)(v1)(v))();
                            return v1;
                        }))(function (v1) {
                            var producer = Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Either.Left.create)(Control_Monad_Aff_AVar.takeVar(v)));
                            return Data_Functor["void"](Control_Monad_Aff.functorAff)(Control_Monad_Aff.forkAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.connect(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelParAff)(producer)(consumer)))(function () {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map["delete"](Data_Ord.ordInt)(v1))))(function () {
                                    return Control_Monad_Aff_AVar.killVar(v)(Control_Monad_Eff_Exception.error("ended"));
                                });
                            })));
                        });
                    });
                };
            };
        };
        var rootHandler = function (ref) {
            return function (message) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                    return Data_Functor["void"](Control_Monad_Aff.functorAff)(Control_Monad_Aff.forkAll(Data_Map.foldableMap)(Data_Functor.map(Data_Map.functorMap)(function ($$var) {
                        return Control_Monad_Aff_AVar.putVar($$var)(message);
                    })(v)));
                });
            };
        };
        var queuingHandler = function ($$var) {
            return function (handler) {
                return function (message) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar($$var))(function (v) {
                        if (v.pendingIn instanceof Data_Maybe.Nothing) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar($$var)(v))(function () {
                                return handler(message);
                            });
                        };
                        if (v.pendingIn instanceof Data_Maybe.Just) {
                            return Control_Monad_Aff_AVar.putVar($$var)((function () {
                                var $51 = {};
                                for (var $52 in v) {
                                    if (v.hasOwnProperty($52)) {
                                        $51[$52] = v[$52];
                                    };
                                };
                                $51.pendingIn = new Data_Maybe.Just(new Data_List_Types.Cons(handler(message), v.pendingIn.value0));
                                return $51;
                            })());
                        };
                        throw new Error("Failed pattern match at Halogen.Aff.Driver line 269, column 5 - line 274, column 82: " + [ v.pendingIn.constructor.name ]);
                    });
                };
            };
        };
        var handlePending = function (ref) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)((function () {
                    var $57 = {};
                    for (var $58 in v) {
                        if (v.hasOwnProperty($58)) {
                            $57[$58] = v[$58];
                        };
                    };
                    $57.pendingIn = Data_Maybe.Nothing.value;
                    return $57;
                })()))(function () {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Foldable.for_(Control_Monad_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(v.pendingIn)(function ($139) {
                        return Control_Monad_Aff.forkAll(Data_List_Types.foldableList)(Data_List.reverse($139));
                    }))(function () {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v1) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)((function () {
                                var $61 = {};
                                for (var $62 in v1) {
                                    if (v1.hasOwnProperty($62)) {
                                        $61[$62] = v1[$62];
                                    };
                                };
                                $61.pendingOut = Data_Maybe.Nothing.value;
                                return $61;
                            })()))(function () {
                                return Data_Foldable.for_(Control_Monad_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(v1.pendingOut)(function ($140) {
                                    return Control_Monad_Aff.forkAll(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(v1.handler)(Data_List.reverse($140)));
                                });
                            });
                        });
                    });
                });
            });
        };
        var squashChildInitializers = function (ref) {
            return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                var parentInitializer = Data_Functor.map(Data_Maybe.functorMaybe)(evalF(st.selfRef))(st.component.initializer);
                return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(ref)(function (lchs) {
                    return {
                        initializers: Control_Applicative.pure(Data_List_Types.applicativeList)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Parallel.parSequence_(Control_Monad_Aff.parallelParAff)(Data_List_Types.traversableList)(Data_List.reverse(lchs.initializers)))(function () {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Foldable.sequence_(Control_Monad_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(parentInitializer))(function () {
                                return handlePending(st.selfRef);
                            });
                        })), 
                        finalizers: lchs.finalizers
                    };
                }));
            });
        };
        var runComponent = function (handler) {
            return function (fresh) {
                return function (lchs) {
                    return function (componentType) {
                        return Halogen_Component.unComponent(function (c) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(fresh)))(function (v) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(fresh)(function (v1) {
                                    return v1 + 1 | 0;
                                })))(function () {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Aff_Driver_State.initDriverState(c)(componentType)(handler)(v)(fresh))(function (v1) {
                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(Halogen_Aff_Driver_State.unDriverStateX(function ($141) {
                                            return render(lchs)((function (v2) {
                                                return v2.selfRef;
                                            })($141));
                                        }))(peekVar(v1)))(function () {
                                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(squashChildInitializers(lchs))(peekVar(v1)))(function () {
                                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1);
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    };
                };
            };
        };
        var renderChild = function (handler) {
            return function (fresh) {
                return function (mkOrdBox) {
                    return function (childrenInRef) {
                        return function (childrenOutRef) {
                            return function (lchs) {
                                return Halogen_Component.unComponentSlot(function (p) {
                                    return function (ctor) {
                                        return function (k) {
                                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(childrenInRef)))(function (v) {
                                                return Control_Bind.bind(Control_Monad_Aff.bindAff)((function () {
                                                    var $70 = Data_Map.pop(Halogen_Data_OrdBox.ordOrdBox)(mkOrdBox(p))(v);
                                                    if ($70 instanceof Data_Maybe.Just) {
                                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(childrenInRef)($70.value0.value1)))(function () {
                                                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)($70.value0.value0);
                                                        });
                                                    };
                                                    if ($70 instanceof Data_Maybe.Nothing) {
                                                        return runComponent(function ($142) {
                                                            return Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(handler)(k($142));
                                                        })(fresh)(lchs)(Halogen_Aff_Driver_State.Child.value)(Data_Lazy.force(ctor));
                                                    };
                                                    throw new Error("Failed pattern match at Halogen.Aff.Driver line 289, column 14 - line 294, column 87: " + [ $70.constructor.name ]);
                                                })())(function (v1) {
                                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(childrenOutRef)(Data_Map.insert(Halogen_Data_OrdBox.ordOrdBox)(mkOrdBox(p))(v1))))(function () {
                                                        return Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                            return renderSpec.renderChild(st.keyId)(st.rendering);
                                                        }))(peekVar(v1));
                                                    });
                                                });
                                            });
                                        };
                                    };
                                });
                            };
                        };
                    };
                };
            };
        };
        var render = function (lchs) {
            return function ($$var) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar($$var))(function (v) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(Data_Map.empty)))(function (v1) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(v.children)))(function (v2) {
                            var selfEval = evalF(v.selfRef);
                            var handler = function ($143) {
                                return Data_Functor["void"](Control_Monad_Aff.functorAff)(selfEval($143));
                            };
                            var handler$prime = Data_Maybe.maybe(handler)(function (v3) {
                                return queuingHandler(v.selfRef)(handler);
                            })(v.pendingIn);
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(renderSpec.render(function ($144) {
                                return handleAff(selfEval($144));
                            })(renderChild(handler$prime)(v.fresh)(v.mkOrdBox)(v2)(v1)(lchs))(v.component.render(v.state))(v.componentType)(v.rendering))(function (v3) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1)))(function (v4) {
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v2)))(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_Map.foldableMap)(Control_Bind.composeKleisliFlipped(Control_Monad_Aff.bindAff)(addFinalizer(lchs))(peekVar))))(function () {
                                        return Control_Monad_Aff_AVar.putVar($$var)({
                                            rendering: new Data_Maybe.Just(v3), 
                                            componentType: v.componentType, 
                                            component: v.component, 
                                            state: v.state, 
                                            children: v4, 
                                            mkOrdBox: v.mkOrdBox, 
                                            selfRef: v.selfRef, 
                                            handler: v.handler, 
                                            pendingIn: v.pendingIn, 
                                            pendingOut: v.pendingOut, 
                                            keyId: v.keyId, 
                                            fresh: v.fresh
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            };
        };
        var evalM = function (ref) {
            return function (v) {
                return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)($$eval(ref))(v);
            };
        };
        var evalF = function (ref) {
            return function (q) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(peekVar(ref))(function (v) {
                    var $84 = v.component["eval"](q);
                    return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)($$eval(ref))($84);
                });
            };
        };
        var evalChildQuery = function (ref) {
            return Halogen_Query_ChildQuery.unChildQuery(function (p) {
                return function (k) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(peekVar(ref))(function (v) {
                        var $86 = Data_Map.lookup(Halogen_Data_OrdBox.ordOrdBox)(v.mkOrdBox(p))(v.children);
                        if ($86 instanceof Data_Maybe.Just) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(peekVar($86.value0))(function (v1) {
                                return k(Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                    return evalF(ds.selfRef);
                                })(v1));
                            });
                        };
                        if ($86 instanceof Data_Maybe.Nothing) {
                            return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Slot lookup failed for child query"));
                        };
                        throw new Error("Failed pattern match at Halogen.Aff.Driver line 199, column 5 - line 203, column 73: " + [ $86.constructor.name ]);
                    });
                };
            });
        };
        var $$eval = function (ref) {
            return function (v) {
                if (v instanceof Halogen_Query_HalogenM.GetState) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(peekVar(ref))(function (v1) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0(v1.state));
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.ModifyState) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v1) {
                        var $94 = v.value0(v1.state);
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)((function () {
                            var $95 = {};
                            for (var $96 in v1) {
                                if (v1.hasOwnProperty($96)) {
                                    $95[$96] = v1[$96];
                                };
                            };
                            $95.state = $94.value1;
                            return $95;
                        })()))(function () {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(handleLifecycle(function (lchs) {
                                return render(lchs)(ref);
                            }))(function () {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)($94.value0);
                            });
                        });
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.Subscribe) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Query_EventSource.unEventSource(v.value0))(function (v1) {
                        var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Bind.bindFlipped(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(function ($145) {
                            return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(evalF(ref)($145));
                        })(Control_Coroutine["await"](Control_Monad_Aff.monadAff)))(function (v2) {
                            return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Data_Eq.eq(Halogen_Query_EventSource.eqSubscribeStatus)(v2)(Halogen_Query_EventSource.Listening.value))(consumer);
                        });
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.pullFrom(Control_Monad_Aff.monadRecAff)(consumer)(v1.producer)))(function () {
                            return v1.done;
                        });
                    })))(function () {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1);
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.Lift) {
                    return v.value0;
                };
                if (v instanceof Halogen_Query_HalogenM.Halt) {
                    return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error(v.value0));
                };
                if (v instanceof Halogen_Query_HalogenM.GetSlots) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(peekVar(ref))(function (v1) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0(Data_Functor.map(Data_List_Types.functorList)(Halogen_Data_OrdBox.unOrdBox)(Data_Map.keys(v1.children))));
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.CheckSlot) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(peekVar(ref))(function (v1) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1(Data_Map.member(Halogen_Data_OrdBox.ordOrdBox)(v1.mkOrdBox(v.value0))(v1.children)));
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.ChildQuery) {
                    return evalChildQuery(ref)(v.value0);
                };
                if (v instanceof Halogen_Query_HalogenM.Raise) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v1) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)((function () {
                            if (v1.pendingOut instanceof Data_Maybe.Nothing) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)(v1))(function () {
                                    return v1.handler(v.value0);
                                });
                            };
                            if (v1.pendingOut instanceof Data_Maybe.Just) {
                                return Control_Monad_Aff_AVar.putVar(ref)((function () {
                                    var $121 = {};
                                    for (var $122 in v1) {
                                        if (v1.hasOwnProperty($122)) {
                                            $121[$122] = v1[$122];
                                        };
                                    };
                                    $121.pendingOut = new Data_Maybe.Just(new Data_List_Types.Cons(v.value0, v1.pendingOut.value0));
                                    return $121;
                                })());
                            };
                            throw new Error("Failed pattern match at Halogen.Aff.Driver line 179, column 7 - line 184, column 71: " + [ v1.pendingOut.constructor.name ]);
                        })())(function () {
                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1);
                        });
                    });
                };
                if (v instanceof Halogen_Query_HalogenM.Par) {
                    return Control_Parallel_Class.sequential(Control_Monad_Aff.parallelParAff)(Control_Applicative_Free.retractFreeAp(Control_Monad_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function ($146) {
                        return Control_Parallel_Class.parallel(Control_Monad_Aff.parallelParAff)(evalM(ref)($146));
                    })(v.value0)));
                };
                if (v instanceof Halogen_Query_HalogenM.Fork) {
                    return Halogen_Query_ForkF.unFork(function (v1) {
                        return Data_Functor.map(Control_Monad_Aff.functorAff)(function ($147) {
                            return v1.value1(Data_Functor.map(Data_Functor.functorFn)(Control_Monad_Aff_Unsafe.unsafeCoerceAff)($147));
                        })(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalM(ref)(v1.value0)));
                    })(v.value0);
                };
                throw new Error("Failed pattern match at Halogen.Aff.Driver line 144, column 14 - line 190, column 61: " + [ v.constructor.name ]);
            };
        };
        var addFinalizer = function (ref) {
            return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Foldable.for_(Control_Monad_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(evalF(st.selfRef))(st.component.finalizer))(function (f) {
                    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(ref)(function (lchs) {
                        return {
                            initializers: lchs.initializers, 
                            finalizers: new Data_List_Types.Cons(f, lchs.finalizers)
                        };
                    }));
                }))(function () {
                    return Data_Foldable.for_(Control_Monad_Aff.applicativeAff)(Data_Map.foldableMap)(st.children)(Control_Bind.composeKleisliFlipped(Control_Monad_Aff.bindAff)(addFinalizer(ref))(peekVar));
                });
            });
        };
        var addInitializer = function (ref) {
            return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                var $134 = Data_Functor.map(Data_Maybe.functorMaybe)(evalF(st.selfRef))(st.component.initializer);
                if ($134 instanceof Data_Maybe.Just) {
                    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(ref)(function (lchs) {
                        return {
                            initializers: new Data_List_Types.Cons(handlePending(st.selfRef), new Data_List_Types.Cons($134.value0, lchs.initializers)), 
                            finalizers: lchs.finalizers
                        };
                    }));
                };
                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
            });
        };
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(0)))(function (v) {
            return handleLifecycle(function (lchs) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(Data_Map.empty)))(function (v1) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(runComponent(rootHandler(v1))(v)(lchs)(Halogen_Aff_Driver_State.Root.value)(component))(peekVar))(Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                            query: evalF(st.selfRef), 
                            subscribe: subscribe(v)(v1)
                        });
                    }));
                });
            });
        });
    };
};
module.exports = {
    runUI: runUI
};

},{"../Control.Applicative":41,"../Control.Applicative.Free":40,"../Control.Bind":47,"../Control.Coroutine":50,"../Control.Monad.Aff":61,"../Control.Monad.Aff.AVar":55,"../Control.Monad.Aff.Unsafe":59,"../Control.Monad.Eff":76,"../Control.Monad.Eff.Class":64,"../Control.Monad.Eff.Exception":68,"../Control.Monad.Eff.Ref":70,"../Control.Monad.Error.Class":77,"../Control.Monad.Fork":82,"../Control.Monad.Fork.Class":81,"../Control.Monad.Free":84,"../Control.Monad.Free.Trans":83,"../Control.Monad.Trans.Class":95,"../Control.Parallel":102,"../Control.Parallel.Class":101,"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.Lazy":185,"../Data.List":188,"../Data.List.Types":187,"../Data.Map":189,"../Data.Maybe":192,"../Data.Ord":209,"../Data.Semiring":218,"../Data.Traversable":227,"../Data.Tuple":229,"../Data.Unit":233,"../Halogen":257,"../Halogen.Aff.Driver.State":235,"../Halogen.Component":240,"../Halogen.Data.OrdBox":242,"../Halogen.Effects":243,"../Halogen.Query.ChildQuery":248,"../Halogen.Query.EventSource":249,"../Halogen.Query.ForkF":250,"../Halogen.Query.HalogenM":251,"../Prelude":266}],237:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Data_Maybe = require("../Data.Maybe");
var Data_Either = require("../Data.Either");
var Data_Nullable = require("../Data.Nullable");
var Data_Foreign = require("../Data.Foreign");
var DOM = require("../DOM");
var DOM_Event_EventTarget = require("../DOM.Event.EventTarget");
var DOM_HTML_Event_EventTypes = require("../DOM.HTML.Event.EventTypes");
var DOM_HTML = require("../DOM.HTML");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_HTML_Window = require("../DOM.HTML.Window");
var DOM_Node_ParentNode = require("../DOM.Node.ParentNode");
var Halogen_Effects = require("../Halogen.Effects");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var selectElement = function (query) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(function ($8) {
        return DOM_Node_ParentNode.querySelector(query)(DOM_HTML_Types.htmlDocumentToParentNode($8));
    })(DOM_HTML_Window.document))(DOM_HTML.window))))(function (v) {
        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)((function () {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Data_Maybe.Just) {
                return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Control_Monad_Except.runExcept(DOM_HTML_Types.readHTMLElement(Data_Foreign.toForeign(v.value0))));
            };
            throw new Error("Failed pattern match at Halogen.Aff.Util line 54, column 3 - line 56, column 88: " + [ v.constructor.name ]);
        })());
    });
};
var runHalogenAff = function ($9) {
    return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($9));
};
var awaitLoad = Control_Monad_Aff.makeAff(function (v) {
    return function (callback) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff)(function __do() {
            var $10 = DOM_HTML.window();
            return DOM_Event_EventTarget.addEventListener(DOM_HTML_Event_EventTypes.load)(DOM_Event_EventTarget.eventListener(function (v1) {
                return callback(Data_Unit.unit);
            }))(false)(DOM_HTML_Types.windowToEventTarget($10))();
        });
    };
});
var awaitBody = Control_Bind.bind(Control_Monad_Aff.bindAff)(awaitLoad)(function () {
    return Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Could not find body")))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)))(selectElement("body"));
});
module.exports = {
    awaitBody: awaitBody, 
    awaitLoad: awaitLoad, 
    runHalogenAff: runHalogenAff, 
    selectElement: selectElement
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Control.Monad.Aff":61,"../Control.Monad.Eff":76,"../Control.Monad.Eff.Class":64,"../Control.Monad.Eff.Exception":68,"../Control.Monad.Error.Class":77,"../Control.Monad.Except":79,"../Control.Semigroupoid":104,"../DOM":124,"../DOM.Event.EventTarget":108,"../DOM.HTML":117,"../DOM.HTML.Event.EventTypes":111,"../DOM.HTML.Types":113,"../DOM.HTML.Window":115,"../DOM.Node.ParentNode":122,"../Data.Either":144,"../Data.Foreign":163,"../Data.Function":166,"../Data.Functor":173,"../Data.Maybe":192,"../Data.Nullable":205,"../Data.Unit":233,"../Halogen.Effects":243,"../Prelude":266}],238:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Halogen_Aff_Driver = require("../Halogen.Aff.Driver");
var Halogen_Aff_Util = require("../Halogen.Aff.Util");
module.exports = {};

},{"../Halogen.Aff.Driver":236,"../Halogen.Aff.Util":237}],239:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct");
var Data_Maybe = require("../Data.Maybe");
var Halogen_Data_Injector = require("../Halogen.Data.Injector");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var ChildPath = (function () {
    function ChildPath(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChildPath.create = function (value0) {
        return function (value1) {
            return new ChildPath(value0, value1);
        };
    };
    return ChildPath;
})();
var prjSlot = function (v) {
    return Halogen_Data_Injector.prj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value1(dictChoice)(dictApplicative);
        };
    });
};
var prjQuery = function (v) {
    return Halogen_Data_Injector.prj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value0(dictChoice)(dictApplicative);
        };
    });
};
var injSlot = function (v) {
    return Halogen_Data_Injector.inj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value1(dictChoice)(dictApplicative);
        };
    });
};
var injQuery = function (v) {
    return Halogen_Data_Injector.inj(function (dictChoice) {
        return function (dictApplicative) {
            return v.value0(dictChoice)(dictApplicative);
        };
    });
};
var cpR = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injRC(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injRE(dictChoice)(dictApplicative);
    };
});
var cpL = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injLC(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injLE(dictChoice)(dictApplicative);
    };
});
var cpI = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injI(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injI(dictChoice)(dictApplicative);
    };
});
var cp9 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC9(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE9(dictChoice)(dictApplicative);
    };
});
var cp8 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC8(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE8(dictChoice)(dictApplicative);
    };
});
var cp7 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC7(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE7(dictChoice)(dictApplicative);
    };
});
var cp6 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC6(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE6(dictChoice)(dictApplicative);
    };
});
var cp5 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC5(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE5(dictChoice)(dictApplicative);
    };
});
var cp4 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC4(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE4(dictChoice)(dictApplicative);
    };
});
var cp3 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC3(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE3(dictChoice)(dictApplicative);
    };
});
var cp2 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC2(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE2(dictChoice)(dictApplicative);
    };
});
var cp10 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC10(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE10(dictChoice)(dictApplicative);
    };
});
var cp1 = new ChildPath(function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injC1(dictChoice)(dictApplicative);
    };
}, function (dictChoice) {
    return function (dictApplicative) {
        return Halogen_Data_Injector.injE1(dictChoice)(dictApplicative);
    };
});
var compose = function (v) {
    return function (v1) {
        return new ChildPath(function (dictChoice) {
            return function (dictApplicative) {
                return function ($88) {
                    return v.value0(dictChoice)(dictApplicative)(v1.value0(dictChoice)(dictApplicative)($88));
                };
            };
        }, function (dictChoice) {
            return function (dictApplicative) {
                return function ($89) {
                    return v.value1(dictChoice)(dictApplicative)(v1.value1(dictChoice)(dictApplicative)($89));
                };
            };
        });
    };
};
module.exports = {
    ChildPath: ChildPath, 
    compose: compose, 
    cp1: cp1, 
    cp10: cp10, 
    cp2: cp2, 
    cp3: cp3, 
    cp4: cp4, 
    cp5: cp5, 
    cp6: cp6, 
    cp7: cp7, 
    cp8: cp8, 
    cp9: cp9, 
    cpI: cpI, 
    cpL: cpL, 
    cpR: cpR, 
    injQuery: injQuery, 
    injSlot: injSlot, 
    prjQuery: prjQuery, 
    prjSlot: prjSlot
};

},{"../Control.Semigroupoid":104,"../Data.Either":144,"../Data.Functor.Coproduct":170,"../Data.Maybe":192,"../Halogen.Data.Injector":241,"../Prelude":266}],240:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Const = require("../Data.Const");
var Data_Lazy = require("../Data.Lazy");
var Data_Maybe = require("../Data.Maybe");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath");
var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Ord = require("../Data.Ord");
var ComponentSlot = (function () {
    function ComponentSlot(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ComponentSlot.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ComponentSlot(value0, value1, value2);
            };
        };
    };
    return ComponentSlot;
})();
var unComponentSlot = function (f) {
    return function (cs) {
        var $10 = Unsafe_Coerce.unsafeCoerce(cs);
        return f($10.value0)($10.value1)($10.value2);
    };
};
var unComponent = Unsafe_Coerce.unsafeCoerce;
var mkComponentSlot = Unsafe_Coerce.unsafeCoerce(ComponentSlot.create);
var mkComponent = Unsafe_Coerce.unsafeCoerce;
var parentComponent = function (dictOrd) {
    return function (spec) {
        return mkComponent({
            initialState: spec.initialState, 
            render: spec.render, 
            "eval": spec["eval"], 
            initializer: Data_Maybe.Nothing.value, 
            finalizer: Data_Maybe.Nothing.value, 
            mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
        });
    };
};
var lifecycleParentComponent = function (dictOrd) {
    return function (spec) {
        return mkComponent({
            initialState: spec.initialState, 
            render: spec.render, 
            "eval": spec["eval"], 
            initializer: spec.initializer, 
            finalizer: spec.finalizer, 
            mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
        });
    };
};
var lifecycleComponent = function (spec) {
    return mkComponent({
        initialState: spec.initialState, 
        render: Unsafe_Coerce.unsafeCoerce(spec.render), 
        "eval": spec["eval"], 
        initializer: spec.initializer, 
        finalizer: spec.finalizer, 
        mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(Data_Ord.ordVoid)
    });
};
var hoistSlotM = function (dictBifunctor) {
    return function (dictFunctor) {
        return function (nat) {
            return unComponentSlot(function (p) {
                return function (ctor) {
                    return function (k) {
                        return mkComponentSlot(p)(Data_Functor.map(Data_Lazy.functorLazy)(hoist(dictBifunctor)(dictFunctor)(nat))(ctor))(k);
                    };
                };
            });
        };
    };
};
var hoist = function (dictBifunctor) {
    return function (dictFunctor) {
        return function (nat) {
            return unComponent(function (c) {
                return mkComponent({
                    initialState: c.initialState, 
                    render: function ($14) {
                        return Data_Bifunctor.lmap(dictBifunctor)(hoistSlotM(dictBifunctor)(dictFunctor)(nat))(c.render($14));
                    }, 
                    "eval": function ($15) {
                        return Halogen_Query_HalogenM.hoistM(dictFunctor)(nat)(c["eval"]($15));
                    }, 
                    initializer: c.initializer, 
                    finalizer: c.finalizer, 
                    mkOrdBox: c.mkOrdBox
                });
            });
        };
    };
};
var component = function (spec) {
    return lifecycleComponent({
        initialState: spec.initialState, 
        render: spec.render, 
        "eval": spec["eval"], 
        initializer: Data_Maybe.Nothing.value, 
        finalizer: Data_Maybe.Nothing.value
    });
};
var bifunctorSlotF = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return unComponentSlot(function (p) {
            return function (ctor) {
                return function (k) {
                    return mkComponentSlot(f(p))(ctor)(function ($16) {
                        return Data_Functor.map(Data_Maybe.functorMaybe)(g)(k($16));
                    });
                };
            };
        });
    };
});
var functorSlotF = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorSlotF));
var transform = function (dictBifunctor) {
    return function (dictFunctor) {
        return function (reviewQ) {
            return function (previewQ) {
                return unComponent(function (c) {
                    return mkComponent({
                        initialState: c.initialState, 
                        render: function ($17) {
                            return Data_Bifunctor.bimap(dictBifunctor)(Data_Functor.map(functorSlotF)(reviewQ))(reviewQ)(c.render($17));
                        }, 
                        "eval": function ($18) {
                            return Data_Maybe.maybe(Halogen_Query_HalogenM.halt("prism failed in transform"))(function ($19) {
                                return Halogen_Query_HalogenM.hoistF(dictFunctor)(reviewQ)(c["eval"]($19));
                            })(previewQ($18));
                        }, 
                        initializer: Data_Functor.map(Data_Maybe.functorMaybe)(reviewQ)(c.initializer), 
                        finalizer: Data_Functor.map(Data_Maybe.functorMaybe)(reviewQ)(c.finalizer), 
                        mkOrdBox: c.mkOrdBox
                    });
                });
            };
        };
    };
};
var transformChild = function (dictBifunctor) {
    return function (dictFunctor) {
        return function (i) {
            return transform(dictBifunctor)(dictFunctor)(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component_ChildPath.prjQuery(i));
        };
    };
};
module.exports = {
    component: component, 
    hoist: hoist, 
    lifecycleComponent: lifecycleComponent, 
    lifecycleParentComponent: lifecycleParentComponent, 
    mkComponent: mkComponent, 
    mkComponentSlot: mkComponentSlot, 
    parentComponent: parentComponent, 
    transform: transform, 
    transformChild: transformChild, 
    unComponent: unComponent, 
    unComponentSlot: unComponentSlot, 
    bifunctorSlotF: bifunctorSlotF, 
    functorSlotF: functorSlotF
};

},{"../Control.Semigroupoid":104,"../Data.Bifunctor":130,"../Data.Const":141,"../Data.Functor":173,"../Data.Lazy":185,"../Data.Maybe":192,"../Data.Ord":209,"../Halogen.Component.ChildPath":239,"../Halogen.Data.OrdBox":242,"../Halogen.HTML.Core":244,"../Halogen.Query.HalogenM":251,"../Prelude":266,"../Unsafe.Coerce":269}],241:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Const = require("../Data.Const");
var Data_Either = require("../Data.Either");
var Data_Functor_Coproduct = require("../Data.Functor.Coproduct");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Newtype = require("../Data.Newtype");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Either_Nested = require("../Data.Either.Nested");
var Data_Functor_Coproduct_Nested = require("../Data.Functor.Coproduct.Nested");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Applicative = require("../Control.Applicative");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Category = require("../Control.Category");
var Tagged = function (x) {
    return x;
};
var unTagged = function (v) {
    return v;
};
var profunctorTagged = new Data_Profunctor.Profunctor(function (v) {
    return function (f) {
        return function (v1) {
            return f(v1);
        };
    };
});
var prj = function (p) {
    return function ($65) {
        return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Newtype.unwrap(Data_Const.newtypeConst)(p(Data_Profunctor_Choice.choiceFn)(Data_Const.applicativeConst(Data_Maybe_First.monoidFirst))(function ($66) {
            return Data_Const.Const(Data_Maybe_First.First(Data_Maybe.Just.create($66)));
        })($65)));
    };
};
var prism = function (f) {
    return function (g) {
        return function (dictChoice) {
            return function (dictApplicative) {
                return function ($67) {
                    return Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(g)(Data_Either.either(Control_Applicative.pure(dictApplicative))(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)))(Data_Profunctor_Choice.right(dictChoice)($67));
                };
            };
        };
    };
};
var prism$prime = function (f) {
    return function (g) {
        return function (dictChoice) {
            return function (dictApplicative) {
                return prism(f)(function (s) {
                    return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(g(s));
                })(dictChoice)(dictApplicative);
            };
        };
    };
};
var injRE = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either.Right.create)(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injRC = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct.right)(Data_Functor_Coproduct.coproduct(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injLE = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either.Left.create)(Data_Either.either(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value)))(dictChoice)(dictApplicative);
    };
};
var injLC = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct.left)(Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value)))(dictChoice)(dictApplicative);
    };
};
var injI = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Control_Category.id(Control_Category.categoryFn))(Data_Maybe.Just.create)(dictChoice)(dictApplicative);
    };
};
var injE9 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in9)(Data_Either_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injE8 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in8)(Data_Either_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injE7 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in7)(Data_Either_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injE6 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in6)(Data_Either_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injE5 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in5)(Data_Either_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injE4 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in4)(Data_Either_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injE3 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in3)(Data_Either_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injE2 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in2)(Data_Either_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injE10 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in10)(Data_Either_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injE1 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Either_Nested.in1)(Data_Either_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC9 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in9)(Data_Functor_Coproduct_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC8 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in8)(Data_Functor_Coproduct_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC7 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in7)(Data_Functor_Coproduct_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC6 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in6)(Data_Functor_Coproduct_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC5 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in5)(Data_Functor_Coproduct_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC4 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in4)(Data_Functor_Coproduct_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC3 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in3)(Data_Functor_Coproduct_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC2 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in2)(Data_Functor_Coproduct_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC10 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in10)(Data_Functor_Coproduct_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var injC1 = function (dictChoice) {
    return function (dictApplicative) {
        return prism$prime(Data_Functor_Coproduct_Nested.in1)(Data_Functor_Coproduct_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
    };
};
var choiceTagged = new Data_Profunctor_Choice.Choice(function () {
    return profunctorTagged;
}, function (v) {
    return new Data_Either.Left(v);
}, function (v) {
    return new Data_Either.Right(v);
});
var inj = function (p) {
    return function ($68) {
        return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(unTagged(p(choiceTagged)(Data_Identity.applicativeIdentity)(Tagged(Data_Identity.Identity($68)))));
    };
};
module.exports = {
    inj: inj, 
    injC1: injC1, 
    injC10: injC10, 
    injC2: injC2, 
    injC3: injC3, 
    injC4: injC4, 
    injC5: injC5, 
    injC6: injC6, 
    injC7: injC7, 
    injC8: injC8, 
    injC9: injC9, 
    injE1: injE1, 
    injE10: injE10, 
    injE2: injE2, 
    injE3: injE3, 
    injE4: injE4, 
    injE5: injE5, 
    injE6: injE6, 
    injE7: injE7, 
    injE8: injE8, 
    injE9: injE9, 
    injI: injI, 
    injLC: injLC, 
    injLE: injLE, 
    injRC: injRC, 
    injRE: injRE, 
    prj: prj
};

},{"../Control.Applicative":41,"../Control.Category":48,"../Control.Semigroupoid":104,"../Data.Const":141,"../Data.Either":144,"../Data.Either.Nested":143,"../Data.Function":166,"../Data.Functor":173,"../Data.Functor.Coproduct":170,"../Data.Functor.Coproduct.Nested":169,"../Data.Identity":178,"../Data.Maybe":192,"../Data.Maybe.First":190,"../Data.Newtype":202,"../Data.Profunctor":212,"../Data.Profunctor.Choice":211,"../Prelude":266}],242:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var OrdBox = (function () {
    function OrdBox(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    OrdBox.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new OrdBox(value0, value1, value2);
            };
        };
    };
    return OrdBox;
})();
var unOrdBox = function (v) {
    return v.value2;
};
var mkOrdBox = function (dictOrd) {
    return OrdBox.create(Data_Eq.eq(dictOrd["__superclass_Data.Eq.Eq_0"]()))(Data_Ord.compare(dictOrd));
};
var eqOrdBox = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.value0(v.value2)(v1.value2);
    };
});
var ordOrdBox = new Data_Ord.Ord(function () {
    return eqOrdBox;
}, function (v) {
    return function (v1) {
        return v.value1(v.value2)(v1.value2);
    };
});
module.exports = {
    mkOrdBox: mkOrdBox, 
    unOrdBox: unOrdBox, 
    eqOrdBox: eqOrdBox, 
    ordOrdBox: ordOrdBox
};

},{"../Data.Eq":147,"../Data.Ord":209,"../Prelude":266}],243:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var DOM = require("../DOM");
module.exports = {};

},{"../Control.Monad.Aff.AVar":55,"../Control.Monad.Eff.Exception":68,"../Control.Monad.Eff.Ref":70,"../DOM":124}],244:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Exists = require("../Data.Exists");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var DOM_Event_Types = require("../DOM.Event.Types");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Show = require("../Data.Show");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Control_Apply = require("../Control.Apply");
var Data_Unit = require("../Data.Unit");
var Control_Applicative = require("../Control.Applicative");
var TagName = function (x) {
    return x;
};
var PropName = function (x) {
    return x;
};
var Namespace = function (x) {
    return x;
};
var ClassName = function (x) {
    return x;
};
var AttrName = function (x) {
    return x;
};
var PropF = (function () {
    function PropF(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    PropF.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new PropF(value0, value1, value2);
            };
        };
    };
    return PropF;
})();
var Prop = (function () {
    function Prop(value0) {
        this.value0 = value0;
    };
    Prop.create = function (value0) {
        return new Prop(value0);
    };
    return Prop;
})();
var Attr = (function () {
    function Attr(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Attr.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Attr(value0, value1, value2);
            };
        };
    };
    return Attr;
})();
var Key = (function () {
    function Key(value0) {
        this.value0 = value0;
    };
    Key.create = function (value0) {
        return new Key(value0);
    };
    return Key;
})();
var Handler = (function () {
    function Handler(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Handler.create = function (value0) {
        return function (value1) {
            return new Handler(value0, value1);
        };
    };
    return Handler;
})();
var Ref = (function () {
    function Ref(value0) {
        this.value0 = value0;
    };
    Ref.create = function (value0) {
        return new Ref(value0);
    };
    return Ref;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Element = (function () {
    function Element(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Element.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Element(value0, value1, value2, value3);
                };
            };
        };
    };
    return Element;
})();
var Slot = (function () {
    function Slot(value0) {
        this.value0 = value0;
    };
    Slot.create = function (value0) {
        return new Slot(value0);
    };
    return Slot;
})();
var Fuse = (function () {
    function Fuse(value0) {
        this.value0 = value0;
    };
    Fuse.create = function (value0) {
        return new Fuse(value0);
    };
    return Fuse;
})();
var FuseF = (function () {
    function FuseF(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    FuseF.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new FuseF(value0, value1, value2);
            };
        };
    };
    return FuseF;
})();
var IsProp = function (toPropString) {
    this.toPropString = toPropString;
};
var unFuse = Unsafe_Coerce.unsafeCoerce;
var toPropString = function (dict) {
    return dict.toPropString;
};
var stringIsProp = new IsProp(function (v) {
    return function (v1) {
        return function (s) {
            return s;
        };
    };
});
var prop = function (dictIsProp) {
    return function (pn) {
        return function (an) {
            return function (v) {
                return new Prop(Data_Exists.mkExists(new PropF(pn, v, Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(toPropString(dictIsProp)))(an))));
            };
        };
    };
};
var ordTagName = Data_Ord.ordString;
var ordPropName = Data_Ord.ordString;
var ordNamespace = Data_Ord.ordString;
var ordClassName = Data_Ord.ordString;
var ordAttrName = Data_Ord.ordString;
var numberIsProp = new IsProp(function (v) {
    return function (v1) {
        return function (n) {
            return Data_Show.show(Data_Show.showNumber)(n);
        };
    };
});
var newtypeTagName = new Data_Newtype.Newtype(function (n) {
    return n;
}, TagName);
var newtypePropName = new Data_Newtype.Newtype(function (n) {
    return n;
}, PropName);
var newtypeNamespace = new Data_Newtype.Newtype(function (n) {
    return n;
}, Namespace);
var newtypeClassName = new Data_Newtype.Newtype(function (n) {
    return n;
}, ClassName);
var newtypeAttrName = new Data_Newtype.Newtype(function (n) {
    return n;
}, AttrName);
var mkFuse = Unsafe_Coerce.unsafeCoerce;
var intIsProp = new IsProp(function (v) {
    return function (v1) {
        return function (i) {
            return Data_Show.show(Data_Show.showInt)(i);
        };
    };
});
var handler = Handler.create;
var genericTagName = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.HTML.Core.TagName" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(TagName))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.HTML.Core.TagName", [ {
        sigConstructor: "Halogen.HTML.Core.TagName", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.HTML.Core.TagName", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var genericPropName = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.HTML.Core.PropName" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(PropName))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.HTML.Core.PropName", [ {
        sigConstructor: "Halogen.HTML.Core.PropName", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.HTML.Core.PropName", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var genericNamespace = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.HTML.Core.Namespace" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Namespace))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.HTML.Core.Namespace", [ {
        sigConstructor: "Halogen.HTML.Core.Namespace", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.HTML.Core.Namespace", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var genericClassName = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.HTML.Core.ClassName" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ClassName))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.HTML.Core.ClassName", [ {
        sigConstructor: "Halogen.HTML.Core.ClassName", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.HTML.Core.ClassName", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var genericAttrName = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Halogen.HTML.Core.AttrName" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(AttrName))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Halogen.HTML.Core.AttrName", [ {
        sigConstructor: "Halogen.HTML.Core.AttrName", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Halogen.HTML.Core.AttrName", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var fuse = function (k) {
    return function (l) {
        return function (html) {
            return mkFuse(new FuseF(k, l, html));
        };
    };
};
var functorProp = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Prop) {
            return new Prop(v1.value0);
        };
        if (v1 instanceof Key) {
            return new Key(v1.value0);
        };
        if (v1 instanceof Attr) {
            return new Attr(v1.value0, v1.value1, v1.value2);
        };
        if (v1 instanceof Handler) {
            return new Handler(v1.value0, function ($121) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(v)(v1.value1($121));
            });
        };
        if (v1 instanceof Ref) {
            return new Ref(function ($122) {
                return v(v1.value0($122));
            });
        };
        throw new Error("Failed pattern match at Halogen.HTML.Core line 84, column 3 - line 84, column 26: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var eqTagName = Data_Eq.eqString;
var eqPropName = Data_Eq.eqString;
var eqNamespace = Data_Eq.eqString;
var eqClassName = Data_Eq.eqString;
var eqAttrName = Data_Eq.eqString;
var element = Element.create(Data_Maybe.Nothing.value);
var booleanIsProp = new IsProp(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2) {
                return v;
            };
            if (!v2) {
                return "";
            };
            throw new Error("Failed pattern match at Halogen.HTML.Core line 158, column 3 - line 158, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifunctorFuse = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return unFuse(function (v) {
            return mkFuse(new FuseF(function ($123) {
                return f(v.value0($123));
            }, function ($124) {
                return g(v.value1($124));
            }, v.value2));
        });
    };
});
var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            if (v instanceof Fuse) {
                return new Fuse(Data_Bifunctor.bimap(bifunctorFuse)(f)(g)(v.value0));
            };
            return new Fuse(fuse(f)(g)(v));
        };
    };
});
var functorHTML = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorHTML));
var functorFuse = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorFuse));
var lowerFuse = (function () {
    var go = function (f) {
        return function (g) {
            return function (v) {
                if (v instanceof Text) {
                    return new Text(v.value0);
                };
                if (v instanceof Element) {
                    return new Element(v.value0, v.value1, Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(functorProp)(g))(v.value2), Data_Functor.map(Data_Functor.functorArray)(go(f)(g))(v.value3));
                };
                if (v instanceof Slot) {
                    return new Slot(f(v.value0));
                };
                if (v instanceof Fuse) {
                    return lowerFuse(Data_Bifunctor.bimap(bifunctorFuse)(f)(g)(v.value0));
                };
                throw new Error("Failed pattern match at Halogen.HTML.Core line 130, column 12 - line 138, column 30: " + [ v.constructor.name ]);
            };
        };
    };
    return unFuse(function (v) {
        return go(v.value0)(v.value1)(v.value2);
    });
})();
var fillSlot = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Text) {
                    return Control_Applicative.pure(dictApplicative)(new Text(v2.value0));
                };
                if (v2 instanceof Element) {
                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Element.create(v2.value0)(v2.value1)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(functorProp)(v1))(v2.value2)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(fillSlot(dictApplicative)(v)(v1))(v2.value3));
                };
                if (v2 instanceof Slot) {
                    return v(v2.value0);
                };
                if (v2 instanceof Fuse) {
                    return fillSlot(dictApplicative)(v)(v1)(lowerFuse(v2.value0));
                };
                throw new Error("Failed pattern match at Halogen.HTML.Core line 62, column 1 - line 62, column 38: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
};
var attr = Attr.create(Data_Maybe.Nothing.value);
module.exports = {
    AttrName: AttrName, 
    ClassName: ClassName, 
    Text: Text, 
    Element: Element, 
    Slot: Slot, 
    Fuse: Fuse, 
    Namespace: Namespace, 
    Prop: Prop, 
    Attr: Attr, 
    Key: Key, 
    Handler: Handler, 
    Ref: Ref, 
    PropF: PropF, 
    PropName: PropName, 
    TagName: TagName, 
    IsProp: IsProp, 
    attr: attr, 
    element: element, 
    fillSlot: fillSlot, 
    handler: handler, 
    lowerFuse: lowerFuse, 
    prop: prop, 
    toPropString: toPropString, 
    bifunctorHTML: bifunctorHTML, 
    functorHTML: functorHTML, 
    functorProp: functorProp, 
    bifunctorFuse: bifunctorFuse, 
    functorFuse: functorFuse, 
    stringIsProp: stringIsProp, 
    intIsProp: intIsProp, 
    numberIsProp: numberIsProp, 
    booleanIsProp: booleanIsProp, 
    newtypeNamespace: newtypeNamespace, 
    eqNamespace: eqNamespace, 
    ordNamespace: ordNamespace, 
    genericNamespace: genericNamespace, 
    newtypeTagName: newtypeTagName, 
    eqTagName: eqTagName, 
    ordTagName: ordTagName, 
    genericTagName: genericTagName, 
    newtypePropName: newtypePropName, 
    eqPropName: eqPropName, 
    ordPropName: ordPropName, 
    genericPropName: genericPropName, 
    newtypeAttrName: newtypeAttrName, 
    eqAttrName: eqAttrName, 
    ordAttrName: ordAttrName, 
    genericAttrName: genericAttrName, 
    newtypeClassName: newtypeClassName, 
    eqClassName: eqClassName, 
    ordClassName: ordClassName, 
    genericClassName: genericClassName
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Semigroupoid":104,"../DOM.Event.Types":110,"../DOM.HTML.Types":113,"../Data.Bifunctor":130,"../Data.Eq":147,"../Data.Exists":150,"../Data.Function":166,"../Data.Functor":173,"../Data.Generic":175,"../Data.Maybe":192,"../Data.Newtype":202,"../Data.Ord":209,"../Data.Show":221,"../Data.Traversable":227,"../Data.Tuple":229,"../Data.Unit":233,"../Prelude":266,"../Unsafe.Coerce":269}],245:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var element = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Core.element);
var em = element("em");
var em_ = em([  ]);
var embed = element("embed");
var embed_ = embed([  ]);
var fieldset = element("fieldset");
var fieldset_ = fieldset([  ]);
var figcaption = element("figcaption");
var figcaption_ = figcaption([  ]);
var figure = element("figure");
var figure_ = figure([  ]);
var footer = element("footer");
var footer_ = footer([  ]);
var form = element("form");
var form_ = form([  ]);
var h1 = element("h1");
var h1_ = h1([  ]);
var h2_ = h1([  ]);
var h3_ = h1([  ]);
var h4_ = h1([  ]);
var h5_ = h1([  ]);
var h6_ = h1([  ]);
var h2 = element("h2");
var h3 = element("h3");
var h4 = element("h4");
var h5 = element("h5");
var h6 = element("h6");
var head = element("head");
var head_ = head([  ]);
var header = element("header");
var header_ = header([  ]);
var hr = function (props) {
    return element("hr")(props)([  ]);
};
var hr_ = hr([  ]);
var html = element("html");
var html_ = html([  ]);
var i = element("i");
var i_ = i([  ]);
var iframe = function (props) {
    return element("iframe")(props)([  ]);
};
var img = function (props) {
    return element("img")(props)([  ]);
};
var input = function (props) {
    return element("input")(props)([  ]);
};
var ins = element("ins");
var ins_ = ins([  ]);
var kbd = element("kbd");
var kbd_ = kbd([  ]);
var keygen = function (props) {
    return element("keygen")(props)([  ]);
};
var label = element("label");
var label_ = label([  ]);
var legend = element("legend");
var legend_ = legend([  ]);
var li = element("li");
var li_ = li([  ]);
var link = function (props) {
    return element("link")(props)([  ]);
};
var main = element("main");
var main_ = main([  ]);
var map = element("map");
var map_ = map([  ]);
var mark = element("mark");
var mark_ = mark([  ]);
var menu = element("menu");
var menu_ = menu([  ]);
var menuitem = element("menuitem");
var menuitem_ = menuitem([  ]);
var meta = function (props) {
    return element("meta")(props)([  ]);
};
var meter = element("meter");
var meter_ = meter([  ]);
var nav = element("nav");
var nav_ = nav([  ]);
var noscript = element("noscript");
var noscript_ = noscript([  ]);
var object = element("object");
var object_ = object([  ]);
var ol = element("ol");
var ol_ = ol([  ]);
var optgroup = element("optgroup");
var optgroup_ = optgroup([  ]);
var option = element("option");
var option_ = option([  ]);
var output = element("output");
var output_ = output([  ]);
var p = element("p");
var p_ = p([  ]);
var param = function (props) {
    return element("param")(props)([  ]);
};
var pre = element("pre");
var pre_ = pre([  ]);
var progress = element("progress");
var progress_ = progress([  ]);
var q = element("q");
var q_ = q([  ]);
var rp = element("rp");
var rp_ = rp([  ]);
var rt = element("rt");
var rt_ = rt([  ]);
var ruby = element("ruby");
var ruby_ = ruby([  ]);
var samp = element("samp");
var samp_ = samp([  ]);
var script = element("script");
var script_ = script([  ]);
var section = element("section");
var section_ = section([  ]);
var select = element("select");
var select_ = select([  ]);
var small = element("small");
var small_ = small([  ]);
var source = function (props) {
    return element("source")(props)([  ]);
};
var span = element("span");
var span_ = span([  ]);
var strong = element("strong");
var strong_ = strong([  ]);
var style = element("style");
var style_ = style([  ]);
var sub = element("sub");
var sub_ = sub([  ]);
var summary = element("summary");
var summary_ = summary([  ]);
var sup = element("sup");
var sup_ = sup([  ]);
var table = element("table");
var table_ = table([  ]);
var tbody = element("tbody");
var tbody_ = tbody([  ]);
var td = element("td");
var td_ = td([  ]);
var textarea = function (es) {
    return element("textarea")(es)([  ]);
};
var tfoot = element("tfoot");
var tfoot_ = tfoot([  ]);
var th = element("th");
var th_ = th([  ]);
var thead = element("thead");
var thead_ = thead([  ]);
var time = element("time");
var time_ = time([  ]);
var title = element("title");
var title_ = title([  ]);
var tr = element("tr");
var tr_ = tr([  ]);
var track = function (props) {
    return element("track")(props)([  ]);
};
var u = element("u");
var u_ = u([  ]);
var ul = element("ul");
var ul_ = ul([  ]);
var $$var = element("var");
var var_ = $$var([  ]);
var video = element("video");
var video_ = video([  ]);
var wbr = function (props) {
    return element("wbr")(props)([  ]);
};
var dt = element("dt");
var dt_ = dt([  ]);
var dl = element("dl");
var dl_ = dl([  ]);
var div = element("div");
var div_ = div([  ]);
var dialog = element("dialog");
var dialog_ = dialog([  ]);
var dfn = element("dfn");
var dfn_ = dfn([  ]);
var details = element("details");
var details_ = details([  ]);
var del = element("del");
var del_ = del([  ]);
var dd = element("dd");
var dd_ = dd([  ]);
var datalist = element("datalist");
var datalist_ = datalist([  ]);
var command = function (props) {
    return element("command")(props)([  ]);
};
var colgroup = element("colgroup");
var colgroup_ = colgroup([  ]);
var col = function (props) {
    return element("col")(props)([  ]);
};
var code = element("code");
var code_ = code([  ]);
var cite = element("cite");
var cite_ = cite([  ]);
var caption = element("caption");
var caption_ = caption([  ]);
var canvas = function (props) {
    return element("canvas")(props)([  ]);
};
var button = element("button");
var button_ = button([  ]);
var br = function (props) {
    return element("br")(props)([  ]);
};
var br_ = br([  ]);
var body = element("body");
var body_ = body([  ]);
var blockquote = element("blockquote");
var blockquote_ = blockquote([  ]);
var bdo = element("bdo");
var bdo_ = bdo([  ]);
var bdi = element("bdi");
var bdi_ = bdi([  ]);
var base = function (props) {
    return element("base")(props)([  ]);
};
var b = element("b");
var b_ = b([  ]);
var audio = element("audio");
var audio_ = audio([  ]);
var aside = element("aside");
var aside_ = aside([  ]);
var article = element("article");
var article_ = article([  ]);
var area = function (props) {
    return element("area")(props)([  ]);
};
var address = element("address");
var address_ = address([  ]);
var abbr = element("abbr");
var abbr_ = abbr([  ]);
var a = element("a");
var a_ = a([  ]);
module.exports = {
    a: a, 
    a_: a_, 
    abbr: abbr, 
    abbr_: abbr_, 
    address: address, 
    address_: address_, 
    area: area, 
    article: article, 
    article_: article_, 
    aside: aside, 
    aside_: aside_, 
    audio: audio, 
    audio_: audio_, 
    b: b, 
    b_: b_, 
    base: base, 
    bdi: bdi, 
    bdi_: bdi_, 
    bdo: bdo, 
    bdo_: bdo_, 
    blockquote: blockquote, 
    blockquote_: blockquote_, 
    body: body, 
    body_: body_, 
    br: br, 
    br_: br_, 
    button: button, 
    button_: button_, 
    canvas: canvas, 
    caption: caption, 
    caption_: caption_, 
    cite: cite, 
    cite_: cite_, 
    code: code, 
    code_: code_, 
    col: col, 
    colgroup: colgroup, 
    colgroup_: colgroup_, 
    command: command, 
    datalist: datalist, 
    datalist_: datalist_, 
    dd: dd, 
    dd_: dd_, 
    del: del, 
    del_: del_, 
    details: details, 
    details_: details_, 
    dfn: dfn, 
    dfn_: dfn_, 
    dialog: dialog, 
    dialog_: dialog_, 
    div: div, 
    div_: div_, 
    dl: dl, 
    dl_: dl_, 
    dt: dt, 
    dt_: dt_, 
    element: element, 
    em: em, 
    em_: em_, 
    embed: embed, 
    embed_: embed_, 
    fieldset: fieldset, 
    fieldset_: fieldset_, 
    figcaption: figcaption, 
    figcaption_: figcaption_, 
    figure: figure, 
    figure_: figure_, 
    footer: footer, 
    footer_: footer_, 
    form: form, 
    form_: form_, 
    h1: h1, 
    h1_: h1_, 
    h2: h2, 
    h2_: h2_, 
    h3: h3, 
    h3_: h3_, 
    h4: h4, 
    h4_: h4_, 
    h5: h5, 
    h5_: h5_, 
    h6: h6, 
    h6_: h6_, 
    head: head, 
    head_: head_, 
    header: header, 
    header_: header_, 
    hr: hr, 
    hr_: hr_, 
    html: html, 
    html_: html_, 
    i: i, 
    i_: i_, 
    iframe: iframe, 
    img: img, 
    input: input, 
    ins: ins, 
    ins_: ins_, 
    kbd: kbd, 
    kbd_: kbd_, 
    keygen: keygen, 
    label: label, 
    label_: label_, 
    legend: legend, 
    legend_: legend_, 
    li: li, 
    li_: li_, 
    link: link, 
    main: main, 
    main_: main_, 
    map: map, 
    map_: map_, 
    mark: mark, 
    mark_: mark_, 
    menu: menu, 
    menu_: menu_, 
    menuitem: menuitem, 
    menuitem_: menuitem_, 
    meta: meta, 
    meter: meter, 
    meter_: meter_, 
    nav: nav, 
    nav_: nav_, 
    noscript: noscript, 
    noscript_: noscript_, 
    object: object, 
    object_: object_, 
    ol: ol, 
    ol_: ol_, 
    optgroup: optgroup, 
    optgroup_: optgroup_, 
    option: option, 
    option_: option_, 
    output: output, 
    output_: output_, 
    p: p, 
    p_: p_, 
    param: param, 
    pre: pre, 
    pre_: pre_, 
    progress: progress, 
    progress_: progress_, 
    q: q, 
    q_: q_, 
    rp: rp, 
    rp_: rp_, 
    rt: rt, 
    rt_: rt_, 
    ruby: ruby, 
    ruby_: ruby_, 
    samp: samp, 
    samp_: samp_, 
    script: script, 
    script_: script_, 
    section: section, 
    section_: section_, 
    select: select, 
    select_: select_, 
    small: small, 
    small_: small_, 
    source: source, 
    span: span, 
    span_: span_, 
    strong: strong, 
    strong_: strong_, 
    style: style, 
    style_: style_, 
    sub: sub, 
    sub_: sub_, 
    summary: summary, 
    summary_: summary_, 
    sup: sup, 
    sup_: sup_, 
    table: table, 
    table_: table_, 
    tbody: tbody, 
    tbody_: tbody_, 
    td: td, 
    td_: td_, 
    textarea: textarea, 
    tfoot: tfoot, 
    tfoot_: tfoot_, 
    th: th, 
    th_: th_, 
    thead: thead, 
    thead_: thead_, 
    time: time, 
    time_: time_, 
    title: title, 
    title_: title_, 
    tr: tr, 
    tr_: tr_, 
    track: track, 
    u: u, 
    u_: u_, 
    ul: ul, 
    ul_: ul_, 
    "var": $$var, 
    var_: var_, 
    video: video, 
    video_: video_, 
    wbr: wbr
};

},{"../Halogen.HTML.Core":244,"../Halogen.HTML.Properties":246,"../Unsafe.Coerce":269}],246:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_Newtype = require("../Data.Newtype");
var Data_String = require("../Data.String");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Function = require("../Data.Function");
var Data_Show = require("../Data.Show");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Functor = require("../Data.Functor");
var MenuitemCommand = (function () {
    function MenuitemCommand() {

    };
    MenuitemCommand.value = new MenuitemCommand();
    return MenuitemCommand;
})();
var MenuitemCheckbox = (function () {
    function MenuitemCheckbox() {

    };
    MenuitemCheckbox.value = new MenuitemCheckbox();
    return MenuitemCheckbox;
})();
var MenuitemRadio = (function () {
    function MenuitemRadio() {

    };
    MenuitemRadio.value = new MenuitemRadio();
    return MenuitemRadio;
})();
var MenuList = (function () {
    function MenuList() {

    };
    MenuList.value = new MenuList();
    return MenuList;
})();
var MenuContext = (function () {
    function MenuContext() {

    };
    MenuContext.value = new MenuContext();
    return MenuContext;
})();
var MenuToolbar = (function () {
    function MenuToolbar() {

    };
    MenuToolbar.value = new MenuToolbar();
    return MenuToolbar;
})();
var Pixels = (function () {
    function Pixels(value0) {
        this.value0 = value0;
    };
    Pixels.create = function (value0) {
        return new Pixels(value0);
    };
    return Pixels;
})();
var Percent = (function () {
    function Percent(value0) {
        this.value0 = value0;
    };
    Percent.create = function (value0) {
        return new Percent(value0);
    };
    return Percent;
})();
var InputButton = (function () {
    function InputButton() {

    };
    InputButton.value = new InputButton();
    return InputButton;
})();
var InputCheckbox = (function () {
    function InputCheckbox() {

    };
    InputCheckbox.value = new InputCheckbox();
    return InputCheckbox;
})();
var InputColor = (function () {
    function InputColor() {

    };
    InputColor.value = new InputColor();
    return InputColor;
})();
var InputDate = (function () {
    function InputDate() {

    };
    InputDate.value = new InputDate();
    return InputDate;
})();
var InputDatetime = (function () {
    function InputDatetime() {

    };
    InputDatetime.value = new InputDatetime();
    return InputDatetime;
})();
var InputDatetimeLocal = (function () {
    function InputDatetimeLocal() {

    };
    InputDatetimeLocal.value = new InputDatetimeLocal();
    return InputDatetimeLocal;
})();
var InputEmail = (function () {
    function InputEmail() {

    };
    InputEmail.value = new InputEmail();
    return InputEmail;
})();
var InputFile = (function () {
    function InputFile() {

    };
    InputFile.value = new InputFile();
    return InputFile;
})();
var InputHidden = (function () {
    function InputHidden() {

    };
    InputHidden.value = new InputHidden();
    return InputHidden;
})();
var InputImage = (function () {
    function InputImage() {

    };
    InputImage.value = new InputImage();
    return InputImage;
})();
var InputMonth = (function () {
    function InputMonth() {

    };
    InputMonth.value = new InputMonth();
    return InputMonth;
})();
var InputNumber = (function () {
    function InputNumber() {

    };
    InputNumber.value = new InputNumber();
    return InputNumber;
})();
var InputPassword = (function () {
    function InputPassword() {

    };
    InputPassword.value = new InputPassword();
    return InputPassword;
})();
var InputRadio = (function () {
    function InputRadio() {

    };
    InputRadio.value = new InputRadio();
    return InputRadio;
})();
var InputRange = (function () {
    function InputRange() {

    };
    InputRange.value = new InputRange();
    return InputRange;
})();
var InputReset = (function () {
    function InputReset() {

    };
    InputReset.value = new InputReset();
    return InputReset;
})();
var InputSearch = (function () {
    function InputSearch() {

    };
    InputSearch.value = new InputSearch();
    return InputSearch;
})();
var InputSubmit = (function () {
    function InputSubmit() {

    };
    InputSubmit.value = new InputSubmit();
    return InputSubmit;
})();
var InputTel = (function () {
    function InputTel() {

    };
    InputTel.value = new InputTel();
    return InputTel;
})();
var InputText = (function () {
    function InputText() {

    };
    InputText.value = new InputText();
    return InputText;
})();
var InputTime = (function () {
    function InputTime() {

    };
    InputTime.value = new InputTime();
    return InputTime;
})();
var InputUrl = (function () {
    function InputUrl() {

    };
    InputUrl.value = new InputUrl();
    return InputUrl;
})();
var InputWeek = (function () {
    function InputWeek() {

    };
    InputWeek.value = new InputWeek();
    return InputWeek;
})();
var IProp = function (x) {
    return x;
};
var POST = (function () {
    function POST() {

    };
    POST.value = new POST();
    return POST;
})();
var GET = (function () {
    function GET() {

    };
    GET.value = new GET();
    return GET;
})();
var Uppercase = (function () {
    function Uppercase() {

    };
    Uppercase.value = new Uppercase();
    return Uppercase;
})();
var Lowercase = (function () {
    function Lowercase() {

    };
    Lowercase.value = new Lowercase();
    return Lowercase;
})();
var NumeralDecimal = (function () {
    function NumeralDecimal() {

    };
    NumeralDecimal.value = new NumeralDecimal();
    return NumeralDecimal;
})();
var NumeralRoman = (function () {
    function NumeralRoman(value0) {
        this.value0 = value0;
    };
    NumeralRoman.create = function (value0) {
        return new NumeralRoman(value0);
    };
    return NumeralRoman;
})();
var OrderedListNumeric = (function () {
    function OrderedListNumeric(value0) {
        this.value0 = value0;
    };
    OrderedListNumeric.create = function (value0) {
        return new OrderedListNumeric(value0);
    };
    return OrderedListNumeric;
})();
var OrderedListAlphabetic = (function () {
    function OrderedListAlphabetic(value0) {
        this.value0 = value0;
    };
    OrderedListAlphabetic.create = function (value0) {
        return new OrderedListAlphabetic(value0);
    };
    return OrderedListAlphabetic;
})();
var ButtonButton = (function () {
    function ButtonButton() {

    };
    ButtonButton.value = new ButtonButton();
    return ButtonButton;
})();
var ButtonSubmit = (function () {
    function ButtonSubmit() {

    };
    ButtonSubmit.value = new ButtonSubmit();
    return ButtonSubmit;
})();
var ButtonReset = (function () {
    function ButtonReset() {

    };
    ButtonReset.value = new ButtonReset();
    return ButtonReset;
})();
var renderOrderedListType = function (v) {
    if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralDecimal) {
        return "1";
    };
    if (v instanceof OrderedListNumeric && (v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Lowercase)) {
        return "i";
    };
    if (v instanceof OrderedListNumeric && (v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Uppercase)) {
        return "I";
    };
    if (v instanceof OrderedListAlphabetic && v.value0 instanceof Lowercase) {
        return "a";
    };
    if (v instanceof OrderedListAlphabetic && v.value0 instanceof Uppercase) {
        return "A";
    };
    throw new Error("Failed pattern match at Halogen.HTML.Properties line 332, column 25 - line 339, column 1: " + [ v.constructor.name ]);
};
var renderMenuitemType = function (v) {
    if (v instanceof MenuitemCommand) {
        return "command";
    };
    if (v instanceof MenuitemCheckbox) {
        return "checkbox";
    };
    if (v instanceof MenuitemRadio) {
        return "radio";
    };
    throw new Error("Failed pattern match at Halogen.HTML.Properties line 294, column 22 - line 299, column 1: " + [ v.constructor.name ]);
};
var renderMenuType = function (v) {
    if (v instanceof MenuList) {
        return "list";
    };
    if (v instanceof MenuContext) {
        return "context";
    };
    if (v instanceof MenuToolbar) {
        return "toolbar";
    };
    throw new Error("Failed pattern match at Halogen.HTML.Properties line 280, column 18 - line 285, column 1: " + [ v.constructor.name ]);
};
var renderInputType = function (v) {
    if (v instanceof InputButton) {
        return "button";
    };
    if (v instanceof InputCheckbox) {
        return "checkbox";
    };
    if (v instanceof InputColor) {
        return "color";
    };
    if (v instanceof InputDate) {
        return "date";
    };
    if (v instanceof InputDatetime) {
        return "datetime";
    };
    if (v instanceof InputDatetimeLocal) {
        return "datetime-local";
    };
    if (v instanceof InputEmail) {
        return "email";
    };
    if (v instanceof InputFile) {
        return "file";
    };
    if (v instanceof InputHidden) {
        return "hidden";
    };
    if (v instanceof InputImage) {
        return "image";
    };
    if (v instanceof InputMonth) {
        return "month";
    };
    if (v instanceof InputNumber) {
        return "number";
    };
    if (v instanceof InputPassword) {
        return "password";
    };
    if (v instanceof InputRadio) {
        return "radio";
    };
    if (v instanceof InputRange) {
        return "range";
    };
    if (v instanceof InputReset) {
        return "reset";
    };
    if (v instanceof InputSearch) {
        return "search";
    };
    if (v instanceof InputSubmit) {
        return "submit";
    };
    if (v instanceof InputTel) {
        return "tel";
    };
    if (v instanceof InputText) {
        return "text";
    };
    if (v instanceof InputTime) {
        return "time";
    };
    if (v instanceof InputUrl) {
        return "url";
    };
    if (v instanceof InputWeek) {
        return "week";
    };
    throw new Error("Failed pattern match at Halogen.HTML.Properties line 243, column 19 - line 268, column 1: " + [ v.constructor.name ]);
};
var renderFormMethod = function (v) {
    if (v instanceof POST) {
        return "post";
    };
    if (v instanceof GET) {
        return "get";
    };
    throw new Error("Failed pattern match at Halogen.HTML.Properties line 201, column 20 - line 205, column 1: " + [ v.constructor.name ]);
};
var renderButtonType = function (v) {
    if (v instanceof ButtonButton) {
        return "button";
    };
    if (v instanceof ButtonSubmit) {
        return "submit";
    };
    if (v instanceof ButtonReset) {
        return "reset";
    };
    throw new Error("Failed pattern match at Halogen.HTML.Properties line 311, column 20 - line 316, column 1: " + [ v.constructor.name ]);
};
var ref = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Core.Ref.create);
var prop = function (dictIsProp) {
    return Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Core.prop(dictIsProp));
};
var readonly = prop(Halogen_HTML_Core.booleanIsProp)("readOnly")(Data_Maybe.Just.create("readonly"));
var rel = prop(Halogen_HTML_Core.stringIsProp)("rel")(Data_Maybe.Just.create("rel"));
var required = prop(Halogen_HTML_Core.booleanIsProp)("required")(Data_Maybe.Just.create("required"));
var rowSpan = prop(Halogen_HTML_Core.intIsProp)("rowSpan")(Data_Maybe.Just.create("rowspan"));
var rows = prop(Halogen_HTML_Core.intIsProp)("rows")(Data_Maybe.Just.create("rows"));
var selected = prop(Halogen_HTML_Core.booleanIsProp)("selected")(Data_Maybe.Just.create("selected"));
var spellcheck = prop(Halogen_HTML_Core.booleanIsProp)("spellcheck")(Data_Maybe.Just.create("spellcheck"));
var src = prop(Halogen_HTML_Core.stringIsProp)("src")(Data_Maybe.Just.create("src"));
var tabIndex = prop(Halogen_HTML_Core.intIsProp)("tabIndex")(Data_Maybe.Just.create("tabindex"));
var target = prop(Halogen_HTML_Core.stringIsProp)("target")(Data_Maybe.Just.create("target"));
var title = prop(Halogen_HTML_Core.stringIsProp)("title")(Data_Maybe.Just.create("title"));
var value = prop(Halogen_HTML_Core.stringIsProp)("value")(Data_Maybe.Just.create("value"));
var printLengthLiteral = function (v) {
    if (v instanceof Pixels) {
        return Data_Show.show(Data_Show.showInt)(v.value0);
    };
    if (v instanceof Percent) {
        return Data_Show.show(Data_Show.showNumber)(v.value0) + "%";
    };
    throw new Error("Failed pattern match at Halogen.HTML.Properties line 165, column 22 - line 169, column 1: " + [ v.constructor.name ]);
};
var width = function ($29) {
    return prop(Halogen_HTML_Core.stringIsProp)("width")(Data_Maybe.Just.create("width"))(printLengthLiteral($29));
};
var placeholder = prop(Halogen_HTML_Core.stringIsProp)("placeholder")(Data_Maybe.Just.create("placeholder"));
var novalidate = prop(Halogen_HTML_Core.booleanIsProp)("noValidate")(Data_Maybe.Just.create("novalidate"));
var newtypeIProp = new Data_Newtype.Newtype(function (n) {
    return n;
}, IProp);
var name = prop(Halogen_HTML_Core.stringIsProp)("name")(Data_Maybe.Just.create("name"));
var multiple = prop(Halogen_HTML_Core.booleanIsProp)("multiple")(Data_Maybe.Just.create("multiple"));
var method = function ($30) {
    return prop(Halogen_HTML_Core.stringIsProp)("method")(Data_Maybe.Just.create("method"))(renderFormMethod($30));
};
var key = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Core.Key.create);
var id_ = prop(Halogen_HTML_Core.stringIsProp)("id")(Data_Maybe.Just.create("id"));
var href = prop(Halogen_HTML_Core.stringIsProp)("href")(Data_Maybe.Just.create("href"));
var height = function ($31) {
    return prop(Halogen_HTML_Core.stringIsProp)("height")(Data_Maybe.Just.create("height"))(printLengthLiteral($31));
};
var $$for = prop(Halogen_HTML_Core.stringIsProp)("htmlFor")(Data_Maybe.Just.create("for"));
var enctype = function ($32) {
    return prop(Halogen_HTML_Core.stringIsProp)("enctype")(Data_Maybe.Just.create("enctype"))(Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)($32));
};
var draggable = prop(Halogen_HTML_Core.booleanIsProp)("draggable")(Data_Maybe.Just.create("draggable"));
var disabled = prop(Halogen_HTML_Core.booleanIsProp)("disabled")(Data_Maybe.Just.create("disabled"));
var enabled = function ($33) {
    return disabled(!$33);
};
var cols = prop(Halogen_HTML_Core.intIsProp)("cols")(Data_Maybe.Just.create("cols"));
var colSpan = prop(Halogen_HTML_Core.intIsProp)("colSpan")(Data_Maybe.Just.create("colspan"));
var classes = function ($34) {
    return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Maybe.Just.create("class"))(Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName))($34)));
};
var class_ = function ($35) {
    return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Maybe.Just.create("class"))(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($35));
};
var checked = prop(Halogen_HTML_Core.booleanIsProp)("checked")(Data_Maybe.Just.create("checked"));
var charset = prop(Halogen_HTML_Core.stringIsProp)("charset")(Data_Maybe.Just.create("charset"));
var autofocus = prop(Halogen_HTML_Core.booleanIsProp)("autofocus")(Data_Maybe.Just.create("autofocus"));
var autocomplete = function ($36) {
    return prop(Halogen_HTML_Core.stringIsProp)("autocomplete")(Data_Maybe.Just.create("autocomplete"))((function (b) {
        if (b) {
            return "on";
        };
        if (!b) {
            return "off";
        };
        throw new Error("Failed pattern match at Halogen.HTML.Properties line 370, column 91 - line 370, column 116: " + [ b.constructor.name ]);
    })($36));
};
var attr = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Core.attr);
var alt = prop(Halogen_HTML_Core.stringIsProp)("alt")(Data_Maybe.Just.create("alt"));
var action = prop(Halogen_HTML_Core.stringIsProp)("action")(Data_Maybe.Just.create("action"));
var _type = function (dictIsProp) {
    return prop(dictIsProp)("type")(Data_Maybe.Just.create("type"));
};
var buttonType = function ($37) {
    return _type(Halogen_HTML_Core.stringIsProp)(renderButtonType($37));
};
var inputType = function ($38) {
    return _type(Halogen_HTML_Core.stringIsProp)(renderInputType($38));
};
var mediaType = function ($39) {
    return _type(Halogen_HTML_Core.stringIsProp)(Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)($39));
};
var menuType = function ($40) {
    return _type(Halogen_HTML_Core.stringIsProp)(renderMenuType($40));
};
var menuitemType = function ($41) {
    return _type(Halogen_HTML_Core.stringIsProp)(renderMenuitemType($41));
};
var olType = function ($42) {
    return _type(Halogen_HTML_Core.stringIsProp)(renderOrderedListType($42));
};
module.exports = {
    ButtonButton: ButtonButton, 
    ButtonSubmit: ButtonSubmit, 
    ButtonReset: ButtonReset, 
    Uppercase: Uppercase, 
    Lowercase: Lowercase, 
    POST: POST, 
    GET: GET, 
    IProp: IProp, 
    InputButton: InputButton, 
    InputCheckbox: InputCheckbox, 
    InputColor: InputColor, 
    InputDate: InputDate, 
    InputDatetime: InputDatetime, 
    InputDatetimeLocal: InputDatetimeLocal, 
    InputEmail: InputEmail, 
    InputFile: InputFile, 
    InputHidden: InputHidden, 
    InputImage: InputImage, 
    InputMonth: InputMonth, 
    InputNumber: InputNumber, 
    InputPassword: InputPassword, 
    InputRadio: InputRadio, 
    InputRange: InputRange, 
    InputReset: InputReset, 
    InputSearch: InputSearch, 
    InputSubmit: InputSubmit, 
    InputTel: InputTel, 
    InputText: InputText, 
    InputTime: InputTime, 
    InputUrl: InputUrl, 
    InputWeek: InputWeek, 
    Pixels: Pixels, 
    Percent: Percent, 
    MenuList: MenuList, 
    MenuContext: MenuContext, 
    MenuToolbar: MenuToolbar, 
    MenuitemCommand: MenuitemCommand, 
    MenuitemCheckbox: MenuitemCheckbox, 
    MenuitemRadio: MenuitemRadio, 
    NumeralDecimal: NumeralDecimal, 
    NumeralRoman: NumeralRoman, 
    OrderedListNumeric: OrderedListNumeric, 
    OrderedListAlphabetic: OrderedListAlphabetic, 
    action: action, 
    alt: alt, 
    attr: attr, 
    autocomplete: autocomplete, 
    autofocus: autofocus, 
    buttonType: buttonType, 
    charset: charset, 
    checked: checked, 
    class_: class_, 
    classes: classes, 
    colSpan: colSpan, 
    cols: cols, 
    disabled: disabled, 
    draggable: draggable, 
    enabled: enabled, 
    enctype: enctype, 
    "for": $$for, 
    height: height, 
    href: href, 
    id_: id_, 
    inputType: inputType, 
    key: key, 
    mediaType: mediaType, 
    menuType: menuType, 
    menuitemType: menuitemType, 
    method: method, 
    multiple: multiple, 
    name: name, 
    novalidate: novalidate, 
    olType: olType, 
    placeholder: placeholder, 
    printLengthLiteral: printLengthLiteral, 
    prop: prop, 
    readonly: readonly, 
    ref: ref, 
    rel: rel, 
    required: required, 
    rowSpan: rowSpan, 
    rows: rows, 
    selected: selected, 
    spellcheck: spellcheck, 
    src: src, 
    tabIndex: tabIndex, 
    target: target, 
    title: title, 
    value: value, 
    width: width, 
    newtypeIProp: newtypeIProp
};

},{"../Control.Semigroupoid":104,"../DOM.HTML.Types":113,"../Data.Function":166,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.Maybe":192,"../Data.MediaType":193,"../Data.Newtype":202,"../Data.Semigroup":216,"../Data.Show":221,"../Data.String":225,"../Halogen.HTML.Core":244,"../Prelude":266,"../Unsafe.Coerce":269}],247:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Lazy = require("../Data.Lazy");
var Data_Maybe = require("../Data.Maybe");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Data_Functor = require("../Data.Functor");
var text = Halogen_HTML_Core.Text.create;
var slot$prime = function (dictFunctor) {
    return function (i) {
        return function (p) {
            return function (ctor) {
                return function (k) {
                    return new Halogen_HTML_Core.Slot(Halogen_Component.mkComponentSlot(Halogen_Component_ChildPath.injSlot(i)(p))(Data_Functor.map(Data_Lazy.functorLazy)(Halogen_Component.transformChild(Halogen_HTML_Core.bifunctorHTML)(dictFunctor)(i))(ctor))(k));
                };
            };
        };
    };
};
var slot = function (p) {
    return function (ctor) {
        return function (k) {
            return new Halogen_HTML_Core.Slot(Halogen_Component.mkComponentSlot(p)(ctor)(k));
        };
    };
};
module.exports = {
    slot: slot, 
    "slot'": slot$prime, 
    text: text
};

},{"../Data.Functor":173,"../Data.Lazy":185,"../Data.Maybe":192,"../Halogen.Component":240,"../Halogen.Component.ChildPath":239,"../Halogen.HTML.Core":244,"../Halogen.HTML.Elements":245,"../Halogen.HTML.Properties":246,"../Prelude":266}],248:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_Bifunctor = require("../Data.Bifunctor");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var ChildQuery = (function () {
    function ChildQuery(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChildQuery.create = function (value0) {
        return function (value1) {
            return new ChildQuery(value0, value1);
        };
    };
    return ChildQuery;
})();
var unChildQuery = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var hoistChildQuery = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var functorChildQuery = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return new ChildQuery(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(dictFunctor)(f))(v.value1));
        };
    });
};
var childQuery = function (dictApplicative) {
    return function (p) {
        return function (q) {
            return new ChildQuery(p, function (v) {
                return v(q);
            });
        };
    };
};
var bifunctorChildQuery = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return new ChildQuery(f(v.value0), Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(dictFunctor)(g))(v.value1));
            };
        };
    });
};
module.exports = {
    childQuery: childQuery, 
    hoistChildQuery: hoistChildQuery, 
    unChildQuery: unChildQuery, 
    bifunctorChildQuery: bifunctorChildQuery, 
    functorChildQuery: functorChildQuery
};

},{"../Data.Bifunctor":130,"../Data.Function":166,"../Data.Functor":173,"../Prelude":266,"../Unsafe.Coerce":269}],249:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Coroutine = require("../Control.Coroutine");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Listening = (function () {
    function Listening() {

    };
    Listening.value = new Listening();
    return Listening;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var EventSource = function (x) {
    return x;
};
var unEventSource = function (v) {
    return v;
};
var produceAff$prime = function (recv) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v1) {
            var producer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v1))(recv(Control_Monad_Aff_AVar.putVar(v)))))(function () {
                return Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.takeVar(v));
            });
            var cancel = function (r) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(Control_Monad_Aff_AVar.takeVar(v1)))(function (v2) {
                    if (v2 instanceof Data_Either.Left) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(false);
                    };
                    if (v2 instanceof Data_Either.Right) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.killVar(v1)(Control_Monad_Eff_Exception.error("finalized")))(function () {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(v2.value0)(function () {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(true);
                            });
                        });
                    };
                    throw new Error("Failed pattern match at Halogen.Query.EventSource line 179, column 7 - line 184, column 20: " + [ v2.constructor.name ]);
                });
            };
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                producer: producer, 
                cancel: cancel
            });
        });
    });
};
var produceAff = function (dictMonadAff) {
    return function (recv) {
        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Aff_AVar.makeVar)))(function (v) {
            return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Aff.forkAff(recv(Control_Monad_Aff_AVar.putVar(v))))))(function () {
                return Control_Coroutine.producer((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Aff_AVar.takeVar(v)));
            });
        });
    };
};
var produce$prime = function (recv) {
    return produceAff$prime(function (send) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(recv(function ($50) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(send($50)));
        })))(function (v) {
            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(v));
        });
    });
};
var produce = function (recv) {
    return produceAff(Control_Monad_Aff_Class.monadAffAff)(function (send) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(recv(function ($51) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(send($51)));
        }));
    });
};
var interpret = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            return EventSource(Data_Functor.map(dictFunctor)(function (e) {
                return {
                    producer: Control_Monad_Free_Trans.interpret(Control_Coroutine.functorEmit)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine.bifunctorEmit)(nat))(e.producer), 
                    done: e.done
                };
            })(v));
        };
    };
};
var hoist = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            return EventSource(Data_Functor.map(dictFunctor)(function (e) {
                return {
                    producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictFunctor)(nat)(e.producer), 
                    done: nat(e.done)
                };
            })(nat(v)));
        };
    };
};
var eventSource_$prime = function (dictMonadAff) {
    return function (attach) {
        return function (query) {
            return Control_Bind.bind(((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(produce$prime(function (emit) {
                return attach(emit(new Data_Either.Left(query)));
            })))(function (v) {
                return Control_Applicative.pure(((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())({
                    producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(v.producer), 
                    done: Control_Monad_Aff_Class.liftAff(dictMonadAff)(Data_Functor["void"](Control_Monad_Aff.functorAff)(v.cancel(Data_Unit.unit)))
                });
            });
        };
    };
};
var eventSource_ = function (dictMonadAff) {
    return function (attach) {
        return function (query) {
            var producer = produce(function (emit) {
                return attach(emit(new Data_Either.Left(query)));
            });
            return Control_Applicative.pure(((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())({
                producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(producer), 
                done: Control_Applicative.pure(((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit)
            });
        };
    };
};
var eqSubscribeStatus = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Listening && y instanceof Listening) {
            return true;
        };
        if (x instanceof Done && y instanceof Done) {
            return true;
        };
        return false;
    };
});
var ordSubscribeStatus = new Data_Ord.Ord(function () {
    return eqSubscribeStatus;
}, function (x) {
    return function (y) {
        if (x instanceof Listening && y instanceof Listening) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Listening) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Listening) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Done && y instanceof Done) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Halogen.Query.EventSource line 63, column 1 - line 63, column 58: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var catMaybes = function (dictMonadRec) {
    return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorEmit)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Control_Bind.composeKleisli(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(function ($52) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(dictMonadRec["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Free_Trans.resume(Control_Coroutine.functorEmit)(dictMonadRec)($52));
    })(function (v) {
        if (v instanceof Data_Either.Left) {
            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorEmit)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(new Control_Monad_Rec_Class.Done(v.value0));
        };
        if (v instanceof Data_Either.Right) {
            return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorEmit)((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Data_Foldable.for_(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorEmit)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Data_Foldable.foldableMaybe)(v.value0.value0)(Control_Coroutine.emit(dictMonadRec["__superclass_Control.Monad.Monad_0"]())))(new Control_Monad_Rec_Class.Loop(v.value0.value1));
        };
        throw new Error("Failed pattern match at Halogen.Query.EventSource line 137, column 3 - line 139, column 64: " + [ v.constructor.name ]);
    }));
};
var eventSource = function (dictMonadAff) {
    return function (attach) {
        return function (handler) {
            var producer = produce(function (emit) {
                return attach(function ($53) {
                    return emit(Data_Either.Left.create(handler($53)));
                });
            });
            return Control_Applicative.pure(((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())({
                producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(catMaybes(Control_Monad_Aff.monadRecAff)(producer)), 
                done: Control_Applicative.pure(((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit)
            });
        };
    };
};
var eventSource$prime = function (dictMonadAff) {
    return function (attach) {
        return function (handler) {
            return Control_Bind.bind(((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff)(produce$prime(function (emit) {
                return attach(function ($54) {
                    return emit(Data_Either.Left.create(handler($54)));
                });
            })))(function (v) {
                return Control_Applicative.pure(((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())({
                    producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(catMaybes(Control_Monad_Aff.monadRecAff)(v.producer)), 
                    done: Control_Monad_Aff_Class.liftAff(dictMonadAff)(Data_Functor["void"](Control_Monad_Aff.functorAff)(v.cancel(Data_Unit.unit)))
                });
            });
        };
    };
};
module.exports = {
    EventSource: EventSource, 
    Listening: Listening, 
    Done: Done, 
    catMaybes: catMaybes, 
    eventSource: eventSource, 
    "eventSource'": eventSource$prime, 
    eventSource_: eventSource_, 
    "eventSource_'": eventSource_$prime, 
    hoist: hoist, 
    interpret: interpret, 
    produce: produce, 
    "produce'": produce$prime, 
    produceAff: produceAff, 
    "produceAff'": produceAff$prime, 
    unEventSource: unEventSource, 
    eqSubscribeStatus: eqSubscribeStatus, 
    ordSubscribeStatus: ordSubscribeStatus
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Control.Coroutine":50,"../Control.Monad.Aff":61,"../Control.Monad.Aff.AVar":55,"../Control.Monad.Aff.Class":56,"../Control.Monad.Eff":76,"../Control.Monad.Eff.Class":64,"../Control.Monad.Eff.Exception":68,"../Control.Monad.Free.Trans":83,"../Control.Monad.Rec.Class":90,"../Control.Monad.Trans.Class":95,"../Control.Semigroupoid":104,"../Data.Bifunctor":130,"../Data.Either":144,"../Data.Eq":147,"../Data.Foldable":153,"../Data.Function":166,"../Data.Functor":173,"../Data.Maybe":192,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Unit":233,"../Prelude":266}],250:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Category = require("../Control.Category");
var ForkF = (function () {
    function ForkF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ForkF.create = function (value0) {
        return function (value1) {
            return new ForkF(value0, value1);
        };
    };
    return ForkF;
})();
var unFork = Unsafe_Coerce.unsafeCoerce;
var mkFork = Unsafe_Coerce.unsafeCoerce;
var hoistFork = function (nat) {
    return unFork(function (v) {
        return mkFork(new ForkF(nat(v.value0), v.value1));
    });
};
var functorFork = new Data_Functor.Functor(function (f) {
    return unFork(function (v) {
        return mkFork(new ForkF(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1)));
    });
});
var fork = function (fx) {
    return mkFork(new ForkF(fx, Control_Category.id(Control_Category.categoryFn)));
};
module.exports = {
    ForkF: ForkF, 
    fork: fork, 
    hoistFork: hoistFork, 
    mkFork: mkFork, 
    unFork: unFork, 
    functorFork: functorFork
};

},{"../Control.Category":48,"../Control.Monad.Aff":61,"../Control.Monad.Eff.Exception":68,"../Data.Function":166,"../Data.Functor":173,"../Prelude":266,"../Unsafe.Coerce":269}],251:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Applicative_Free = require("../Control.Applicative.Free");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Fork = require("../Control.Monad.Fork");
var Control_Monad_Free = require("../Control.Monad.Free");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_Parallel_Class = require("../Control.Parallel.Class");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_List = require("../Data.List");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple = require("../Data.Tuple");
var Halogen_Query_ChildQuery = require("../Halogen.Query.ChildQuery");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource");
var Halogen_Query_ForkF = require("../Halogen.Query.ForkF");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Function = require("../Data.Function");
var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class");
var Data_Unit = require("../Data.Unit");
var Control_Category = require("../Control.Category");
var HalogenAp = function (x) {
    return x;
};
var HalogenM = function (x) {
    return x;
};
var GetState = (function () {
    function GetState(value0) {
        this.value0 = value0;
    };
    GetState.create = function (value0) {
        return new GetState(value0);
    };
    return GetState;
})();
var ModifyState = (function () {
    function ModifyState(value0) {
        this.value0 = value0;
    };
    ModifyState.create = function (value0) {
        return new ModifyState(value0);
    };
    return ModifyState;
})();
var Subscribe = (function () {
    function Subscribe(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Subscribe.create = function (value0) {
        return function (value1) {
            return new Subscribe(value0, value1);
        };
    };
    return Subscribe;
})();
var Lift = (function () {
    function Lift(value0) {
        this.value0 = value0;
    };
    Lift.create = function (value0) {
        return new Lift(value0);
    };
    return Lift;
})();
var Halt = (function () {
    function Halt(value0) {
        this.value0 = value0;
    };
    Halt.create = function (value0) {
        return new Halt(value0);
    };
    return Halt;
})();
var GetSlots = (function () {
    function GetSlots(value0) {
        this.value0 = value0;
    };
    GetSlots.create = function (value0) {
        return new GetSlots(value0);
    };
    return GetSlots;
})();
var CheckSlot = (function () {
    function CheckSlot(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CheckSlot.create = function (value0) {
        return function (value1) {
            return new CheckSlot(value0, value1);
        };
    };
    return CheckSlot;
})();
var ChildQuery = (function () {
    function ChildQuery(value0) {
        this.value0 = value0;
    };
    ChildQuery.create = function (value0) {
        return new ChildQuery(value0);
    };
    return ChildQuery;
})();
var Raise = (function () {
    function Raise(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Raise.create = function (value0) {
        return function (value1) {
            return new Raise(value0, value1);
        };
    };
    return Raise;
})();
var Par = (function () {
    function Par(value0) {
        this.value0 = value0;
    };
    Par.create = function (value0) {
        return new Par(value0);
    };
    return Par;
})();
var Fork = (function () {
    function Fork(value0) {
        this.value0 = value0;
    };
    Fork.create = function (value0) {
        return new Fork(value0);
    };
    return Fork;
})();
var subscribe = function (es) {
    return HalogenM(Control_Monad_Free.liftF(new Subscribe(es, Data_Unit.unit)));
};
var raise = function (o) {
    return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
};
var newtypeHalogenAp = new Data_Newtype.Newtype(function (n) {
    return n;
}, HalogenAp);
var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return HalogenM(Control_Monad_Free.liftF(new Lift(m)));
    };
});
var mkQuery = function (dictApplicative) {
    return function (dictEq) {
        return function (p) {
            return function (q) {
                return HalogenM(Control_Monad_Free.liftF(new ChildQuery(Halogen_Query_ChildQuery.childQuery(dictApplicative)(p)(q))));
            };
        };
    };
};
var hoistM = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof GetState) {
                    return new GetState(v1.value0);
                };
                if (v1 instanceof ModifyState) {
                    return new ModifyState(v1.value0);
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(Halogen_Query_EventSource.hoist(dictFunctor)(nat)(v1.value0), v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(nat(v1.value0));
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(v1.value0);
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(v1.value0, v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(Halogen_Query_ChildQuery.hoistChildQuery(nat)(v1.value0));
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoistM(dictFunctor)(nat)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(hoistM(dictFunctor)(nat))(v1.value0));
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM line 166, column 8 - line 177, column 48: " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var hoistF = function (dictFunctor) {
    return function (nat) {
        return function (v) {
            var go = function (v1) {
                if (v1 instanceof GetState) {
                    return new GetState(v1.value0);
                };
                if (v1 instanceof ModifyState) {
                    return new ModifyState(v1.value0);
                };
                if (v1 instanceof Subscribe) {
                    return new Subscribe(Halogen_Query_EventSource.interpret(dictFunctor)(nat)(v1.value0), v1.value1);
                };
                if (v1 instanceof Lift) {
                    return new Lift(v1.value0);
                };
                if (v1 instanceof Halt) {
                    return new Halt(v1.value0);
                };
                if (v1 instanceof GetSlots) {
                    return new GetSlots(v1.value0);
                };
                if (v1 instanceof CheckSlot) {
                    return new CheckSlot(v1.value0, v1.value1);
                };
                if (v1 instanceof ChildQuery) {
                    return new ChildQuery(v1.value0);
                };
                if (v1 instanceof Raise) {
                    return new Raise(v1.value0, v1.value1);
                };
                if (v1 instanceof Par) {
                    return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoistF(dictFunctor)(nat)))(v1.value0));
                };
                if (v1 instanceof Fork) {
                    return new Fork(Halogen_Query_ForkF.hoistFork(hoistF(dictFunctor)(nat))(v1.value0));
                };
                throw new Error("Failed pattern match at Halogen.Query.HalogenM line 144, column 8 - line 155, column 49: " + [ v1.constructor.name ]);
            };
            return Control_Monad_Free.hoistFree(go)(v);
        };
    };
};
var halt = function (msg) {
    return HalogenM(Control_Monad_Free.liftF(new Halt(msg)));
};
var getSlots = HalogenM(Control_Monad_Free.liftF(new GetSlots(Control_Category.id(Control_Category.categoryFn))));
var functorHalogenM = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v);
    };
});
var functorHalogenAp = Control_Applicative_Free.functorFreeAp;
var functorHalogenF = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            if (v instanceof GetState) {
                return new GetState(function ($83) {
                    return f(v.value0($83));
                });
            };
            if (v instanceof ModifyState) {
                return new ModifyState(function ($84) {
                    return Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(f)(v.value0($84));
                });
            };
            if (v instanceof Subscribe) {
                return new Subscribe(v.value0, f(v.value1));
            };
            if (v instanceof Lift) {
                return new Lift(Data_Functor.map(dictFunctor)(f)(v.value0));
            };
            if (v instanceof Halt) {
                return new Halt(v.value0);
            };
            if (v instanceof CheckSlot) {
                return new CheckSlot(v.value0, Data_Functor.map(Data_Functor.functorFn)(f)(v.value1));
            };
            if (v instanceof GetSlots) {
                return new GetSlots(Data_Functor.map(Data_Functor.functorFn)(f)(v.value0));
            };
            if (v instanceof ChildQuery) {
                return new ChildQuery(Data_Functor.map(Halogen_Query_ChildQuery.functorChildQuery(dictFunctor))(f)(v.value0));
            };
            if (v instanceof Raise) {
                return new Raise(v.value0, f(v.value1));
            };
            if (v instanceof Par) {
                return new Par(Data_Functor.map(functorHalogenAp)(f)(v.value0));
            };
            if (v instanceof Fork) {
                return new Fork(Data_Functor.map(Halogen_Query_ForkF.functorFork)(f)(v.value0));
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM line 42, column 11 - line 53, column 31: " + [ v.constructor.name ]);
        };
    });
};
var checkSlot = function (p) {
    return HalogenM(Control_Monad_Free.liftF(new CheckSlot(p, Control_Category.id(Control_Category.categoryFn))));
};
var applyHalogenM = new Control_Apply.Apply(function () {
    return functorHalogenM;
}, function (v) {
    return function (v1) {
        return Control_Apply.apply(Control_Monad_Free.freeApply)(v)(v1);
    };
});
var bindHalogenM = new Control_Bind.Bind(function () {
    return applyHalogenM;
}, function (v) {
    return function (f) {
        return Control_Bind.bind(Control_Monad_Free.freeBind)(v)(function (x) {
            var $79 = f(x);
            return $79;
        });
    };
});
var applyHalogenAp = Control_Applicative_Free.applyFreeAp;
var applicativeHalogenM = new Control_Applicative.Applicative(function () {
    return applyHalogenM;
}, function (a) {
    return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a);
});
var monadHalogenM = new Control_Monad.Monad(function () {
    return applicativeHalogenM;
}, function () {
    return bindHalogenM;
});
var monadAskHalogenM = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadHalogenM;
    }, HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Reader_Class.ask(dictMonadAsk)))));
};
var monadEffHalogenM = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadHalogenM;
    }, function (eff) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Eff_Class.liftEff(dictMonadEff)(eff))));
    });
};
var monadAffHalogenM = function (dictMonadAff) {
    return new Control_Monad_Aff_Class.MonadAff(function () {
        return monadEffHalogenM(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
    }, function (aff) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Aff_Class.liftAff(dictMonadAff)(aff))));
    });
};
var monadForkHalogenM = function (dictMonadAff) {
    return new Control_Monad_Fork_Class.MonadFork(function () {
        return monadHalogenM;
    }, function (a) {
        return Data_Functor.map(functorHalogenM)(Data_Functor.map(Data_Functor.functorFn)(Control_Monad_Aff_Class.liftAff(monadAffHalogenM(dictMonadAff))))(Control_Monad_Free.liftF(Fork.create(Halogen_Query_ForkF.fork(a))));
    });
};
var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
    return monadHalogenM;
}, function ($85) {
    return HalogenM(Control_Monad_Free.liftF(ModifyState.create($85)));
});
var monadTellHalogenM = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadHalogenM;
    }, function ($86) {
        return HalogenM(Control_Monad_Free.liftF(Lift.create(Control_Monad_Writer_Class.tell(dictMonadTell)($86))));
    });
};
var monadRecHalogenM = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadHalogenM;
}, function (k) {
    return function (a) {
        var go = function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
                return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);
            };
            if (v instanceof Control_Monad_Rec_Class.Done) {
                return Control_Applicative.pure(applicativeHalogenM)(v.value0);
            };
            throw new Error("Failed pattern match at Halogen.Query.HalogenM line 97, column 5 - line 97, column 31: " + [ v.constructor.name ]);
        };
        return Control_Bind.bind(bindHalogenM)(k(a))(go);
    };
});
var applicativeHalogenAp = Control_Applicative_Free.applicativeFreeAp;
var parallelHalogenM = new Control_Parallel_Class.Parallel(function () {
    return applicativeHalogenAp;
}, function () {
    return monadHalogenM;
}, function ($87) {
    return HalogenAp(Control_Applicative_Free.liftFreeAp($87));
}, function ($88) {
    return HalogenM(Control_Monad_Free.liftF(Par.create($88)));
});
module.exports = {
    HalogenAp: HalogenAp, 
    GetState: GetState, 
    ModifyState: ModifyState, 
    Subscribe: Subscribe, 
    Lift: Lift, 
    Halt: Halt, 
    GetSlots: GetSlots, 
    CheckSlot: CheckSlot, 
    ChildQuery: ChildQuery, 
    Raise: Raise, 
    Par: Par, 
    Fork: Fork, 
    HalogenM: HalogenM, 
    checkSlot: checkSlot, 
    getSlots: getSlots, 
    halt: halt, 
    hoistF: hoistF, 
    hoistM: hoistM, 
    mkQuery: mkQuery, 
    raise: raise, 
    subscribe: subscribe, 
    functorHalogenF: functorHalogenF, 
    newtypeHalogenAp: newtypeHalogenAp, 
    functorHalogenAp: functorHalogenAp, 
    applyHalogenAp: applyHalogenAp, 
    applicativeHalogenAp: applicativeHalogenAp, 
    functorHalogenM: functorHalogenM, 
    applyHalogenM: applyHalogenM, 
    applicativeHalogenM: applicativeHalogenM, 
    bindHalogenM: bindHalogenM, 
    monadHalogenM: monadHalogenM, 
    monadEffHalogenM: monadEffHalogenM, 
    monadAffHalogenM: monadAffHalogenM, 
    parallelHalogenM: parallelHalogenM, 
    monadForkHalogenM: monadForkHalogenM, 
    monadTransHalogenM: monadTransHalogenM, 
    monadRecHalogenM: monadRecHalogenM, 
    monadStateHalogenM: monadStateHalogenM, 
    monadAskHalogenM: monadAskHalogenM, 
    monadTellHalogenM: monadTellHalogenM
};

},{"../Control.Applicative":41,"../Control.Applicative.Free":40,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad":98,"../Control.Monad.Aff.Class":56,"../Control.Monad.Eff.Class":64,"../Control.Monad.Eff.Exception":68,"../Control.Monad.Fork":82,"../Control.Monad.Fork.Class":81,"../Control.Monad.Free":84,"../Control.Monad.Reader.Class":88,"../Control.Monad.Rec.Class":90,"../Control.Monad.State.Class":93,"../Control.Monad.Trans.Class":95,"../Control.Monad.Writer.Class":96,"../Control.Parallel.Class":101,"../Control.Semigroupoid":104,"../Data.Bifunctor":130,"../Data.Function":166,"../Data.Functor":173,"../Data.List":188,"../Data.Newtype":202,"../Data.Tuple":229,"../Data.Unit":233,"../Halogen.Query.ChildQuery":248,"../Halogen.Query.EventSource":249,"../Halogen.Query.ForkF":250,"../Prelude":266}],252:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Data_List = require("../Data.List");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var Halogen_Component_ChildPath = require("../Halogen.Component.ChildPath");
var Halogen_Query_EventSource = require("../Halogen.Query.EventSource");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Control_Parallel = require("../Control.Parallel");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Category = require("../Control.Category");
var Control_Bind = require("../Control.Bind");
var Data_Functor = require("../Data.Functor");
var Data_List_Types = require("../Data.List.Types");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var request = function (req) {
    return req(Control_Category.id(Control_Category.categoryFn));
};
var queryAll$prime = function (dictApplicative) {
    return function (dictOrd) {
        return function (dictEq) {
            return function (path) {
                return function (q) {
                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_List.mapMaybe(Halogen_Component_ChildPath.prjSlot(path)))(Halogen_Query_HalogenM.getSlots))(function (v) {
                        return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Map.fromFoldable(dictOrd)(Data_List_Types.foldableList))(Control_Parallel.parTraverse(Halogen_Query_HalogenM.parallelHalogenM)(Data_List_Types.traversableList)(function (p) {
                            return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Tuple.Tuple.create(p))(Halogen_Query_HalogenM.mkQuery(dictApplicative)(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q)));
                        })(v));
                    });
                };
            };
        };
    };
};
var queryAll = function (dictApplicative) {
    return function (dictOrd) {
        return queryAll$prime(dictApplicative)(dictOrd)(dictOrd["__superclass_Data.Eq.Eq_0"]())(Halogen_Component_ChildPath.cpI);
    };
};
var query = function (dictApplicative) {
    return function (dictEq) {
        return function (p) {
            return function (q) {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.checkSlot(p))(function (v) {
                    if (v) {
                        return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.Just.create)(Halogen_Query_HalogenM.mkQuery(dictApplicative)(dictEq)(p)(q));
                    };
                    if (!v) {
                        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
                    };
                    throw new Error("Failed pattern match at Halogen.Query line 97, column 13 - line 97, column 77: " + [ v.constructor.name ]);
                });
            };
        };
    };
};
var query$prime = function (dictApplicative) {
    return function (dictEq) {
        return function (path) {
            return function (p) {
                return function (q) {
                    return query(dictApplicative)(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q));
                };
            };
        };
    };
};
var action = function (act) {
    return act(Data_Unit.unit);
};
module.exports = {
    action: action, 
    query: query, 
    "query'": query$prime, 
    queryAll: queryAll, 
    "queryAll'": queryAll$prime, 
    request: request
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad.Aff.Class":56,"../Control.Monad.Eff.Class":64,"../Control.Monad.State.Class":93,"../Control.Monad.Trans.Class":95,"../Control.Parallel":102,"../Data.Functor":173,"../Data.List":188,"../Data.List.Types":187,"../Data.Map":189,"../Data.Maybe":192,"../Data.Tuple":229,"../Data.Unit":233,"../Halogen.Component.ChildPath":239,"../Halogen.Query.EventSource":249,"../Halogen.Query.HalogenM":251,"../Prelude":266}],253:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Data_Maybe = require("../Data.Maybe");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_Node_Node = require("../DOM.Node.Node");
var Halogen_Aff_Driver = require("../Halogen.Aff.Driver");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Effects = require("../Halogen.Effects");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_VirtualDOM_Internal = require("../Halogen.VirtualDOM.Internal");
var Halogen_VirtualDOM_Renderer = require("../Halogen.VirtualDOM.Renderer");
var Control_Bind = require("../Control.Bind");
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var renderSpec = function (element) {
    var renderChild = function (keyId) {
        return function (lastRender) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                var v = (function () {
                    if (lastRender instanceof Data_Maybe.Nothing) {
                        return Halogen_VirtualDOM_Internal.createElement(Halogen_VirtualDOM_Internal.vtext(""));
                    };
                    if (lastRender instanceof Data_Maybe.Just) {
                        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(lastRender.value0.node);
                    };
                    throw new Error("Failed pattern match at Halogen.VirtualDOM.Driver line 76, column 15 - line 78, column 30: " + [ lastRender.constructor.name ]);
                })()();
                return {
                    vtree: Halogen_VirtualDOM_Internal.widget(keyId)(v), 
                    node: v
                };
            });
        };
    };
    var render = function (handler) {
        return function (child) {
            return function (html) {
                return function (componentType) {
                    return function (lastRender) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_VirtualDOM_Renderer.renderHTML(Control_Monad_Aff.monadAff)(handler)(function ($13) {
                            return Data_Functor.map(Control_Monad_Aff.functorAff)(function (v) {
                                return v.vtree;
                            })(child($13));
                        })(html))(function (v) {
                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)((function () {
                                if (lastRender instanceof Data_Maybe.Nothing) {
                                    return function __do() {
                                        var v1 = Halogen_VirtualDOM_Internal.createElement(v)();
                                        DOM_Node_Node.appendChild(DOM_HTML_Types.htmlElementToNode(v1))(DOM_HTML_Types.htmlElementToNode(element))();
                                        return v1;
                                    };
                                };
                                if (lastRender instanceof Data_Maybe.Just) {
                                    return Halogen_VirtualDOM_Internal.patch(Halogen_VirtualDOM_Internal.diff(lastRender.value0.vtree)(v))(lastRender.value0.node);
                                };
                                throw new Error("Failed pattern match at Halogen.VirtualDOM.Driver line 61, column 13 - line 67, column 46: " + [ lastRender.constructor.name ]);
                            })()))(function (v1) {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                                    vtree: v, 
                                    node: v1
                                });
                            });
                        });
                    };
                };
            };
        };
    };
    return {
        render: render, 
        renderChild: renderChild
    };
};
var runUI = function (component) {
    return function (element) {
        return Halogen_Aff_Driver.runUI(renderSpec(element))(component);
    };
};
module.exports = {
    runUI: runUI
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Control.Monad.Aff":61,"../Control.Monad.Eff":76,"../Control.Monad.Eff.Class":64,"../Control.Semigroupoid":104,"../DOM.HTML.Types":113,"../DOM.Node.Node":119,"../Data.Functor":173,"../Data.Maybe":192,"../Halogen.Aff.Driver":236,"../Halogen.Component":240,"../Halogen.Effects":243,"../Halogen.HTML.Core":244,"../Halogen.VirtualDOM.Internal":255,"../Halogen.VirtualDOM.Renderer":256,"../Prelude":266}],254:[function(require,module,exports){
/* global exports, require */
"use strict";

var vcreateElement = require("virtual-dom/create-element");
var vdiff = require("virtual-dom/diff");
var vpatch = require("virtual-dom/patch");
var VText = require("virtual-dom/vnode/vtext");
var VirtualNode = require("virtual-dom/vnode/vnode");
var SoftSetHook = require("virtual-dom/virtual-hyperscript/hooks/soft-set-hook");

// jshint maxparams: 2
exports.prop = function (key, value) {
  var props = {};
  props[key] = value;
  return props;
};

// jshint maxparams: 2
exports.attr = function (key, value) {
  var props = { attributes: {} };
  props.attributes[key] = value;
  return props;
};

function HandlerHook(key, f) {
  this.key = key;
  this.callback = function (e) {
    f(e)();
  };
}

HandlerHook.prototype = {
  hook: function (node) {
    node.addEventListener(this.key, this.callback);
  },
  unhook: function (node) {
    node.removeEventListener(this.key, this.callback);
  }
};

// jshint maxparams: 2
exports.handlerProp = function (key, f) {
  var props = {};
  props["halogen-hook-" + key] = new HandlerHook(key, f);
  return props;
};

exports.refPropImpl = function (nothing) {
  return function (just) {

    var ifHookFn = function (init) {
      // jshint maxparams: 3
      return function (node, prop, diff) {
        // jshint validthis: true
        if (typeof diff === "undefined") {
          this.f(init ? just(node) : nothing)();
        }
      };
    };

    // jshint maxparams: 1
    function RefHook(f) {
      this.f = f;
    }

    RefHook.prototype = {
      hook: ifHookFn(true),
      unhook: ifHookFn(false)
    };

    return function (f) {
      return { "halogen-ref": new RefHook(f) };
    };
  };
};

// jshint maxparams: 2
exports.concatProps = function () {
  var hOP = Object.prototype.hasOwnProperty;
  var copy = function (props, result) {
    for (var key in props) {
      if (hOP.call(props, key)) {
        if (key === "attributes") {
          var attrs = props[key];
          var resultAttrs = result[key] || (result[key] = {});
          for (var attr in attrs) {
            if (hOP.call(attrs, attr)) {
              resultAttrs[attr] = attrs[attr];
            }
          }
        } else {
          result[key] = props[key];
        }
      }
    }
    return result;
  };
  return function (p1, p2) {
    return copy(p2, copy(p1, {}));
  };
}();
// jshint maxparams: 1

exports.emptyProps = {};

exports.createElement = function (vtree) {
  return function () {
    return vcreateElement(vtree);
  };
};

exports.diff = function (vtree1) {
  return function (vtree2) {
    return vdiff(vtree1, vtree2);
  };
};

exports.patch = function (p) {
  return function (node) {
    return function () {
      return vpatch(node, p);
    };
  };
};

exports.vtext = function (s) {
  return new VText(s);
};

exports.vnode = function (namespace) {
  return function (name) {
    return function (key) {
      return function (props) {
        return function (children) {
          if (name === "input" && props.value !== undefined) {
            props.value = new SoftSetHook(props.value);
          }
          return new VirtualNode(name, props, children, key, namespace);
        };
      };
    };
  };
};

// jshint maxparams: 2
function HalogenWidget(key, el) {
  this.key = key;
  this.el = el;
}
// jshint maxparams: 1

HalogenWidget.prototype = {
  type: "Widget",
  init: function () {
    return this.el;
  },
  update: function () {
    return this.el;
  }
};

exports.widget = function (key) {
  return function (el) {
    return new HalogenWidget(key, el);
  };
};

},{"virtual-dom/create-element":10,"virtual-dom/diff":11,"virtual-dom/patch":12,"virtual-dom/virtual-hyperscript/hooks/soft-set-hook":19,"virtual-dom/vnode/vnode":27,"virtual-dom/vnode/vtext":29}],255:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Monoid = require("../Data.Monoid");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var DOM = require("../DOM");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var Data_Semigroup = require("../Data.Semigroup");
var semigroupProps = new Data_Semigroup.Semigroup(Data_Function_Uncurried.runFn2($foreign.concatProps));
var refProp = $foreign.refPropImpl(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var monoidProps = new Data_Monoid.Monoid(function () {
    return semigroupProps;
}, $foreign.emptyProps);
module.exports = {
    refProp: refProp, 
    semigroupProps: semigroupProps, 
    monoidProps: monoidProps, 
    attr: $foreign.attr, 
    createElement: $foreign.createElement, 
    diff: $foreign.diff, 
    handlerProp: $foreign.handlerProp, 
    patch: $foreign.patch, 
    prop: $foreign.prop, 
    vnode: $foreign.vnode, 
    vtext: $foreign.vtext, 
    widget: $foreign.widget
};

},{"../Control.Monad.Eff":76,"../DOM":124,"../DOM.HTML.Types":113,"../Data.Function.Uncurried":165,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Nullable":205,"../Data.Semigroup":216,"../Prelude":266,"./foreign":254}],256:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Exists = require("../Data.Exists");
var Data_Foldable = require("../Data.Foldable");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Nullable = require("../Data.Nullable");
var Data_Traversable = require("../Data.Traversable");
var Halogen_Effects = require("../Halogen.Effects");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_VirtualDOM_Internal = require("../Halogen.VirtualDOM.Internal");
var Data_Semigroup = require("../Data.Semigroup");
var DOM_Event_Types = require("../DOM.Event.Types");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var Data_Function = require("../Data.Function");
var Control_Bind = require("../Control.Bind");
var Data_Functor = require("../Data.Functor");
var renderPropF = function (v) {
    return Halogen_VirtualDOM_Internal.prop(Data_Newtype.unwrap(Halogen_HTML_Core.newtypePropName)(v.value0), v.value1);
};
var renderProp = function (driver) {
    return function (v) {
        if (v instanceof Halogen_HTML_Core.Prop) {
            return Data_Exists.runExists(renderPropF)(v.value0);
        };
        if (v instanceof Halogen_HTML_Core.Attr) {
            var attrName = Data_Maybe.maybe("")(function (ns$prime) {
                return Data_Newtype.unwrap(Halogen_HTML_Core.newtypeNamespace)(ns$prime) + ":";
            })(v.value0) + Data_Newtype.unwrap(Halogen_HTML_Core.newtypeAttrName)(v.value1);
            return Halogen_VirtualDOM_Internal.attr(attrName, v.value2);
        };
        if (v instanceof Halogen_HTML_Core.Handler) {
            return Halogen_VirtualDOM_Internal.handlerProp(Data_Newtype.unwrap(DOM_Event_Types.newtypeEventType)(v.value0), function ($31) {
                return Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))(driver)(v.value1($31));
            });
        };
        if (v instanceof Halogen_HTML_Core.Ref) {
            return Halogen_VirtualDOM_Internal.refProp(function ($32) {
                return driver(v.value0($32));
            });
        };
        return Data_Monoid.mempty(Halogen_VirtualDOM_Internal.monoidProps);
    };
};
var findKey = function (v) {
    return function (v1) {
        if (v1 instanceof Halogen_HTML_Core.Key) {
            return new Data_Maybe.Just(v1.value0);
        };
        return v;
    };
};
var renderHTML = function (dictMonad) {
    return function (driver) {
        return function (handleSlot) {
            var go = function (__copy_v) {
                var v = __copy_v;
                tco: while (true) {
                    if (v instanceof Halogen_HTML_Core.Text) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Halogen_VirtualDOM_Internal.vtext(v.value0));
                    };
                    if (v instanceof Halogen_HTML_Core.Element) {
                        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(go)(v.value3))(function (v1) {
                            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Halogen_VirtualDOM_Internal.vnode(Data_Nullable.toNullable(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeNamespace))(v.value0)))(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeTagName)(v.value1))(Data_Nullable.toNullable(Data_Foldable.foldl(Data_Foldable.foldableArray)(findKey)(Data_Maybe.Nothing.value)(v.value2)))(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Halogen_VirtualDOM_Internal.monoidProps)(renderProp(driver))(v.value2))(v1));
                        });
                    };
                    if (v instanceof Halogen_HTML_Core.Slot) {
                        return handleSlot(v.value0);
                    };
                    if (v instanceof Halogen_HTML_Core.Fuse) {
                        var __tco_v = Halogen_HTML_Core.lowerFuse(v.value0);
                        v = __tco_v;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Halogen.VirtualDOM.Renderer line 32, column 8 - line 45, column 24: " + [ v.constructor.name ]);
                };
            };
            return go;
        };
    };
};
module.exports = {
    renderHTML: renderHTML
};

},{"../Control.Applicative":41,"../Control.Bind":47,"../Control.Monad.Eff":76,"../Control.Semigroupoid":104,"../DOM.Event.Types":110,"../Data.Exists":150,"../Data.Foldable":153,"../Data.Function":166,"../Data.Function.Uncurried":165,"../Data.Functor":173,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Newtype":202,"../Data.Nullable":205,"../Data.Semigroup":216,"../Data.Traversable":227,"../Data.Unit":233,"../Halogen.Effects":243,"../Halogen.HTML.Core":244,"../Halogen.VirtualDOM.Internal":255,"../Prelude":266}],257:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Prelude = require("../Prelude");
var Control_Coroutine = require("../Control.Coroutine");
var Data_Lazy = require("../Data.Lazy");
var Halogen_Component = require("../Halogen.Component");
var Halogen_Effects = require("../Halogen.Effects");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_Query = require("../Halogen.Query");
module.exports = {};

},{"../Control.Coroutine":50,"../Data.Lazy":185,"../Halogen.Component":240,"../Halogen.Effects":243,"../Halogen.HTML.Core":244,"../Halogen.Query":252,"../Prelude":266}],258:[function(require,module,exports){
exports.onKeyboardDown = function (eff) {
  window.onkeydown = function (e) {
    eff(e.keyCode)();
  };
};

},{}],259:[function(require,module,exports){
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Halogen = require("../Halogen");
var Halogen_HTML = require("../Halogen.HTML");
var Control_Cycle = require("../Control.Cycle");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_XStream = require("../Control.XStream");
var DOM = require("../DOM");
var Data_Array = require("../Data.Array");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Set = require("../Data.Set");
var Data_Tuple_Nested = require("../Data.Tuple.Nested");
var Halogen_Aff = require("../Halogen.Aff");
var Halogen_Aff_Util = require("../Halogen.Aff.Util");
var Halogen_VirtualDOM_Driver = require("../Halogen.VirtualDOM.Driver");
var Control_Apply = require("../Control.Apply");
var Data_Unit = require("../Data.Unit");
var Data_Show = require("../Data.Show");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Halogen_Query = require("../Halogen.Query");
var Control_Bind = require("../Control.Bind");
var Data_Semiring = require("../Data.Semiring");
var Data_Ring = require("../Data.Ring");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties");
var Halogen_HTML_Core = require("../Halogen.HTML.Core");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements");
var Data_Semigroup = require("../Data.Semigroup");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Halogen_Component = require("../Halogen.Component");
var Left = (function () {
    function Left() {

    };
    Left.value = new Left();
    return Left;
})();
var Right = (function () {
    function Right() {

    };
    Right.value = new Right();
    return Right;
})();
var Up = (function () {
    function Up() {

    };
    Up.value = new Up();
    return Up;
})();
var Down = (function () {
    function Down() {

    };
    Down.value = new Down();
    return Down;
})();
var MoveCursor = (function () {
    function MoveCursor(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MoveCursor.create = function (value0) {
        return function (value1) {
            return new MoveCursor(value0, value1);
        };
    };
    return MoveCursor;
})();
var ClearBoard = (function () {
    function ClearBoard(value0) {
        this.value0 = value0;
    };
    ClearBoard.create = function (value0) {
        return new ClearBoard(value0);
    };
    return ClearBoard;
})();
var Coords = (function () {
    function Coords(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Coords.create = function (value0) {
        return function (value1) {
            return new Coords(value0, value1);
        };
    };
    return Coords;
})();
var yolo = Data_Functor.map(Data_Functor.functorFn)(Data_Functor["void"](Control_Monad_Eff.functorEff))(Control_Monad_Aff.runAff(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))));
var sendDirections = function (app) {
    return function (x) {
        return yolo(app.query(Halogen_Query.action(MoveCursor.create(x))));
    };
};
var kb = function (v) {
    var keyCodeToQuery = function (v1) {
        if (v1 === 38) {
            return Control_Applicative.pure(Control_XStream.applicativeStream)(Up.value);
        };
        if (v1 === 40) {
            return Control_Applicative.pure(Control_XStream.applicativeStream)(Down.value);
        };
        if (v1 === 37) {
            return Control_Applicative.pure(Control_XStream.applicativeStream)(Left.value);
        };
        if (v1 === 39) {
            return Control_Applicative.pure(Control_XStream.applicativeStream)(Right.value);
        };
        return Data_Monoid.mempty(Control_XStream.monoidStream);
    };
    return function __do() {
        var v1 = Control_XStream.fromCallback($foreign.onKeyboardDown)();
        return Control_Bind.bindFlipped(Control_XStream.bindStream)(keyCodeToQuery)(v1);
    };
};
var isInvalidPoint = function (state) {
    return function (v) {
        return v.value0 < 0 || ((state.increment * v.value0 | 0) > state.width - state.increment || (v.value1 < 0 || (state.increment * v.value1 | 0) > state.height - state.increment));
    };
};
var genericCoords = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Main.Coords" && v.value1.length === 2)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Coords.create))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[1](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Main.Coords", [ {
        sigConstructor: "Main.Coords", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Main.Coords", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericInt)(v.value1);
    } ]);
});
var showCoords = new Data_Show.Show(Data_Generic.gShow(genericCoords));
var eqCoords = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x.value0 === y.value0 && x.value1 === y.value1;
    };
});
var ordCoords = new Data_Ord.Ord(function () {
    return eqCoords;
}, function (x) {
    return function (y) {
        var $50 = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
        if ($50 instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if ($50 instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Ord.ordInt)(x.value1)(y.value1);
    };
});
var initialState = {
    cursor: new Coords(0, 0), 
    points: Data_Monoid.mempty(Data_Set.monoidSet(ordCoords)), 
    width: 800, 
    height: 600, 
    increment: 10
};
var ui = (function () {
    var style = Halogen_HTML_Properties.prop(Halogen_HTML_Core.stringIsProp)("style")(Data_Maybe.Just.create("style"));
    var point = function (inc) {
        return function (color) {
            return function (v) {
                var x$prime = Data_Show.show(Data_Show.showInt)(inc * v.value0 | 0);
                var y$prime = Data_Show.show(Data_Show.showInt)(inc * v.value1 | 0);
                var inc$prime = Data_Show.show(Data_Show.showInt)(inc);
                return Halogen_HTML_Elements.div([ style("position: absolute; left: " + (x$prime + ("px; top: " + (y$prime + ("px; width: " + (inc$prime + ("px; height: " + (inc$prime + ("px; background-color: " + (color + ";")))))))))) ])([  ]);
            };
        };
    };
    var render = function (s) {
        var point$prime = point(s.increment);
        return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML.text("Hello!!!") ]), Halogen_HTML_Elements.div([ style("position: relative; width: " + (Data_Show.show(Data_Show.showInt)(s.width) + ("px; height: " + (Data_Show.show(Data_Show.showInt)(s.height) + "px; border: 1px solid black;")))) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(point$prime("black"))(Data_Array.fromFoldable(Data_Set.foldableSet)(s.points)))([ point$prime("grey")(s.cursor) ])) ]);
    };
    var $$eval = function (v) {
        if (v instanceof MoveCursor) {
            var shiftCursor = function (v1) {
                if (v.value0 instanceof Up) {
                    return new Coords(v1.value0, v1.value1 - 1);
                };
                if (v.value0 instanceof Down) {
                    return new Coords(v1.value0, v1.value1 + 1 | 0);
                };
                if (v.value0 instanceof Left) {
                    return new Coords(v1.value0 - 1, v1.value1);
                };
                if (v.value0 instanceof Right) {
                    return new Coords(v1.value0 + 1 | 0, v1.value1);
                };
                throw new Error("Failed pattern match at Main line 112, column 36 - line 116, column 36: " + [ v.value0.constructor.name ]);
            };
            var moveCursor = function (s) {
                var cursor$prime = shiftCursor(s.cursor);
                var $65 = isInvalidPoint(s)(cursor$prime);
                if ($65) {
                    return s;
                };
                if (!$65) {
                    var $66 = {};
                    for (var $67 in s) {
                        if (s.hasOwnProperty($67)) {
                            $66[$67] = s[$67];
                        };
                    };
                    $66.cursor = cursor$prime;
                    $66.points = Data_Set.insert(ordCoords)(s.cursor)(s.points);
                    return $66;
                };
                throw new Error("Failed pattern match at Main line 120, column 11 - line 126, column 16: " + [ $65.constructor.name ]);
            };
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(moveCursor))(function () {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
            });
        };
        if (v instanceof ClearBoard) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
                var $71 = {};
                for (var $72 in s) {
                    if (s.hasOwnProperty($72)) {
                        $71[$72] = s[$72];
                    };
                };
                $71.points = Data_Monoid.mempty(Data_Set.monoidSet(ordCoords));
                return $71;
            }))(function () {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
            });
        };
        throw new Error("Failed pattern match at Main line 108, column 5 - line 126, column 16: " + [ v.constructor.name ]);
    };
    return Halogen_Component.component({
        render: render, 
        "eval": $$eval, 
        initialState: initialState
    });
})();
var dom = function (app) {
    return function (s) {
        return function __do() {
            Control_XStream.addListener({
                next: sendDirections(app), 
                error: Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)), 
                complete: Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))
            })(s)();
            return Data_Monoid.mempty(Control_XStream.monoidStream);
        };
    };
};
var main = (function () {
    var main$prime = function (v) {
        return function (kb$prime) {
            return Data_Tuple_Nested.tuple2(kb$prime)(Data_Monoid.mempty(Control_XStream.monoidStream));
        };
    };
    return Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (v) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_VirtualDOM_Driver.runUI(ui)(v))(function (v1) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Cycle.run2(main$prime)(Data_Tuple_Nested.tuple2(dom(v1))(kb))))(function () {
                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
            });
        });
    }));
})();
module.exports = {
    Coords: Coords, 
    Left: Left, 
    Right: Right, 
    Up: Up, 
    Down: Down, 
    MoveCursor: MoveCursor, 
    ClearBoard: ClearBoard, 
    dom: dom, 
    initialState: initialState, 
    isInvalidPoint: isInvalidPoint, 
    kb: kb, 
    main: main, 
    sendDirections: sendDirections, 
    ui: ui, 
    yolo: yolo, 
    genericCoords: genericCoords, 
    showCoords: showCoords, 
    eqCoords: eqCoords, 
    ordCoords: ordCoords, 
    onKeyboardDown: $foreign.onKeyboardDown
};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Cycle":52,"../Control.Monad.Aff":61,"../Control.Monad.Aff.AVar":55,"../Control.Monad.Eff":76,"../Control.Monad.Eff.Class":64,"../Control.Monad.Eff.Exception":68,"../Control.Monad.Eff.Ref":70,"../Control.Monad.State.Class":93,"../Control.XStream":106,"../DOM":124,"../Data.Array":128,"../Data.Eq":147,"../Data.Function":166,"../Data.Functor":173,"../Data.Generic":175,"../Data.HeytingAlgebra":177,"../Data.Maybe":192,"../Data.Monoid":200,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Set":219,"../Data.Show":221,"../Data.Tuple.Nested":228,"../Data.Unit":233,"../Halogen":257,"../Halogen.Aff":238,"../Halogen.Aff.Util":237,"../Halogen.Component":240,"../Halogen.HTML":247,"../Halogen.HTML.Core":244,"../Halogen.HTML.Elements":245,"../Halogen.HTML.Properties":246,"../Halogen.Query":252,"../Halogen.Query.HalogenM":251,"../Halogen.VirtualDOM.Driver":253,"../Prelude":266,"./foreign":258}],260:[function(require,module,exports){
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],261:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
module.exports = {
    abs: $foreign.abs, 
    acos: $foreign.acos, 
    asin: $foreign.asin, 
    atan: $foreign.atan, 
    atan2: $foreign.atan2, 
    ceil: $foreign.ceil, 
    cos: $foreign.cos, 
    e: $foreign.e, 
    exp: $foreign.exp, 
    floor: $foreign.floor, 
    ln10: $foreign.ln10, 
    ln2: $foreign.ln2, 
    log: $foreign.log, 
    log10e: $foreign.log10e, 
    log2e: $foreign.log2e, 
    max: $foreign.max, 
    min: $foreign.min, 
    pi: $foreign.pi, 
    pow: $foreign.pow, 
    remainder: $foreign.remainder, 
    round: $foreign.round, 
    sin: $foreign.sin, 
    sqrt: $foreign.sqrt, 
    sqrt1_2: $foreign.sqrt1_2, 
    sqrt2: $foreign.sqrt2, 
    tan: $foreign.tan, 
    trunc: $foreign.trunc
};

},{"./foreign":260}],262:[function(require,module,exports){
"use strict";

// module Partial.Unsafe

exports.unsafePartial = function (f) {
  return f();
};

},{}],263:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var Partial = require("../Partial");
var unsafeCrashWith = function (msg) {
    return $foreign.unsafePartial(function (dictPartial) {
        return Partial.crashWith(dictPartial)(msg);
    });
};
module.exports = {
    unsafeCrashWith: unsafeCrashWith, 
    unsafePartial: $foreign.unsafePartial
};

},{"../Partial":265,"./foreign":262}],264:[function(require,module,exports){
"use strict";

// module Partial

exports.crashWith = function () {
  return function (msg) {
    throw new Error(msg);
  };
};

},{}],265:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
var crash = function (dictPartial) {
    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
};
module.exports = {
    crash: crash, 
    crashWith: $foreign.crashWith
};

},{"./foreign":264}],266:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
module.exports = {};

},{"../Control.Applicative":41,"../Control.Apply":43,"../Control.Bind":47,"../Control.Category":48,"../Control.Monad":98,"../Control.Semigroupoid":104,"../Data.Boolean":132,"../Data.BooleanAlgebra":133,"../Data.Bounded":135,"../Data.CommutativeRing":140,"../Data.Eq":147,"../Data.EuclideanRing":149,"../Data.Field":151,"../Data.Function":166,"../Data.Functor":173,"../Data.HeytingAlgebra":177,"../Data.NaturalTransformation":201,"../Data.Ord":209,"../Data.Ordering":210,"../Data.Ring":214,"../Data.Semigroup":216,"../Data.Semiring":218,"../Data.Show":221,"../Data.Unit":233,"../Data.Void":234}],267:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var Proxy3 = (function () {
    function Proxy3() {

    };
    Proxy3.value = new Proxy3();
    return Proxy3;
})();
var Proxy2 = (function () {
    function Proxy2() {

    };
    Proxy2.value = new Proxy2();
    return Proxy2;
})();
var $$Proxy = (function () {
    function Proxy() {

    };
    Proxy.value = new Proxy();
    return Proxy;
})();
module.exports = {
    "Proxy": $$Proxy, 
    Proxy2: Proxy2, 
    Proxy3: Proxy3
};

},{}],268:[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};

},{}],269:[function(require,module,exports){
// Generated by psc version 0.10.1
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":268}],270:[function(require,module,exports){
require('Main').main();

},{"Main":259}]},{},[270]);
